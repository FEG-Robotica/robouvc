

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Oct 28 17:29:37 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4431
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73  0000                     
    74                           ; Version 2.10
    75                           ; Generated 31/07/2019 GMT
    76                           ; 
    77                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F4431 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108  0000                     
   109                           	psect	idataBANK0
   110  003274                     __pidataBANK0:
   111                           	opt callstack 0
   112                           
   113                           ;initializer for _setpoint
   114                           ;./Seguidor.h: 13: int PID_int = 0;;./Seguidor.h: 14: int porcVelo = 3;;./Seguidor.h: 15
      +                          : double sensor[7];;./Seguidor.h: 16: double leitura[7];;./Seguidor.h: 17: double posin 
      +                          = 0;;./Seguidor.h: 18: double pos = 0;;./Seguidor.h: 19: double setpoint = 3.0;
   115  003274  0000               	dw	0
   116  003276  4040               	dw	16448
   117                           
   118                           ;initializer for _porcVelo
   119  003278  0003               	dw	3
   120                           
   121                           ;initializer for _comando
   122  00327A  A1                 	db	low (STR_52+1)
   123  00327B  03                 	db	high (STR_52+1)
   124  0000                     _INTCONbits	set	4082
   125  0000                     _PORTE	set	3972
   126  0000                     _PORTD	set	3971
   127  0000                     _PORTC	set	3970
   128  0000                     _PORTB	set	3969
   129  0000                     _TRISE	set	3990
   130  0000                     _TRISD	set	3989
   131  0000                     _TRISC	set	3988
   132  0000                     _TRISB	set	3987
   133  0000                     _TRISA	set	3986
   134  0000                     _ANSEL1	set	4025
   135  0000                     _ANSEL0	set	4024
   136  0000                     _TMR0L	set	4054
   137  0000                     _T0CON	set	4053
   138  0000                     _PORTBbits	set	3969
   139  0000                     _PDC3H	set	3954
   140  0000                     _PDC3L	set	3955
   141  0000                     _PDC2H	set	3956
   142  0000                     _PDC2L	set	3957
   143  0000                     _PDC1H	set	3958
   144  0000                     _PDC1L	set	3959
   145  0000                     _PDC0H	set	3960
   146  0000                     _PDC0L	set	3961
   147  0000                     _PTPERH	set	3962
   148  0000                     _PTPERL	set	3963
   149  0000                     _OVDCONS	set	3946
   150  0000                     _OVDCOND	set	3947
   151  0000                     _DTCON	set	3949
   152  0000                     _PWMCON1	set	3950
   153  0000                     _PWMCON0	set	3951
   154  0000                     _PTCON1	set	3966
   155  0000                     _PTCON0	set	3967
   156  0000                     _ADCHSbits	set	3993
   157  0000                     _ADRESL	set	4035
   158  0000                     _ADRESH	set	4036
   159  0000                     _ADCON3	set	3994
   160  0000                     _ADCON2bits	set	4032
   161  0000                     _ADCON0bits	set	4034
   162  0000                     _ADCON1bits	set	4033
   163  0000                     _TXREG	set	4013
   164  0000                     _RCREG	set	4014
   165  0000                     _PIR1bits	set	3998
   166  0000                     _TRISCbits	set	3988
   167  0000                     _RCSTAbits	set	4011
   168  0000                     _PIE1bits	set	3997
   169  0000                     _TXSTAbits	set	4012
   170  0000                     _SPBRG	set	4015
   171  0000                     _TMR0IF	set	32658
   172  0000                     _TMR0ON	set	32431
   173  0000                     _RC3	set	31763
   174  0000                     _RC2	set	31762
   175  0000                     _RC1	set	31761
   176  0000                     _RC0	set	31760
   177  0000                     _TRMT	set	32097
   178                           
   179                           	psect	smallconst
   180  000300                     __psmallconst:
   181                           	opt callstack 0
   182  000300  00                 	db	0
   183  000301                     STR_5:
   184  000301  50                 	db	80	;'P'
   185  000302  57                 	db	87	;'W'
   186  000303  4D                 	db	77	;'M'
   187  000304  41                 	db	65	;'A'
   188  000305  20                 	db	32
   189  000306  54                 	db	84	;'T'
   190  000307  65                 	db	101	;'e'
   191  000308  73                 	db	115	;'s'
   192  000309  74                 	db	116	;'t'
   193  00030A  65                 	db	101	;'e'
   194  00030B  20                 	db	32
   195  00030C  46                 	db	70	;'F'
   196  00030D  69                 	db	105	;'i'
   197  00030E  6D                 	db	109	;'m'
   198  00030F  00                 	db	0
   199  000310                     STR_2:
   200  000310  50                 	db	80	;'P'
   201  000311  57                 	db	87	;'W'
   202  000312  4D                 	db	77	;'M'
   203  000313  41                 	db	65	;'A'
   204  000314  20                 	db	32
   205  000315  54                 	db	84	;'T'
   206  000316  65                 	db	101	;'e'
   207  000317  73                 	db	115	;'s'
   208  000318  74                 	db	116	;'t'
   209  000319  61                 	db	97	;'a'
   210  00031A  6E                 	db	110	;'n'
   211  00031B  64                 	db	100	;'d'
   212  00031C  6F                 	db	111	;'o'
   213  00031D  00                 	db	0
   214  00031E                     STR_46:
   215  00031E  74                 	db	116	;'t'
   216  00031F  65                 	db	101	;'e'
   217  000320  73                 	db	115	;'s'
   218  000321  74                 	db	116	;'t'
   219  000322  65                 	db	101	;'e'
   220  000323  4C                 	db	76	;'L'
   221  000324  61                 	db	97	;'a'
   222  000325  6D                 	db	109	;'m'
   223  000326  70                 	db	112	;'p'
   224  000327  61                 	db	97	;'a'
   225  000328  64                 	db	100	;'d'
   226  000329  61                 	db	97	;'a'
   227  00032A  73                 	db	115	;'s'
   228  00032B  00                 	db	0
   229  00032C                     STR_45:
   230  00032C  74                 	db	116	;'t'
   231  00032D  65                 	db	101	;'e'
   232  00032E  73                 	db	115	;'s'
   233  00032F  74                 	db	116	;'t'
   234  000330  65                 	db	101	;'e'
   235  000331  4D                 	db	77	;'M'
   236  000332  6F                 	db	111	;'o'
   237  000333  74                 	db	116	;'t'
   238  000334  6F                 	db	111	;'o'
   239  000335  72                 	db	114	;'r'
   240  000336  65                 	db	101	;'e'
   241  000337  73                 	db	115	;'s'
   242  000338  00                 	db	0
   243  000339                     STR_38:
   244  000339  2D                 	db	45
   245  00033A  2D                 	db	45
   246  00033B  2D                 	db	45
   247  00033C  2D                 	db	45
   248  00033D  2D                 	db	45
   249  00033E  2D                 	db	45
   250  00033F  2D                 	db	45
   251  000340  2D                 	db	45
   252  000341  2D                 	db	45
   253  000342  2D                 	db	45
   254  000343  00                 	db	0
   255  000344                     STR_49:
   256  000344  74                 	db	116	;'t'
   257  000345  65                 	db	101	;'e'
   258  000346  73                 	db	115	;'s'
   259  000347  74                 	db	116	;'t'
   260  000348  65                 	db	101	;'e'
   261  000349  41                 	db	65	;'A'
   262  00034A  44                 	db	68	;'D'
   263  00034B  62                 	db	98	;'b'
   264  00034C  69                 	db	105	;'i'
   265  00034D  74                 	db	116	;'t'
   266  00034E  00                 	db	0
   267  00034F                     STR_44:
   268  00034F  54                 	db	84	;'T'
   269  000350  69                 	db	105	;'i'
   270  000351  6D                 	db	109	;'m'
   271  000352  65                 	db	101	;'e'
   272  000353  72                 	db	114	;'r'
   273  000354  30                 	db	48	;'0'
   274  000355  20                 	db	32
   275  000356  6F                 	db	111	;'o'
   276  000357  6E                 	db	110	;'n'
   277  000358  00                 	db	0
   278  000359                     STR_22:
   279  000359  41                 	db	65	;'A'
   280  00035A  4E                 	db	78	;'N'
   281  00035B  30                 	db	48	;'0'
   282  00035C  3A                 	db	58	;':'
   283  00035D  20                 	db	32
   284  00035E  00                 	db	0
   285  00035F                     STR_24:
   286  00035F  41                 	db	65	;'A'
   287  000360  4E                 	db	78	;'N'
   288  000361  31                 	db	49	;'1'
   289  000362  3A                 	db	58	;':'
   290  000363  20                 	db	32
   291  000364  00                 	db	0
   292  000365                     STR_26:
   293  000365  41                 	db	65	;'A'
   294  000366  4E                 	db	78	;'N'
   295  000367  32                 	db	50	;'2'
   296  000368  3A                 	db	58	;':'
   297  000369  20                 	db	32
   298  00036A  00                 	db	0
   299  00036B                     STR_28:
   300  00036B  41                 	db	65	;'A'
   301  00036C  4E                 	db	78	;'N'
   302  00036D  33                 	db	51	;'3'
   303  00036E  3A                 	db	58	;':'
   304  00036F  20                 	db	32
   305  000370  00                 	db	0
   306  000371                     STR_30:
   307  000371  41                 	db	65	;'A'
   308  000372  4E                 	db	78	;'N'
   309  000373  34                 	db	52	;'4'
   310  000374  3A                 	db	58	;':'
   311  000375  20                 	db	32
   312  000376  00                 	db	0
   313  000377                     STR_32:
   314  000377  41                 	db	65	;'A'
   315  000378  4E                 	db	78	;'N'
   316  000379  35                 	db	53	;'5'
   317  00037A  3A                 	db	58	;':'
   318  00037B  20                 	db	32
   319  00037C  00                 	db	0
   320  00037D                     STR_34:
   321  00037D  41                 	db	65	;'A'
   322  00037E  4E                 	db	78	;'N'
   323  00037F  36                 	db	54	;'6'
   324  000380  3A                 	db	58	;':'
   325  000381  20                 	db	32
   326  000382  00                 	db	0
   327  000383                     STR_36:
   328  000383  41                 	db	65	;'A'
   329  000384  4E                 	db	78	;'N'
   330  000385  37                 	db	55	;'7'
   331  000386  3A                 	db	58	;':'
   332  000387  20                 	db	32
   333  000388  00                 	db	0
   334  000389                     STR_65:
   335  000389  66                 	db	102	;'f'
   336  00038A  69                 	db	105	;'i'
   337  00038B  6E                 	db	110	;'n'
   338  00038C  61                 	db	97	;'a'
   339  00038D  6C                 	db	108	;'l'
   340  00038E  00                 	db	0
   341  00038F                     STR_51:
   342  00038F  49                 	db	73	;'I'
   343  000390  44                 	db	68	;'D'
   344  000391  4C                 	db	76	;'L'
   345  000392  45                 	db	69	;'E'
   346  000393  00                 	db	0
   347  000394                     STR_3:
   348  000394  69                 	db	105	;'i'
   349  000395  64                 	db	100	;'d'
   350  000396  6C                 	db	108	;'l'
   351  000397  65                 	db	101	;'e'
   352  000398  00                 	db	0
   353  000399                     STR_48:
   354  000399  50                 	db	80	;'P'
   355  00039A  49                 	db	73	;'I'
   356  00039B  44                 	db	68	;'D'
   357  00039C  00                 	db	0
   358  00039D                     STR_47:
   359  00039D  41                 	db	65	;'A'
   360  00039E  44                 	db	68	;'D'
   361  00039F  00                 	db	0
   362  0003A0                     STR_52:
   363  0003A0  00                 	db	0
   364  0003A1  00                 	db	0
   365  0003A2                     STR_23:
   366  0003A2  0D                 	db	13
   367  0003A3  00                 	db	0
   368  0000                     
   369                           ; #config settings
   370  0003A4  00                 	db	0	; dummy byte at the end
   371  0000                     
   372                           	psect	cinit
   373  002F52                     __pcinit:
   374                           	opt callstack 0
   375  002F52                     start_initialization:
   376                           	opt callstack 0
   377  002F52                     __initialization:
   378                           	opt callstack 0
   379                           
   380                           ; Initialize objects allocated to BANK0 (8 bytes)
   381                           ; load TBLPTR registers with __pidataBANK0
   382  002F52  0E74               	movlw	low __pidataBANK0
   383  002F54  6EF6               	movwf	tblptrl,c
   384  002F56  0E32               	movlw	high __pidataBANK0
   385  002F58  6EF7               	movwf	tblptrh,c
   386  002F5A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   387  002F5C  6EF8               	movwf	tblptru,c
   388  002F5E  EE00  F0F8         	lfsr	0,__pdataBANK0
   389  002F62  EE10 F008          	lfsr	1,8
   390  002F66                     copy_data0:
   391  002F66  0009               	tblrd		*+
   392  002F68  CFF5 FFEE          	movff	tablat,postinc0
   393  002F6C  50E5               	movf	postdec1,w,c
   394  002F6E  50E1               	movf	fsr1l,w,c
   395  002F70  E1FA               	bnz	copy_data0
   396                           
   397                           ; Clear objects allocated to BANK1 (56 bytes)
   398  002F72  EE01  F000         	lfsr	0,__pbssBANK1
   399  002F76  0E38               	movlw	56
   400  002F78                     clear_0:
   401  002F78  6AEE               	clrf	postinc0,c
   402  002F7A  06E8               	decf	wreg,f,c
   403  002F7C  E1FD               	bnz	clear_0
   404                           
   405                           ; Clear objects allocated to BANK0 (69 bytes)
   406  002F7E  EE00  F0B3         	lfsr	0,__pbssBANK0
   407  002F82  0E45               	movlw	69
   408  002F84                     clear_1:
   409  002F84  6AEE               	clrf	postinc0,c
   410  002F86  06E8               	decf	wreg,f,c
   411  002F88  E1FD               	bnz	clear_1
   412                           
   413                           ; Clear objects allocated to COMRAM (12 bytes)
   414  002F8A  EE00  F041         	lfsr	0,__pbssCOMRAM
   415  002F8E  0E0C               	movlw	12
   416  002F90                     clear_2:
   417  002F90  6AEE               	clrf	postinc0,c
   418  002F92  06E8               	decf	wreg,f,c
   419  002F94  E1FD               	bnz	clear_2
   420  002F96                     end_of_initialization:
   421                           	opt callstack 0
   422  002F96                     __end_of__initialization:
   423                           	opt callstack 0
   424  002F96  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   425  002F98  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   426  002F9A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   427  002F9C  6EF8               	movwf	tblptru,c
   428  002F9E  0100               	movlb	0
   429  002FA0  EF4B  F00D         	goto	_main	;jump to C main() function
   430                           
   431                           	psect	bssCOMRAM
   432  000041                     __pbssCOMRAM:
   433                           	opt callstack 0
   434  000041                     	ds	5
   435  000046                     _vanal_AN:
   436                           	opt callstack 0
   437  000046                     	ds	4
   438  00004A                     _recebidoChar:
   439                           	opt callstack 0
   440  00004A                     	ds	1
   441  00004B                     _vdig_AN:
   442                           	opt callstack 0
   443  00004B                     	ds	2
   444                           
   445                           	psect	bssBANK0
   446  0000B3                     __pbssBANK0:
   447                           	opt callstack 0
   448  0000B3                     	ds	5
   449  0000B8                     _erroi:
   450                           	opt callstack 0
   451  0000B8                     	ds	4
   452  0000BC                     _tf:
   453                           	opt callstack 0
   454  0000BC                     	ds	4
   455  0000C0                     _de:
   456                           	opt callstack 0
   457  0000C0                     	ds	4
   458  0000C4                     _dt:
   459                           	opt callstack 0
   460  0000C4                     	ds	4
   461  0000C8                     _kd:
   462                           	opt callstack 0
   463  0000C8                     	ds	4
   464  0000CC                     _ki:
   465                           	opt callstack 0
   466  0000CC                     	ds	4
   467  0000D0                     _kp:
   468                           	opt callstack 0
   469  0000D0                     	ds	4
   470  0000D4                     _PID:
   471                           	opt callstack 0
   472  0000D4                     	ds	4
   473  0000D8                     _D:
   474                           	opt callstack 0
   475  0000D8                     	ds	4
   476  0000DC                     _I:
   477                           	opt callstack 0
   478  0000DC                     	ds	4
   479  0000E0                     _P:
   480                           	opt callstack 0
   481  0000E0                     	ds	4
   482  0000E4                     _erro:
   483                           	opt callstack 0
   484  0000E4                     	ds	4
   485  0000E8                     _pos:
   486                           	opt callstack 0
   487  0000E8                     	ds	4
   488  0000EC                     _posin:
   489                           	opt callstack 0
   490  0000EC                     	ds	4
   491  0000F0                     _millis:
   492                           	opt callstack 0
   493  0000F0                     	ds	4
   494  0000F4                     _PID_int:
   495                           	opt callstack 0
   496  0000F4                     	ds	2
   497  0000F6                     	ds	2
   498                           
   499                           	psect	dataBANK0
   500  0000F8                     __pdataBANK0:
   501                           	opt callstack 0
   502  0000F8                     _setpoint:
   503                           	opt callstack 0
   504  0000F8                     	ds	4
   505  0000FC                     _porcVelo:
   506                           	opt callstack 0
   507  0000FC                     	ds	2
   508  0000FE                     _comando:
   509                           	opt callstack 0
   510  0000FE                     	ds	2
   511                           
   512                           	psect	bssBANK1
   513  000100                     __pbssBANK1:
   514                           	opt callstack 0
   515  000100                     _leitura:
   516                           	opt callstack 0
   517  000100                     	ds	28
   518  00011C                     _sensor:
   519                           	opt callstack 0
   520  00011C                     	ds	28
   521                           
   522                           	psect	cstackBANK1
   523  000138                     __pcstackBANK1:
   524                           	opt callstack 0
   525  000138                     ??_testeAD:
   526  000138                     ??_testeADbit:
   527  000138                     testeMotores@i:
   528                           	opt callstack 0
   529                           
   530                           ; 2 bytes @ 0x0
   531  000138                     	ds	2
   532  00013A                     testeADbit@string:
   533                           	opt callstack 0
   534                           
   535                           ; 2 bytes @ 0x2
   536  00013A                     	ds	2
   537  00013C                     testeADbit@i:
   538                           	opt callstack 0
   539                           
   540                           ; 2 bytes @ 0x4
   541  00013C                     	ds	2
   542                           
   543                           	psect	cstackBANK0
   544  000060                     __pcstackBANK0:
   545                           	opt callstack 0
   546  000060                     ?___fladd:
   547                           	opt callstack 0
   548  000060                     ___fladd@b:
   549                           	opt callstack 0
   550  000060                     _readAD_AN$1565:
   551                           	opt callstack 0
   552                           
   553                           ; 4 bytes @ 0x0
   554  000060                     	ds	4
   555  000064                     ___fladd@a:
   556                           	opt callstack 0
   557                           
   558                           ; 4 bytes @ 0x4
   559  000064                     	ds	4
   560  000068                     ___fladd@signs:
   561                           	opt callstack 0
   562                           
   563                           ; 1 bytes @ 0x8
   564  000068                     	ds	1
   565  000069                     ___fladd@aexp:
   566                           	opt callstack 0
   567                           
   568                           ; 1 bytes @ 0x9
   569  000069                     	ds	1
   570  00006A                     ___fladd@bexp:
   571                           	opt callstack 0
   572                           
   573                           ; 1 bytes @ 0xA
   574  00006A                     	ds	1
   575  00006B                     ___fladd@grs:
   576                           	opt callstack 0
   577                           
   578                           ; 1 bytes @ 0xB
   579  00006B                     	ds	1
   580  00006C                     ?___flsub:
   581                           	opt callstack 0
   582  00006C                     ___flsub@b:
   583                           	opt callstack 0
   584                           
   585                           ; 4 bytes @ 0xC
   586  00006C                     	ds	4
   587  000070                     ___flsub@a:
   588                           	opt callstack 0
   589                           
   590                           ; 4 bytes @ 0x10
   591  000070                     	ds	4
   592  000074                     ?___fldiv:
   593                           	opt callstack 0
   594  000074                     ___fldiv@b:
   595                           	opt callstack 0
   596                           
   597                           ; 4 bytes @ 0x14
   598  000074                     	ds	4
   599  000078                     ___fldiv@a:
   600                           	opt callstack 0
   601                           
   602                           ; 4 bytes @ 0x18
   603  000078                     	ds	4
   604  00007C                     ??___fldiv:
   605                           
   606                           ; 1 bytes @ 0x1C
   607  00007C                     	ds	4
   608  000080                     ___fldiv@rem:
   609                           	opt callstack 0
   610                           
   611                           ; 4 bytes @ 0x20
   612  000080                     	ds	4
   613  000084                     ___fldiv@sign:
   614                           	opt callstack 0
   615                           
   616                           ; 1 bytes @ 0x24
   617  000084                     	ds	1
   618  000085                     ___fldiv@new_exp:
   619                           	opt callstack 0
   620                           
   621                           ; 2 bytes @ 0x25
   622  000085                     	ds	2
   623  000087                     ___fldiv@grs:
   624                           	opt callstack 0
   625                           
   626                           ; 4 bytes @ 0x27
   627  000087                     	ds	4
   628  00008B                     ___fldiv@bexp:
   629                           	opt callstack 0
   630                           
   631                           ; 1 bytes @ 0x2B
   632  00008B                     	ds	1
   633  00008C                     ___fldiv@aexp:
   634                           	opt callstack 0
   635                           
   636                           ; 1 bytes @ 0x2C
   637  00008C                     	ds	1
   638  00008D                     ?_posicao:
   639                           	opt callstack 0
   640  00008D                     ?___fltol:
   641                           	opt callstack 0
   642  00008D                     ___fltol@f1:
   643                           	opt callstack 0
   644                           
   645                           ; 4 bytes @ 0x2D
   646  00008D                     	ds	4
   647  000091                     ??___fltol:
   648  000091                     posicao@local:
   649                           	opt callstack 0
   650                           
   651                           ; 4 bytes @ 0x31
   652  000091                     	ds	4
   653  000095                     ?_getAD_AN:
   654                           	opt callstack 0
   655  000095                     getAD_AN@porta:
   656                           	opt callstack 0
   657  000095                     posicao@pos:
   658                           	opt callstack 0
   659  000095                     moverMotor@PID:
   660                           	opt callstack 0
   661                           
   662                           ; 4 bytes @ 0x35
   663  000095                     	ds	2
   664  000097                     getAD_AN@ANread:
   665                           	opt callstack 0
   666                           
   667                           ; 4 bytes @ 0x37
   668  000097                     	ds	2
   669  000099                     posicao@total:
   670                           	opt callstack 0
   671                           
   672                           ; 4 bytes @ 0x39
   673  000099                     	ds	2
   674  00009B                     ??_configDA:
   675  00009B                     ?_valorConvUART:
   676                           	opt callstack 0
   677  00009B                     valorConvUART@valor:
   678                           	opt callstack 0
   679                           
   680                           ; 2 bytes @ 0x3B
   681  00009B                     	ds	2
   682  00009D                     valorConvUART@centena:
   683                           	opt callstack 0
   684  00009D                     posicao@i:
   685                           	opt callstack 0
   686  00009D                     _configDA$1566:
   687                           	opt callstack 0
   688                           
   689                           ; 4 bytes @ 0x3D
   690  00009D                     	ds	2
   691  00009F                     valorConvUART@dezena:
   692                           	opt callstack 0
   693                           
   694                           ; 2 bytes @ 0x3F
   695  00009F                     	ds	2
   696  0000A1                     valorConvUART@unidade:
   697                           	opt callstack 0
   698  0000A1                     configDA@i:
   699                           	opt callstack 0
   700                           
   701                           ; 2 bytes @ 0x41
   702  0000A1                     	ds	2
   703  0000A3                     _valorConvUART$1563:
   704                           	opt callstack 0
   705  0000A3                     _setPID$1567:
   706                           	opt callstack 0
   707                           
   708                           ; 4 bytes @ 0x43
   709  0000A3                     	ds	2
   710  0000A5                     valorConvUART@string:
   711                           	opt callstack 0
   712                           
   713                           ; 5 bytes @ 0x45
   714  0000A5                     	ds	2
   715  0000A7                     _setPID$1568:
   716                           	opt callstack 0
   717                           
   718                           ; 4 bytes @ 0x47
   719  0000A7                     	ds	3
   720  0000AA                     UARTSendString@str:
   721                           	opt callstack 0
   722                           
   723                           ; 2 bytes @ 0x4A
   724  0000AA                     	ds	2
   725  0000AC                     UARTSendString@max_length:
   726                           	opt callstack 0
   727                           
   728                           ; 2 bytes @ 0x4C
   729  0000AC                     	ds	2
   730  0000AE                     ??_UARTSendString:
   731                           
   732                           ; 1 bytes @ 0x4E
   733  0000AE                     	ds	2
   734  0000B0                     UARTSendString@i:
   735                           	opt callstack 0
   736                           
   737                           ; 2 bytes @ 0x50
   738  0000B0                     	ds	2
   739  0000B2                     ??_main:
   740                           
   741                           ; 1 bytes @ 0x52
   742  0000B2                     	ds	1
   743                           
   744                           	psect	cstackCOMRAM
   745  000001                     __pcstackCOMRAM:
   746                           	opt callstack 0
   747  000001                     ?i2___wmul:
   748                           	opt callstack 0
   749  000001                     i2UARTReadChar@ler:
   750                           	opt callstack 0
   751  000001                     i2UARTSendChar@c:
   752                           	opt callstack 0
   753  000001                     setComando@c:
   754                           	opt callstack 0
   755  000001                     i2___wmul@multiplier:
   756                           	opt callstack 0
   757                           
   758                           ; 2 bytes @ 0x0
   759  000001                     	ds	1
   760  000002                     i2UARTSendString@str:
   761                           	opt callstack 0
   762                           
   763                           ; 2 bytes @ 0x1
   764  000002                     	ds	1
   765  000003                     i2___wmul@multiplicand:
   766                           	opt callstack 0
   767                           
   768                           ; 2 bytes @ 0x2
   769  000003                     	ds	1
   770  000004                     i2UARTSendString@max_length:
   771                           	opt callstack 0
   772                           
   773                           ; 2 bytes @ 0x3
   774  000004                     	ds	1
   775  000005                     i2___wmul@product:
   776                           	opt callstack 0
   777                           
   778                           ; 2 bytes @ 0x4
   779  000005                     	ds	1
   780  000006                     ??i2_UARTSendString:
   781                           
   782                           ; 1 bytes @ 0x5
   783  000006                     	ds	1
   784  000007                     i2setDutyPWM0@porcVelo:
   785                           	opt callstack 0
   786  000007                     i2setDutyPWM2@porcVelo:
   787                           	opt callstack 0
   788  000007                     i2setDutyPWM4@porcVelo:
   789                           	opt callstack 0
   790  000007                     i2setDutyPWM6@porcVelo:
   791                           	opt callstack 0
   792                           
   793                           ; 2 bytes @ 0x6
   794  000007                     	ds	1
   795  000008                     i2UARTSendString@i:
   796                           	opt callstack 0
   797                           
   798                           ; 2 bytes @ 0x7
   799  000008                     	ds	1
   800  000009                     i2setDutyPWM0@velo:
   801                           	opt callstack 0
   802  000009                     i2setDutyPWM2@velo:
   803                           	opt callstack 0
   804  000009                     i2setDutyPWM4@velo:
   805                           	opt callstack 0
   806  000009                     i2setDutyPWM6@velo:
   807                           	opt callstack 0
   808                           
   809                           ; 2 bytes @ 0x8
   810  000009                     	ds	2
   811  00000B                     ??_ISR:
   812                           
   813                           ; 1 bytes @ 0xA
   814  00000B                     	ds	8
   815  000013                     ?_bitExtract:
   816                           	opt callstack 0
   817  000013                     ?_strcmp:
   818                           	opt callstack 0
   819  000013                     ?_readAD_ANbit:
   820                           	opt callstack 0
   821  000013                     ?___wmul:
   822                           	opt callstack 0
   823  000013                     ?___awdiv:
   824                           	opt callstack 0
   825  000013                     ?___xxtofl:
   826                           	opt callstack 0
   827  000013                     UARTReadChar@ler:
   828                           	opt callstack 0
   829  000013                     UARTSendChar@c:
   830                           	opt callstack 0
   831  000013                     bitExtract@numero:
   832                           	opt callstack 0
   833  000013                     initTimer0@tempoInicial:
   834                           	opt callstack 0
   835  000013                     ___wmul@multiplier:
   836                           	opt callstack 0
   837  000013                     ___awdiv@dividend:
   838                           	opt callstack 0
   839  000013                     strcmp@l:
   840                           	opt callstack 0
   841  000013                     ___fleq@ff1:
   842                           	opt callstack 0
   843  000013                     ___flge@ff1:
   844                           	opt callstack 0
   845  000013                     ___xxtofl@val:
   846                           	opt callstack 0
   847                           
   848                           ; 4 bytes @ 0x12
   849  000013                     	ds	2
   850  000015                     bitExtract@k:
   851                           	opt callstack 0
   852  000015                     ___wmul@multiplicand:
   853                           	opt callstack 0
   854  000015                     ___awdiv@divisor:
   855                           	opt callstack 0
   856  000015                     strcmp@r:
   857                           	opt callstack 0
   858                           
   859                           ; 2 bytes @ 0x14
   860  000015                     	ds	2
   861  000017                     ??_strcmp:
   862  000017                     ??___xxtofl:
   863  000017                     ___awdiv@counter:
   864                           	opt callstack 0
   865  000017                     bitExtract@p:
   866                           	opt callstack 0
   867  000017                     ___wmul@product:
   868                           	opt callstack 0
   869  000017                     ___fleq@ff2:
   870                           	opt callstack 0
   871  000017                     ___flge@ff2:
   872                           	opt callstack 0
   873                           
   874                           ; 4 bytes @ 0x16
   875  000017                     	ds	1
   876  000018                     ?_myStrncmp:
   877                           	opt callstack 0
   878  000018                     ___awdiv@sign:
   879                           	opt callstack 0
   880  000018                     myStrncmp@str1:
   881                           	opt callstack 0
   882                           
   883                           ; 2 bytes @ 0x17
   884  000018                     	ds	1
   885  000019                     ??_bitExtract:
   886  000019                     setDutyPWM0@porcVelo:
   887                           	opt callstack 0
   888  000019                     setDutyPWM2@porcVelo:
   889                           	opt callstack 0
   890  000019                     setDutyPWM4@porcVelo:
   891                           	opt callstack 0
   892  000019                     setDutyPWM6@porcVelo:
   893                           	opt callstack 0
   894  000019                     ___awdiv@quotient:
   895                           	opt callstack 0
   896                           
   897                           ; 2 bytes @ 0x18
   898  000019                     	ds	1
   899  00001A                     myStrncmp@str2:
   900                           	opt callstack 0
   901                           
   902                           ; 2 bytes @ 0x19
   903  00001A                     	ds	1
   904  00001B                     ??___fleq:
   905  00001B                     ??___flge:
   906  00001B                     ?___awmod:
   907                           	opt callstack 0
   908  00001B                     ___xxtofl@sign:
   909                           	opt callstack 0
   910  00001B                     setDutyPWM0@velo:
   911                           	opt callstack 0
   912  00001B                     setDutyPWM2@velo:
   913                           	opt callstack 0
   914  00001B                     setDutyPWM4@velo:
   915                           	opt callstack 0
   916  00001B                     setDutyPWM6@velo:
   917                           	opt callstack 0
   918  00001B                     ___awmod@dividend:
   919                           	opt callstack 0
   920                           
   921                           ; 2 bytes @ 0x1A
   922  00001B                     	ds	1
   923  00001C                     ___xxtofl@exp:
   924                           	opt callstack 0
   925                           
   926                           ; 1 bytes @ 0x1B
   927  00001C                     	ds	1
   928  00001D                     lados@porcVelo:
   929                           	opt callstack 0
   930  00001D                     ___awmod@divisor:
   931                           	opt callstack 0
   932  00001D                     ___xxtofl@arg:
   933                           	opt callstack 0
   934                           
   935                           ; 4 bytes @ 0x1C
   936  00001D                     	ds	2
   937  00001F                     lados@lado:
   938                           	opt callstack 0
   939  00001F                     ___awmod@counter:
   940                           	opt callstack 0
   941                           
   942                           ; 1 bytes @ 0x1E
   943  00001F                     	ds	1
   944  000020                     ___awmod@sign:
   945                           	opt callstack 0
   946                           
   947                           ; 1 bytes @ 0x1F
   948  000020                     	ds	1
   949  000021                     ??_testeLampadas:
   950  000021                     ?_getAD_ANbit:
   951                           	opt callstack 0
   952  000021                     ?___flmul:
   953                           	opt callstack 0
   954  000021                     getAD_ANbit@porta:
   955                           	opt callstack 0
   956  000021                     ___flmul@b:
   957                           	opt callstack 0
   958                           
   959                           ; 4 bytes @ 0x20
   960  000021                     	ds	2
   961  000023                     getAD_ANbit@ANread:
   962                           	opt callstack 0
   963  000023                     testeLampadas@i:
   964                           	opt callstack 0
   965                           
   966                           ; 2 bytes @ 0x22
   967  000023                     	ds	2
   968  000025                     ?_valorConvUARTbit:
   969                           	opt callstack 0
   970  000025                     valorConvUARTbit@valor:
   971                           	opt callstack 0
   972  000025                     ___flmul@a:
   973                           	opt callstack 0
   974                           
   975                           ; 4 bytes @ 0x24
   976  000025                     	ds	2
   977  000027                     valorConvUARTbit@milhar:
   978                           	opt callstack 0
   979                           
   980                           ; 2 bytes @ 0x26
   981  000027                     	ds	2
   982  000029                     ??___flmul:
   983  000029                     valorConvUARTbit@centena:
   984                           	opt callstack 0
   985                           
   986                           ; 2 bytes @ 0x28
   987  000029                     	ds	2
   988  00002B                     valorConvUARTbit@dezena:
   989                           	opt callstack 0
   990                           
   991                           ; 2 bytes @ 0x2A
   992  00002B                     	ds	2
   993  00002D                     ___flmul@sign:
   994                           	opt callstack 0
   995  00002D                     valorConvUARTbit@unidade:
   996                           	opt callstack 0
   997                           
   998                           ; 2 bytes @ 0x2C
   999  00002D                     	ds	1
  1000  00002E                     ___flmul@aexp:
  1001                           	opt callstack 0
  1002                           
  1003                           ; 1 bytes @ 0x2D
  1004  00002E                     	ds	1
  1005  00002F                     _valorConvUARTbit$1564:
  1006                           	opt callstack 0
  1007  00002F                     ___flmul@grs:
  1008                           	opt callstack 0
  1009                           
  1010                           ; 4 bytes @ 0x2E
  1011  00002F                     	ds	2
  1012  000031                     valorConvUARTbit@string:
  1013                           	opt callstack 0
  1014                           
  1015                           ; 5 bytes @ 0x30
  1016  000031                     	ds	2
  1017  000033                     ___flmul@bexp:
  1018                           	opt callstack 0
  1019                           
  1020                           ; 1 bytes @ 0x32
  1021  000033                     	ds	1
  1022  000034                     ___flmul@prod:
  1023                           	opt callstack 0
  1024                           
  1025                           ; 4 bytes @ 0x33
  1026  000034                     	ds	4
  1027  000038                     ___flmul@temp:
  1028                           	opt callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x37
  1031  000038                     	ds	2
  1032  00003A                     ??___fladd:
  1033  00003A                     ?_readAD_AN:
  1034                           	opt callstack 0
  1035                           
  1036                           ; 4 bytes @ 0x39
  1037  00003A                     	ds	4
  1038  00003E                     ??_posicao:
  1039  00003E                     ___fltol@sign1:
  1040                           	opt callstack 0
  1041                           
  1042                           ; 1 bytes @ 0x3D
  1043  00003E                     	ds	1
  1044  00003F                     ___fltol@exp1:
  1045                           	opt callstack 0
  1046                           
  1047                           ; 1 bytes @ 0x3E
  1048  00003F                     	ds	1
  1049  000040                     ??_testeMotores:
  1050  000040                     
  1051                           ; 1 bytes @ 0x3F
  1052  000040                     	ds	1
  1053                           
  1054 ;;
  1055 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1056 ;;
  1057 ;; *************** function _main *****************
  1058 ;; Defined at:
  1059 ;;		line 91 in file "main.c"
  1060 ;; Parameters:    Size  Location     Type
  1061 ;;		None
  1062 ;; Auto vars:     Size  Location     Type
  1063 ;;  AN6             2    0        int 
  1064 ;;  AN5             2    0        int 
  1065 ;;  AN4             2    0        int 
  1066 ;;  AN3             2    0        int 
  1067 ;;  AN2             2    0        int 
  1068 ;;  AN1             2    0        int 
  1069 ;;  AN0             2    0        int 
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  1    wreg      void 
  1072 ;; Registers used:
  1073 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1079 ;;      Params:         0       0       0       0
  1080 ;;      Locals:         0       0       0       0
  1081 ;;      Temps:          0       1       0       0
  1082 ;;      Totals:         0       1       0       0
  1083 ;;Total ram usage:        1 bytes
  1084 ;; Hardware stack levels required when called:    9
  1085 ;; This function calls:
  1086 ;;		_UARTReadChar
  1087 ;;		_UARTSendChar
  1088 ;;		_UARTSendString
  1089 ;;		_configAD
  1090 ;;		_configBits
  1091 ;;		_configPWM
  1092 ;;		_configUSART
  1093 ;;		_initTimer0
  1094 ;;		_myStrncmp
  1095 ;;		_setDutyPWM0
  1096 ;;		_setDutyPWM2
  1097 ;;		_setDutyPWM4
  1098 ;;		_setDutyPWM6
  1099 ;;		_setPID
  1100 ;;		_testeAD
  1101 ;;		_testeADbit
  1102 ;;		_testeLampadas
  1103 ;;		_testeMotores
  1104 ;; This function is called by:
  1105 ;;		Startup code after reset
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           	psect	text0
  1110  001A96                     __ptext0:
  1111                           	opt callstack 0
  1112  001A96                     _main:
  1113                           	opt callstack 22
  1114  001A96                     
  1115                           ;main.c: 96:     _delay((unsigned long)((20)*(20000000/4000.0)));
  1116  001A96  0E82               	movlw	130
  1117  001A98  0100               	movlb	0	; () banked
  1118  001A9A  6FB2               	movwf	??_main& (0+255),b
  1119  001A9C  0EDD               	movlw	221
  1120  001A9E                     u5557:
  1121  001A9E  2EE8               	decfsz	wreg,f,c
  1122  001AA0  D7FE               	bra	u5557
  1123  001AA2  2FB2               	decfsz	??_main& (0+255),f,b
  1124  001AA4  D7FC               	bra	u5557
  1125  001AA6  F000 F000          	nop2	
  1126  001AAA                     
  1127                           ;main.c: 98:     ANSEL0 = 0b11111111;
  1128  001AAA  68B8               	setf	184,c	;volatile
  1129  001AAC                     
  1130                           ;main.c: 99:     ANSEL1 = 0b00000001;
  1131  001AAC  0E01               	movlw	1
  1132  001AAE  6EB9               	movwf	185,c	;volatile
  1133  001AB0                     
  1134                           ;main.c: 101:     TRISA = 0b11111111;
  1135  001AB0  6892               	setf	146,c	;volatile
  1136  001AB2                     
  1137                           ;main.c: 102:     TRISB = 0b00000000;
  1138  001AB2  0E00               	movlw	0
  1139  001AB4  6E93               	movwf	147,c	;volatile
  1140  001AB6                     
  1141                           ;main.c: 103:     TRISC = 0b10000000;
  1142  001AB6  0E80               	movlw	128
  1143  001AB8  6E94               	movwf	148,c	;volatile
  1144  001ABA                     
  1145                           ;main.c: 104:     TRISD = 0b00011100;
  1146  001ABA  0E1C               	movlw	28
  1147  001ABC  6E95               	movwf	149,c	;volatile
  1148  001ABE                     
  1149                           ;main.c: 105:     TRISE = 0b00000111;
  1150  001ABE  0E07               	movlw	7
  1151  001AC0  6E96               	movwf	150,c	;volatile
  1152  001AC2                     
  1153                           ;main.c: 107:     PORTB = 0b00000000;
  1154  001AC2  0E00               	movlw	0
  1155  001AC4  6E81               	movwf	129,c	;volatile
  1156  001AC6                     
  1157                           ;main.c: 108:     PORTC = 0b11111111;
  1158  001AC6  6882               	setf	130,c	;volatile
  1159  001AC8                     
  1160                           ;main.c: 109:     PORTD = 0b00000000;
  1161  001AC8  0E00               	movlw	0
  1162  001ACA  6E83               	movwf	131,c	;volatile
  1163  001ACC                     
  1164                           ;main.c: 110:     PORTE = 0b00000000;
  1165  001ACC  0E00               	movlw	0
  1166  001ACE  6E84               	movwf	132,c	;volatile
  1167  001AD0                     
  1168                           ;main.c: 112:     INTCONbits.GIE = 1;
  1169  001AD0  8EF2               	bsf	242,7,c	;volatile
  1170  001AD2                     
  1171                           ;main.c: 113:     INTCONbits.PEIE = 1;
  1172  001AD2  8CF2               	bsf	242,6,c	;volatile
  1173  001AD4                     
  1174                           ;main.c: 114:     INTCONbits.TMR0IE = 1;
  1175  001AD4  8AF2               	bsf	242,5,c	;volatile
  1176  001AD6                     
  1177                           ;main.c: 116:     configBits();
  1178  001AD6  EC48  F019         	call	_configBits	;wreg free
  1179  001ADA                     
  1180                           ;main.c: 117:     configUSART();
  1181  001ADA  EC05  F019         	call	_configUSART	;wreg free
  1182  001ADE                     
  1183                           ;main.c: 118:     configPWM();
  1184  001ADE  ECD2  F018         	call	_configPWM	;wreg free
  1185  001AE2                     
  1186                           ;main.c: 119:     configAD();
  1187  001AE2  ECE4  F018         	call	_configAD	;wreg free
  1188  001AE6                     
  1189                           ;main.c: 121:     initTimer0(99);
  1190  001AE6  0E00               	movlw	0
  1191  001AE8  6E14               	movwf	(initTimer0@tempoInicial+1)^0,c
  1192  001AEA  0E63               	movlw	99
  1193  001AEC  6E13               	movwf	initTimer0@tempoInicial^0,c
  1194  001AEE  EC30  F019         	call	_initTimer0	;wreg free
  1195  001AF2                     
  1196                           ;main.c: 123:     comando = "\0";
  1197  001AF2  0EA0               	movlw	low STR_52
  1198  001AF4  0100               	movlb	0	; () banked
  1199  001AF6  6FFE               	movwf	_comando& (0+255),b
  1200  001AF8  0E03               	movlw	high STR_52
  1201  001AFA  6FFF               	movwf	(_comando+1)& (0+255),b
  1202  001AFC                     l5143:
  1203                           
  1204                           ;main.c: 129:         if (myStrncmp(comando, "idle")) {
  1205  001AFC  C0FE  F018         	movff	_comando,myStrncmp@str1
  1206  001B00  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  1207  001B04  0E94               	movlw	low STR_3
  1208  001B06  6E1A               	movwf	myStrncmp@str2^0,c
  1209  001B08  0E03               	movlw	high STR_3
  1210  001B0A  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  1211  001B0C  ECF6  F017         	call	_myStrncmp	;wreg free
  1212  001B10  5018               	movf	?_myStrncmp^0,w,c
  1213  001B12  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  1214  001B14  B4D8               	btfsc	status,2,c
  1215  001B16  EF8F  F00D         	goto	u5471
  1216  001B1A  EF91  F00D         	goto	u5470
  1217  001B1E                     u5471:
  1218  001B1E  EF95  F00D         	goto	l5147
  1219  001B22                     u5470:
  1220  001B22                     
  1221                           ;main.c: 130:             UARTSendChar(UARTReadChar());
  1222  001B22  EC3E  F019         	call	_UARTReadChar	;wreg free
  1223  001B26  EC24  F019         	call	_UARTSendChar
  1224  001B2A                     l5147:
  1225                           
  1226                           ;main.c: 133:         if (myStrncmp(comando, "testeMotores")) {
  1227  001B2A  C0FE  F018         	movff	_comando,myStrncmp@str1
  1228  001B2E  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  1229  001B32  0E2C               	movlw	low STR_45
  1230  001B34  6E1A               	movwf	myStrncmp@str2^0,c
  1231  001B36  0E03               	movlw	high STR_45
  1232  001B38  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  1233  001B3A  ECF6  F017         	call	_myStrncmp	;wreg free
  1234  001B3E  5018               	movf	?_myStrncmp^0,w,c
  1235  001B40  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  1236  001B42  B4D8               	btfsc	status,2,c
  1237  001B44  EFA6  F00D         	goto	u5481
  1238  001B48  EFA8  F00D         	goto	u5480
  1239  001B4C                     u5481:
  1240  001B4C  EFAA  F00D         	goto	l5151
  1241  001B50                     u5480:
  1242  001B50                     
  1243                           ;main.c: 134:             testeMotores();
  1244  001B50  EC34  F004         	call	_testeMotores	;wreg free
  1245  001B54                     l5151:
  1246                           
  1247                           ;main.c: 137:         if (myStrncmp(comando, "testeLampadas")) {
  1248  001B54  C0FE  F018         	movff	_comando,myStrncmp@str1
  1249  001B58  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  1250  001B5C  0E1E               	movlw	low STR_46
  1251  001B5E  6E1A               	movwf	myStrncmp@str2^0,c
  1252  001B60  0E03               	movlw	high STR_46
  1253  001B62  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  1254  001B64  ECF6  F017         	call	_myStrncmp	;wreg free
  1255  001B68  5018               	movf	?_myStrncmp^0,w,c
  1256  001B6A  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  1257  001B6C  B4D8               	btfsc	status,2,c
  1258  001B6E  EFBB  F00D         	goto	u5491
  1259  001B72  EFBD  F00D         	goto	u5490
  1260  001B76                     u5491:
  1261  001B76  EFBF  F00D         	goto	l361
  1262  001B7A                     u5490:
  1263  001B7A                     
  1264                           ;main.c: 138:             testeLampadas();
  1265  001B7A  ECAA  F010         	call	_testeLampadas	;wreg free
  1266  001B7E                     l361:
  1267                           
  1268                           ;main.c: 141:         if (myStrncmp(comando, "AD")) {
  1269  001B7E  C0FE  F018         	movff	_comando,myStrncmp@str1
  1270  001B82  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  1271  001B86  0E9D               	movlw	low STR_47
  1272  001B88  6E1A               	movwf	myStrncmp@str2^0,c
  1273  001B8A  0E03               	movlw	high STR_47
  1274  001B8C  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  1275  001B8E  ECF6  F017         	call	_myStrncmp	;wreg free
  1276  001B92  5018               	movf	?_myStrncmp^0,w,c
  1277  001B94  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  1278  001B96  B4D8               	btfsc	status,2,c
  1279  001B98  EFD0  F00D         	goto	u5501
  1280  001B9C  EFD2  F00D         	goto	u5500
  1281  001BA0                     u5501:
  1282  001BA0  EFD8  F00D         	goto	l5159
  1283  001BA4                     u5500:
  1284  001BA4                     
  1285                           ;main.c: 142:             UARTSendChar(UARTReadChar());
  1286  001BA4  EC3E  F019         	call	_UARTReadChar	;wreg free
  1287  001BA8  EC24  F019         	call	_UARTSendChar
  1288  001BAC                     
  1289                           ;main.c: 143:             testeAD();
  1290  001BAC  EC50  F00A         	call	_testeAD	;wreg free
  1291  001BB0                     l5159:
  1292                           
  1293                           ;main.c: 146:         if (myStrncmp(comando, "testeADbit")) {
  1294  001BB0  C0FE  F018         	movff	_comando,myStrncmp@str1
  1295  001BB4  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  1296  001BB8  0E44               	movlw	low STR_49
  1297  001BBA  6E1A               	movwf	myStrncmp@str2^0,c
  1298  001BBC  0E03               	movlw	high STR_49
  1299  001BBE  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  1300  001BC0  ECF6  F017         	call	_myStrncmp	;wreg free
  1301  001BC4  5018               	movf	?_myStrncmp^0,w,c
  1302  001BC6  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  1303  001BC8  B4D8               	btfsc	status,2,c
  1304  001BCA  EFE9  F00D         	goto	u5511
  1305  001BCE  EFEB  F00D         	goto	u5510
  1306  001BD2                     u5511:
  1307  001BD2  EFF1  F00D         	goto	l5165
  1308  001BD6                     u5510:
  1309  001BD6                     
  1310                           ;main.c: 147:             UARTSendChar(UARTReadChar());
  1311  001BD6  EC3E  F019         	call	_UARTReadChar	;wreg free
  1312  001BDA  EC24  F019         	call	_UARTSendChar
  1313  001BDE                     
  1314                           ;main.c: 148:             testeADbit();
  1315  001BDE  EC4D  F013         	call	_testeADbit	;wreg free
  1316  001BE2                     l5165:
  1317                           
  1318                           ;main.c: 151:         if (myStrncmp(comando, "PID")) {
  1319  001BE2  C0FE  F018         	movff	_comando,myStrncmp@str1
  1320  001BE6  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  1321  001BEA  0E99               	movlw	low STR_48
  1322  001BEC  6E1A               	movwf	myStrncmp@str2^0,c
  1323  001BEE  0E03               	movlw	high STR_48
  1324  001BF0  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  1325  001BF2  ECF6  F017         	call	_myStrncmp	;wreg free
  1326  001BF6  5018               	movf	?_myStrncmp^0,w,c
  1327  001BF8  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  1328  001BFA  B4D8               	btfsc	status,2,c
  1329  001BFC  EF02  F00E         	goto	u5521
  1330  001C00  EF04  F00E         	goto	u5520
  1331  001C04                     u5521:
  1332  001C04  EF06  F00E         	goto	l5169
  1333  001C08                     u5520:
  1334  001C08                     
  1335                           ;main.c: 152:             setPID();
  1336  001C08  ECE4  F00B         	call	_setPID	;wreg free
  1337  001C0C                     l5169:
  1338                           
  1339                           ;main.c: 155:         if (myStrncmp(comando, "final")) {
  1340  001C0C  C0FE  F018         	movff	_comando,myStrncmp@str1
  1341  001C10  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  1342  001C14  0E89               	movlw	low STR_65
  1343  001C16  6E1A               	movwf	myStrncmp@str2^0,c
  1344  001C18  0E03               	movlw	high STR_65
  1345  001C1A  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  1346  001C1C  ECF6  F017         	call	_myStrncmp	;wreg free
  1347  001C20  5018               	movf	?_myStrncmp^0,w,c
  1348  001C22  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  1349  001C24  B4D8               	btfsc	status,2,c
  1350  001C26  EF17  F00E         	goto	u5531
  1351  001C2A  EF19  F00E         	goto	u5530
  1352  001C2E                     u5531:
  1353  001C2E  EF7E  F00D         	goto	l5143
  1354  001C32                     u5530:
  1355  001C32                     
  1356                           ;main.c: 156:             setPID();
  1357  001C32  ECE4  F00B         	call	_setPID	;wreg free
  1358  001C36                     
  1359                           ;main.c: 157:             RC0 = 0;
  1360  001C36  9082               	bcf	3970,0,c	;volatile
  1361  001C38                     
  1362                           ;main.c: 158:             RC1 = 0;
  1363  001C38  9282               	bcf	3970,1,c	;volatile
  1364  001C3A                     
  1365                           ;main.c: 159:             RC2 = 0;
  1366  001C3A  9482               	bcf	3970,2,c	;volatile
  1367  001C3C                     
  1368                           ;main.c: 160:             RC3 = 0;
  1369  001C3C  9682               	bcf	3970,3,c	;volatile
  1370  001C3E                     
  1371                           ;main.c: 162:             if (millis > 120000) {
  1372  001C3E  0100               	movlb	0	; () banked
  1373  001C40  51F3               	movf	(_millis+3)& (0+255),w,b
  1374  001C42  E10D               	bnz	u5540
  1375  001C44  0EC1               	movlw	193
  1376  001C46  5DF0               	subwf	_millis& (0+255),w,b
  1377  001C48  0ED4               	movlw	212
  1378  001C4A  59F1               	subwfb	(_millis+1)& (0+255),w,b
  1379  001C4C  0E01               	movlw	1
  1380  001C4E  59F2               	subwfb	(_millis+2)& (0+255),w,b
  1381  001C50  A0D8               	btfss	status,0,c
  1382  001C52  EF2D  F00E         	goto	u5541
  1383  001C56  EF2F  F00E         	goto	u5540
  1384  001C5A                     u5541:
  1385  001C5A  EF7E  F00D         	goto	l5143
  1386  001C5E                     u5540:
  1387  001C5E                     
  1388                           ; BSR set to: 0
  1389                           ;main.c: 164:                 UARTSendString("IDLE", 16);
  1390  001C5E  0E8F               	movlw	low STR_51
  1391  001C60  6FAA               	movwf	UARTSendString@str& (0+255),b
  1392  001C62  0E03               	movlw	high STR_51
  1393  001C64  6FAB               	movwf	(UARTSendString@str+1)& (0+255),b
  1394  001C66  0E00               	movlw	0
  1395  001C68  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  1396  001C6A  0E10               	movlw	16
  1397  001C6C  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  1398  001C6E  EC38  F014         	call	_UARTSendString	;wreg free
  1399  001C72                     
  1400                           ;main.c: 165:                 comando = "idle";
  1401  001C72  0E94               	movlw	low STR_3
  1402  001C74  0100               	movlb	0	; () banked
  1403  001C76  6FFE               	movwf	_comando& (0+255),b
  1404  001C78  0E03               	movlw	high STR_3
  1405  001C7A  6FFF               	movwf	(_comando+1)& (0+255),b
  1406  001C7C                     
  1407                           ; BSR set to: 0
  1408                           ;main.c: 166:                 setDutyPWM0(0);
  1409  001C7C  0E00               	movlw	0
  1410  001C7E  6E1A               	movwf	(setDutyPWM0@porcVelo+1)^0,c
  1411  001C80  0E00               	movlw	0
  1412  001C82  6E19               	movwf	setDutyPWM0@porcVelo^0,c
  1413  001C84  EC4D  F018         	call	_setDutyPWM0	;wreg free
  1414  001C88                     
  1415                           ;main.c: 167:                 setDutyPWM2(0);
  1416  001C88  0E00               	movlw	0
  1417  001C8A  6E1A               	movwf	(setDutyPWM2@porcVelo+1)^0,c
  1418  001C8C  0E00               	movlw	0
  1419  001C8E  6E19               	movwf	setDutyPWM2@porcVelo^0,c
  1420  001C90  EC3A  F018         	call	_setDutyPWM2	;wreg free
  1421  001C94                     
  1422                           ;main.c: 168:                 setDutyPWM4(0);
  1423  001C94  0E00               	movlw	0
  1424  001C96  6E1A               	movwf	(setDutyPWM4@porcVelo+1)^0,c
  1425  001C98  0E00               	movlw	0
  1426  001C9A  6E19               	movwf	setDutyPWM4@porcVelo^0,c
  1427  001C9C  EC27  F018         	call	_setDutyPWM4	;wreg free
  1428  001CA0                     
  1429                           ;main.c: 169:                 setDutyPWM6(0);
  1430  001CA0  0E00               	movlw	0
  1431  001CA2  6E1A               	movwf	(setDutyPWM6@porcVelo+1)^0,c
  1432  001CA4  0E00               	movlw	0
  1433  001CA6  6E19               	movwf	setDutyPWM6@porcVelo^0,c
  1434  001CA8  EC14  F018         	call	_setDutyPWM6	;wreg free
  1435  001CAC                     
  1436                           ;main.c: 171:                 RC0 = 1;
  1437  001CAC  8082               	bsf	3970,0,c	;volatile
  1438  001CAE                     
  1439                           ;main.c: 172:                 RC1 = 1;
  1440  001CAE  8282               	bsf	3970,1,c	;volatile
  1441  001CB0                     
  1442                           ;main.c: 173:                 RC2 = 1;
  1443  001CB0  8482               	bsf	3970,2,c	;volatile
  1444  001CB2                     
  1445                           ;main.c: 174:                 RC3 = 1;
  1446  001CB2  8682               	bsf	3970,3,c	;volatile
  1447  001CB4  EF7E  F00D         	goto	l5143
  1448  001CB8  EF25  F001         	goto	start
  1449  001CBC                     __end_of_main:
  1450                           	opt callstack 0
  1451                           
  1452 ;; *************** function _testeMotores *****************
  1453 ;; Defined at:
  1454 ;;		line 115 in file "./geral.h"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;		None
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  i               2    0[BANK1 ] int 
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  1    wreg      void 
  1461 ;; Registers used:
  1462 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1468 ;;      Params:         0       0       0       0
  1469 ;;      Locals:         0       0       2       0
  1470 ;;      Temps:          1       0       0       0
  1471 ;;      Totals:         1       0       2       0
  1472 ;;Total ram usage:        3 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    7
  1475 ;; This function calls:
  1476 ;;		_UARTSendString
  1477 ;;		_myStrncmp
  1478 ;;		_setDutyPWM0
  1479 ;;		_setDutyPWM2
  1480 ;;		_setDutyPWM4
  1481 ;;		_setDutyPWM6
  1482 ;; This function is called by:
  1483 ;;		_main
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           	psect	text1
  1488  000868                     __ptext1:
  1489                           	opt callstack 0
  1490  000868                     _testeMotores:
  1491                           	opt callstack 23
  1492  000868                     
  1493                           ;./geral.h: 117:     for(i = 0; i <= 100; i++){;./geral.h: 118:         setDutyPWM6(i);
  1494  000868  8C81               	bsf	129,6,c	;volatile
  1495                           
  1496                           ;./geral.h: 119:         setDutyPWM4(i);
  1497  00086A  8E81               	bsf	129,7,c	;volatile
  1498  00086C                     
  1499                           ;./geral.h: 123:     setDutyPWM6(0);
  1500  00086C  0E10               	movlw	low STR_2
  1501  00086E  0100               	movlb	0	; () banked
  1502  000870  6FAA               	movwf	UARTSendString@str& (0+255),b
  1503  000872  0E03               	movlw	high STR_2
  1504  000874  6FAB               	movwf	(UARTSendString@str+1)& (0+255),b
  1505  000876  0E00               	movlw	0
  1506  000878  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  1507  00087A  0E10               	movlw	16
  1508  00087C  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  1509  00087E  EC38  F014         	call	_UARTSendString	;wreg free
  1510  000882                     
  1511                           ;./geral.h: 124:     setDutyPWM4(0);
  1512  000882  0E00               	movlw	0
  1513  000884  0101               	movlb	1	; () banked
  1514  000886  6F39               	movwf	(testeMotores@i+1)& (0+255),b
  1515  000888  0E00               	movlw	0
  1516  00088A  6F38               	movwf	testeMotores@i& (0+255),b
  1517  00088C                     l4739:
  1518                           
  1519                           ; BSR set to: 1
  1520                           ;./geral.h: 125: }
  1521  00088C  C138  F019         	movff	testeMotores@i,setDutyPWM0@porcVelo
  1522  000890  C139  F01A         	movff	testeMotores@i+1,setDutyPWM0@porcVelo+1
  1523  000894  EC4D  F018         	call	_setDutyPWM0	;wreg free
  1524  000898                     
  1525                           ;./geral.h: 126: 
  1526  000898  0E82               	movlw	130
  1527  00089A  6E40               	movwf	??_testeMotores^0,c
  1528  00089C  0EDE               	movlw	222
  1529  00089E                     u5567:
  1530  00089E  2EE8               	decfsz	wreg,f,c
  1531  0008A0  D7FE               	bra	u5567
  1532  0008A2  2E40               	decfsz	??_testeMotores^0,f,c
  1533  0008A4  D7FC               	bra	u5567
  1534  0008A6                     
  1535                           ;./geral.h: 127: 
  1536  0008A6  C0FE  F018         	movff	_comando,myStrncmp@str1
  1537  0008AA  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  1538  0008AE  0E94               	movlw	low STR_3
  1539  0008B0  6E1A               	movwf	myStrncmp@str2^0,c
  1540  0008B2  0E03               	movlw	high STR_3
  1541  0008B4  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  1542  0008B6  ECF6  F017         	call	_myStrncmp	;wreg free
  1543  0008BA  5018               	movf	?_myStrncmp^0,w,c
  1544  0008BC  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  1545  0008BE  B4D8               	btfsc	status,2,c
  1546  0008C0  EF64  F004         	goto	u5051
  1547  0008C4  EF66  F004         	goto	u5050
  1548  0008C8                     u5051:
  1549  0008C8  EF68  F004         	goto	l4747
  1550  0008CC                     u5050:
  1551  0008CC  EF79  F004         	goto	l4751
  1552  0008D0                     l4747:
  1553                           
  1554                           ;./geral.h: 128: 
  1555  0008D0  0101               	movlb	1	; () banked
  1556  0008D2  4B38               	infsnz	testeMotores@i& (0+255),f,b
  1557  0008D4  2B39               	incf	(testeMotores@i+1)& (0+255),f,b
  1558  0008D6                     
  1559                           ; BSR set to: 1
  1560  0008D6  BF39               	btfsc	(testeMotores@i+1)& (0+255),7,b
  1561  0008D8  EF77  F004         	goto	u5061
  1562  0008DC  5139               	movf	(testeMotores@i+1)& (0+255),w,b
  1563  0008DE  E109               	bnz	u5060
  1564  0008E0  0E65               	movlw	101
  1565  0008E2  5D38               	subwf	testeMotores@i& (0+255),w,b
  1566  0008E4  A0D8               	btfss	status,0,c
  1567  0008E6  EF77  F004         	goto	u5061
  1568  0008EA  EF79  F004         	goto	u5060
  1569  0008EE                     u5061:
  1570  0008EE  EF46  F004         	goto	l4739
  1571  0008F2                     u5060:
  1572  0008F2                     l4751:
  1573                           
  1574                           ;./geral.h: 129: 
  1575  0008F2  0E01               	movlw	low STR_5
  1576  0008F4  0100               	movlb	0	; () banked
  1577  0008F6  6FAA               	movwf	UARTSendString@str& (0+255),b
  1578  0008F8  0E03               	movlw	high STR_5
  1579  0008FA  6FAB               	movwf	(UARTSendString@str+1)& (0+255),b
  1580  0008FC  0E00               	movlw	0
  1581  0008FE  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  1582  000900  0E10               	movlw	16
  1583  000902  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  1584  000904  EC38  F014         	call	_UARTSendString	;wreg free
  1585  000908                     
  1586                           ;./geral.h: 130: void testeLampadas(){
  1587  000908  0E00               	movlw	0
  1588  00090A  6E1A               	movwf	(setDutyPWM0@porcVelo+1)^0,c
  1589  00090C  0E00               	movlw	0
  1590  00090E  6E19               	movwf	setDutyPWM0@porcVelo^0,c
  1591  000910  EC4D  F018         	call	_setDutyPWM0	;wreg free
  1592  000914                     
  1593                           ;./geral.h: 133:     for(i = 0; i < 16; i++){
  1594  000914  0E00               	movlw	0
  1595  000916  0101               	movlb	1	; () banked
  1596  000918  6F39               	movwf	(testeMotores@i+1)& (0+255),b
  1597  00091A  0E00               	movlw	0
  1598  00091C  6F38               	movwf	testeMotores@i& (0+255),b
  1599  00091E                     l4761:
  1600                           
  1601                           ; BSR set to: 1
  1602                           ;./geral.h: 134:         RC0 = bitExtract(i, 1, 0);
  1603  00091E  C138  F019         	movff	testeMotores@i,setDutyPWM6@porcVelo
  1604  000922  C139  F01A         	movff	testeMotores@i+1,setDutyPWM6@porcVelo+1
  1605  000926  EC14  F018         	call	_setDutyPWM6	;wreg free
  1606  00092A                     
  1607                           ;./geral.h: 135:         RC1 = bitExtract(i, 1, 1);
  1608  00092A  0E82               	movlw	130
  1609  00092C  6E40               	movwf	??_testeMotores^0,c
  1610  00092E  0EDE               	movlw	222
  1611  000930                     u5577:
  1612  000930  2EE8               	decfsz	wreg,f,c
  1613  000932  D7FE               	bra	u5577
  1614  000934  2E40               	decfsz	??_testeMotores^0,f,c
  1615  000936  D7FC               	bra	u5577
  1616  000938                     
  1617                           ;./geral.h: 136:         RC2 = bitExtract(i, 1, 2);
  1618  000938  C0FE  F018         	movff	_comando,myStrncmp@str1
  1619  00093C  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  1620  000940  0E94               	movlw	low STR_3
  1621  000942  6E1A               	movwf	myStrncmp@str2^0,c
  1622  000944  0E03               	movlw	high STR_3
  1623  000946  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  1624  000948  ECF6  F017         	call	_myStrncmp	;wreg free
  1625  00094C  5018               	movf	?_myStrncmp^0,w,c
  1626  00094E  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  1627  000950  B4D8               	btfsc	status,2,c
  1628  000952  EFAD  F004         	goto	u5071
  1629  000956  EFAF  F004         	goto	u5070
  1630  00095A                     u5071:
  1631  00095A  EFB1  F004         	goto	l4769
  1632  00095E                     u5070:
  1633  00095E  EFC2  F004         	goto	l4773
  1634  000962                     l4769:
  1635                           
  1636                           ;./geral.h: 137:         RC3 = bitExtract(i, 1, 3);
  1637  000962  0101               	movlb	1	; () banked
  1638  000964  4B38               	infsnz	testeMotores@i& (0+255),f,b
  1639  000966  2B39               	incf	(testeMotores@i+1)& (0+255),f,b
  1640  000968                     
  1641                           ; BSR set to: 1
  1642  000968  BF39               	btfsc	(testeMotores@i+1)& (0+255),7,b
  1643  00096A  EFC0  F004         	goto	u5081
  1644  00096E  5139               	movf	(testeMotores@i+1)& (0+255),w,b
  1645  000970  E109               	bnz	u5080
  1646  000972  0E65               	movlw	101
  1647  000974  5D38               	subwf	testeMotores@i& (0+255),w,b
  1648  000976  A0D8               	btfss	status,0,c
  1649  000978  EFC0  F004         	goto	u5081
  1650  00097C  EFC2  F004         	goto	u5080
  1651  000980                     u5081:
  1652  000980  EF8F  F004         	goto	l4761
  1653  000984                     u5080:
  1654  000984                     l4773:
  1655                           
  1656                           ;./geral.h: 138:         if(myStrncmp(comando, "idle")) break;
  1657  000984  0E00               	movlw	0
  1658  000986  6E1A               	movwf	(setDutyPWM6@porcVelo+1)^0,c
  1659  000988  0E00               	movlw	0
  1660  00098A  6E19               	movwf	setDutyPWM6@porcVelo^0,c
  1661  00098C  EC14  F018         	call	_setDutyPWM6	;wreg free
  1662  000990                     
  1663                           ;./geral.h: 141: }
  1664  000990  0E00               	movlw	0
  1665  000992  0101               	movlb	1	; () banked
  1666  000994  6F39               	movwf	(testeMotores@i+1)& (0+255),b
  1667  000996  0E00               	movlw	0
  1668  000998  6F38               	movwf	testeMotores@i& (0+255),b
  1669  00099A                     l4781:
  1670                           
  1671                           ; BSR set to: 1
  1672                           ;./geral.h: 142: 
  1673  00099A  C138  F019         	movff	testeMotores@i,setDutyPWM2@porcVelo
  1674  00099E  C139  F01A         	movff	testeMotores@i+1,setDutyPWM2@porcVelo+1
  1675  0009A2  EC3A  F018         	call	_setDutyPWM2	;wreg free
  1676  0009A6                     
  1677                           ;./geral.h: 143: void testeAD(){
  1678  0009A6  0E82               	movlw	130
  1679  0009A8  6E40               	movwf	??_testeMotores^0,c
  1680  0009AA  0EDE               	movlw	222
  1681  0009AC                     u5587:
  1682  0009AC  2EE8               	decfsz	wreg,f,c
  1683  0009AE  D7FE               	bra	u5587
  1684  0009B0  2E40               	decfsz	??_testeMotores^0,f,c
  1685  0009B2  D7FC               	bra	u5587
  1686  0009B4                     
  1687                           ;./geral.h: 144: 
  1688  0009B4  C0FE  F018         	movff	_comando,myStrncmp@str1
  1689  0009B8  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  1690  0009BC  0E94               	movlw	low STR_3
  1691  0009BE  6E1A               	movwf	myStrncmp@str2^0,c
  1692  0009C0  0E03               	movlw	high STR_3
  1693  0009C2  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  1694  0009C4  ECF6  F017         	call	_myStrncmp	;wreg free
  1695  0009C8  5018               	movf	?_myStrncmp^0,w,c
  1696  0009CA  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  1697  0009CC  B4D8               	btfsc	status,2,c
  1698  0009CE  EFEB  F004         	goto	u5091
  1699  0009D2  EFED  F004         	goto	u5090
  1700  0009D6                     u5091:
  1701  0009D6  EFEF  F004         	goto	l4789
  1702  0009DA                     u5090:
  1703  0009DA  EF00  F005         	goto	l4793
  1704  0009DE                     l4789:
  1705                           
  1706                           ;./geral.h: 145:     UARTSendString("AN0: ",16);
  1707  0009DE  0101               	movlb	1	; () banked
  1708  0009E0  4B38               	infsnz	testeMotores@i& (0+255),f,b
  1709  0009E2  2B39               	incf	(testeMotores@i+1)& (0+255),f,b
  1710  0009E4                     
  1711                           ; BSR set to: 1
  1712  0009E4  BF39               	btfsc	(testeMotores@i+1)& (0+255),7,b
  1713  0009E6  EFFE  F004         	goto	u5101
  1714  0009EA  5139               	movf	(testeMotores@i+1)& (0+255),w,b
  1715  0009EC  E109               	bnz	u5100
  1716  0009EE  0E65               	movlw	101
  1717  0009F0  5D38               	subwf	testeMotores@i& (0+255),w,b
  1718  0009F2  A0D8               	btfss	status,0,c
  1719  0009F4  EFFE  F004         	goto	u5101
  1720  0009F8  EF00  F005         	goto	u5100
  1721  0009FC                     u5101:
  1722  0009FC  EFCD  F004         	goto	l4781
  1723  000A00                     u5100:
  1724  000A00                     l4793:
  1725                           
  1726                           ;./geral.h: 146:     UARTSendString(valorConvUART(getAD_AN(0)), 16);
  1727  000A00  0E00               	movlw	0
  1728  000A02  6E1A               	movwf	(setDutyPWM2@porcVelo+1)^0,c
  1729  000A04  0E00               	movlw	0
  1730  000A06  6E19               	movwf	setDutyPWM2@porcVelo^0,c
  1731  000A08  EC3A  F018         	call	_setDutyPWM2	;wreg free
  1732  000A0C                     
  1733                           ;./geral.h: 149:     UARTSendString("AN1: ",16);
  1734  000A0C  0E00               	movlw	0
  1735  000A0E  0101               	movlb	1	; () banked
  1736  000A10  6F39               	movwf	(testeMotores@i+1)& (0+255),b
  1737  000A12  0E00               	movlw	0
  1738  000A14  6F38               	movwf	testeMotores@i& (0+255),b
  1739  000A16                     l4801:
  1740                           
  1741                           ; BSR set to: 1
  1742                           ;./geral.h: 150:     UARTSendString(valorConvUART(getAD_AN(1)), 16);
  1743  000A16  C138  F019         	movff	testeMotores@i,setDutyPWM2@porcVelo
  1744  000A1A  C139  F01A         	movff	testeMotores@i+1,setDutyPWM2@porcVelo+1
  1745  000A1E  EC3A  F018         	call	_setDutyPWM2	;wreg free
  1746  000A22                     
  1747                           ;./geral.h: 151:     UARTSendString("\r",16);
  1748  000A22  0E82               	movlw	130
  1749  000A24  6E40               	movwf	??_testeMotores^0,c
  1750  000A26  0EDE               	movlw	222
  1751  000A28                     u5597:
  1752  000A28  2EE8               	decfsz	wreg,f,c
  1753  000A2A  D7FE               	bra	u5597
  1754  000A2C  2E40               	decfsz	??_testeMotores^0,f,c
  1755  000A2E  D7FC               	bra	u5597
  1756  000A30                     
  1757                           ;./geral.h: 152: 
  1758  000A30  C0FE  F018         	movff	_comando,myStrncmp@str1
  1759  000A34  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  1760  000A38  0E94               	movlw	low STR_3
  1761  000A3A  6E1A               	movwf	myStrncmp@str2^0,c
  1762  000A3C  0E03               	movlw	high STR_3
  1763  000A3E  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  1764  000A40  ECF6  F017         	call	_myStrncmp	;wreg free
  1765  000A44  5018               	movf	?_myStrncmp^0,w,c
  1766  000A46  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  1767  000A48  B4D8               	btfsc	status,2,c
  1768  000A4A  EF29  F005         	goto	u5111
  1769  000A4E  EF2B  F005         	goto	u5110
  1770  000A52                     u5111:
  1771  000A52  EF2D  F005         	goto	l4809
  1772  000A56                     u5110:
  1773  000A56  EF3E  F005         	goto	l4813
  1774  000A5A                     l4809:
  1775                           
  1776                           ;./geral.h: 153:     UARTSendString("AN2: ",16);
  1777  000A5A  0101               	movlb	1	; () banked
  1778  000A5C  4B38               	infsnz	testeMotores@i& (0+255),f,b
  1779  000A5E  2B39               	incf	(testeMotores@i+1)& (0+255),f,b
  1780  000A60                     
  1781                           ; BSR set to: 1
  1782  000A60  BF39               	btfsc	(testeMotores@i+1)& (0+255),7,b
  1783  000A62  EF3C  F005         	goto	u5121
  1784  000A66  5139               	movf	(testeMotores@i+1)& (0+255),w,b
  1785  000A68  E109               	bnz	u5120
  1786  000A6A  0E65               	movlw	101
  1787  000A6C  5D38               	subwf	testeMotores@i& (0+255),w,b
  1788  000A6E  A0D8               	btfss	status,0,c
  1789  000A70  EF3C  F005         	goto	u5121
  1790  000A74  EF3E  F005         	goto	u5120
  1791  000A78                     u5121:
  1792  000A78  EF0B  F005         	goto	l4801
  1793  000A7C                     u5120:
  1794  000A7C                     l4813:
  1795                           
  1796                           ;./geral.h: 154:     UARTSendString(valorConvUART(getAD_AN(2)), 16);
  1797  000A7C  0E00               	movlw	0
  1798  000A7E  6E1A               	movwf	(setDutyPWM4@porcVelo+1)^0,c
  1799  000A80  0E00               	movlw	0
  1800  000A82  6E19               	movwf	setDutyPWM4@porcVelo^0,c
  1801  000A84  EC27  F018         	call	_setDutyPWM4	;wreg free
  1802  000A88                     
  1803                           ;./geral.h: 157:     UARTSendString("AN3: ",16);
  1804  000A88  0E00               	movlw	0
  1805  000A8A  0101               	movlb	1	; () banked
  1806  000A8C  6F39               	movwf	(testeMotores@i+1)& (0+255),b
  1807  000A8E  0E00               	movlw	0
  1808  000A90  6F38               	movwf	testeMotores@i& (0+255),b
  1809  000A92                     l4821:
  1810                           
  1811                           ; BSR set to: 1
  1812                           ;./geral.h: 158:     UARTSendString(valorConvUART(getAD_AN(3)), 16);
  1813  000A92  C138  F019         	movff	testeMotores@i,setDutyPWM0@porcVelo
  1814  000A96  C139  F01A         	movff	testeMotores@i+1,setDutyPWM0@porcVelo+1
  1815  000A9A  EC4D  F018         	call	_setDutyPWM0	;wreg free
  1816                           
  1817                           ;./geral.h: 159:     UARTSendString("\r",16);
  1818  000A9E  C138  F019         	movff	testeMotores@i,setDutyPWM2@porcVelo
  1819  000AA2  C139  F01A         	movff	testeMotores@i+1,setDutyPWM2@porcVelo+1
  1820  000AA6  EC3A  F018         	call	_setDutyPWM2	;wreg free
  1821  000AAA                     
  1822                           ;./geral.h: 160: 
  1823  000AAA  0E82               	movlw	130
  1824  000AAC  6E40               	movwf	??_testeMotores^0,c
  1825  000AAE  0EDE               	movlw	222
  1826  000AB0                     u5607:
  1827  000AB0  2EE8               	decfsz	wreg,f,c
  1828  000AB2  D7FE               	bra	u5607
  1829  000AB4  2E40               	decfsz	??_testeMotores^0,f,c
  1830  000AB6  D7FC               	bra	u5607
  1831  000AB8                     
  1832                           ;./geral.h: 161:     UARTSendString("AN4: ",16);
  1833  000AB8  C0FE  F018         	movff	_comando,myStrncmp@str1
  1834  000ABC  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  1835  000AC0  0E94               	movlw	low STR_3
  1836  000AC2  6E1A               	movwf	myStrncmp@str2^0,c
  1837  000AC4  0E03               	movlw	high STR_3
  1838  000AC6  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  1839  000AC8  ECF6  F017         	call	_myStrncmp	;wreg free
  1840  000ACC  5018               	movf	?_myStrncmp^0,w,c
  1841  000ACE  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  1842  000AD0  B4D8               	btfsc	status,2,c
  1843  000AD2  EF6D  F005         	goto	u5131
  1844  000AD6  EF6F  F005         	goto	u5130
  1845  000ADA                     u5131:
  1846  000ADA  EF71  F005         	goto	l4829
  1847  000ADE                     u5130:
  1848  000ADE  EF82  F005         	goto	l4833
  1849  000AE2                     l4829:
  1850                           
  1851                           ;./geral.h: 162:     UARTSendString(valorConvUART(getAD_AN(4)), 16);
  1852  000AE2  0101               	movlb	1	; () banked
  1853  000AE4  4B38               	infsnz	testeMotores@i& (0+255),f,b
  1854  000AE6  2B39               	incf	(testeMotores@i+1)& (0+255),f,b
  1855  000AE8                     
  1856                           ; BSR set to: 1
  1857  000AE8  BF39               	btfsc	(testeMotores@i+1)& (0+255),7,b
  1858  000AEA  EF80  F005         	goto	u5141
  1859  000AEE  5139               	movf	(testeMotores@i+1)& (0+255),w,b
  1860  000AF0  E109               	bnz	u5140
  1861  000AF2  0E65               	movlw	101
  1862  000AF4  5D38               	subwf	testeMotores@i& (0+255),w,b
  1863  000AF6  A0D8               	btfss	status,0,c
  1864  000AF8  EF80  F005         	goto	u5141
  1865  000AFC  EF82  F005         	goto	u5140
  1866  000B00                     u5141:
  1867  000B00  EF49  F005         	goto	l4821
  1868  000B04                     u5140:
  1869  000B04                     l4833:
  1870                           
  1871                           ;./geral.h: 163:     UARTSendString("\r",16);
  1872  000B04  0E00               	movlw	0
  1873  000B06  6E1A               	movwf	(setDutyPWM0@porcVelo+1)^0,c
  1874  000B08  0E00               	movlw	0
  1875  000B0A  6E19               	movwf	setDutyPWM0@porcVelo^0,c
  1876  000B0C  EC4D  F018         	call	_setDutyPWM0	;wreg free
  1877                           
  1878                           ;./geral.h: 164: 
  1879  000B10  0E00               	movlw	0
  1880  000B12  6E1A               	movwf	(setDutyPWM2@porcVelo+1)^0,c
  1881  000B14  0E00               	movlw	0
  1882  000B16  6E19               	movwf	setDutyPWM2@porcVelo^0,c
  1883  000B18  EC3A  F018         	call	_setDutyPWM2	;wreg free
  1884  000B1C                     
  1885                           ;./geral.h: 167:     UARTSendString("\r",16);
  1886  000B1C  0E00               	movlw	0
  1887  000B1E  0101               	movlb	1	; () banked
  1888  000B20  6F39               	movwf	(testeMotores@i+1)& (0+255),b
  1889  000B22  0E00               	movlw	0
  1890  000B24  6F38               	movwf	testeMotores@i& (0+255),b
  1891  000B26                     l4841:
  1892                           
  1893                           ; BSR set to: 1
  1894                           ;./geral.h: 168: 
  1895  000B26  C138  F019         	movff	testeMotores@i,setDutyPWM0@porcVelo
  1896  000B2A  C139  F01A         	movff	testeMotores@i+1,setDutyPWM0@porcVelo+1
  1897  000B2E  EC4D  F018         	call	_setDutyPWM0	;wreg free
  1898                           
  1899                           ;./geral.h: 169:     UARTSendString("AN6: ",16);
  1900  000B32  C138  F019         	movff	testeMotores@i,setDutyPWM4@porcVelo
  1901  000B36  C139  F01A         	movff	testeMotores@i+1,setDutyPWM4@porcVelo+1
  1902  000B3A  EC27  F018         	call	_setDutyPWM4	;wreg free
  1903  000B3E                     
  1904                           ;./geral.h: 170:     UARTSendString(valorConvUART(getAD_AN(6)), 16);
  1905  000B3E  0E82               	movlw	130
  1906  000B40  6E40               	movwf	??_testeMotores^0,c
  1907  000B42  0EDE               	movlw	222
  1908  000B44                     u5617:
  1909  000B44  2EE8               	decfsz	wreg,f,c
  1910  000B46  D7FE               	bra	u5617
  1911  000B48  2E40               	decfsz	??_testeMotores^0,f,c
  1912  000B4A  D7FC               	bra	u5617
  1913  000B4C                     
  1914                           ;./geral.h: 171:     UARTSendString("\r",16);
  1915  000B4C  C0FE  F018         	movff	_comando,myStrncmp@str1
  1916  000B50  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  1917  000B54  0E94               	movlw	low STR_3
  1918  000B56  6E1A               	movwf	myStrncmp@str2^0,c
  1919  000B58  0E03               	movlw	high STR_3
  1920  000B5A  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  1921  000B5C  ECF6  F017         	call	_myStrncmp	;wreg free
  1922  000B60  5018               	movf	?_myStrncmp^0,w,c
  1923  000B62  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  1924  000B64  B4D8               	btfsc	status,2,c
  1925  000B66  EFB7  F005         	goto	u5151
  1926  000B6A  EFB9  F005         	goto	u5150
  1927  000B6E                     u5151:
  1928  000B6E  EFBB  F005         	goto	l4849
  1929  000B72                     u5150:
  1930  000B72  EFCC  F005         	goto	l4853
  1931  000B76                     l4849:
  1932                           
  1933                           ;./geral.h: 172: 
  1934  000B76  0101               	movlb	1	; () banked
  1935  000B78  4B38               	infsnz	testeMotores@i& (0+255),f,b
  1936  000B7A  2B39               	incf	(testeMotores@i+1)& (0+255),f,b
  1937  000B7C                     
  1938                           ; BSR set to: 1
  1939  000B7C  BF39               	btfsc	(testeMotores@i+1)& (0+255),7,b
  1940  000B7E  EFCA  F005         	goto	u5161
  1941  000B82  5139               	movf	(testeMotores@i+1)& (0+255),w,b
  1942  000B84  E109               	bnz	u5160
  1943  000B86  0E65               	movlw	101
  1944  000B88  5D38               	subwf	testeMotores@i& (0+255),w,b
  1945  000B8A  A0D8               	btfss	status,0,c
  1946  000B8C  EFCA  F005         	goto	u5161
  1947  000B90  EFCC  F005         	goto	u5160
  1948  000B94                     u5161:
  1949  000B94  EF93  F005         	goto	l4841
  1950  000B98                     u5160:
  1951  000B98                     l4853:
  1952                           
  1953                           ;./geral.h: 173:     UARTSendString("AN7: ",16);
  1954  000B98  0E00               	movlw	0
  1955  000B9A  6E1A               	movwf	(setDutyPWM0@porcVelo+1)^0,c
  1956  000B9C  0E00               	movlw	0
  1957  000B9E  6E19               	movwf	setDutyPWM0@porcVelo^0,c
  1958  000BA0  EC4D  F018         	call	_setDutyPWM0	;wreg free
  1959                           
  1960                           ;./geral.h: 174:     UARTSendString(valorConvUART(getAD_AN(7)), 16);
  1961  000BA4  0E00               	movlw	0
  1962  000BA6  6E1A               	movwf	(setDutyPWM4@porcVelo+1)^0,c
  1963  000BA8  0E00               	movlw	0
  1964  000BAA  6E19               	movwf	setDutyPWM4@porcVelo^0,c
  1965  000BAC  EC27  F018         	call	_setDutyPWM4	;wreg free
  1966  000BB0                     
  1967                           ;./geral.h: 177:     UARTSendString("\r",16);
  1968  000BB0  0E00               	movlw	0
  1969  000BB2  0101               	movlb	1	; () banked
  1970  000BB4  6F39               	movwf	(testeMotores@i+1)& (0+255),b
  1971  000BB6  0E00               	movlw	0
  1972  000BB8  6F38               	movwf	testeMotores@i& (0+255),b
  1973  000BBA                     l4861:
  1974                           
  1975                           ; BSR set to: 1
  1976                           ;./geral.h: 178: 
  1977  000BBA  C138  F019         	movff	testeMotores@i,setDutyPWM6@porcVelo
  1978  000BBE  C139  F01A         	movff	testeMotores@i+1,setDutyPWM6@porcVelo+1
  1979  000BC2  EC14  F018         	call	_setDutyPWM6	;wreg free
  1980                           
  1981                           ;./geral.h: 179:     _delay((unsigned long)((500)*(20000000/4000.0)));
  1982  000BC6  C138  F019         	movff	testeMotores@i,setDutyPWM2@porcVelo
  1983  000BCA  C139  F01A         	movff	testeMotores@i+1,setDutyPWM2@porcVelo+1
  1984  000BCE  EC3A  F018         	call	_setDutyPWM2	;wreg free
  1985  000BD2                     
  1986                           ;./geral.h: 180: }
  1987  000BD2  0E82               	movlw	130
  1988  000BD4  6E40               	movwf	??_testeMotores^0,c
  1989  000BD6  0EDE               	movlw	222
  1990  000BD8                     u5627:
  1991  000BD8  2EE8               	decfsz	wreg,f,c
  1992  000BDA  D7FE               	bra	u5627
  1993  000BDC  2E40               	decfsz	??_testeMotores^0,f,c
  1994  000BDE  D7FC               	bra	u5627
  1995  000BE0                     
  1996                           ;./geral.h: 181: 
  1997  000BE0  C0FE  F018         	movff	_comando,myStrncmp@str1
  1998  000BE4  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  1999  000BE8  0E94               	movlw	low STR_3
  2000  000BEA  6E1A               	movwf	myStrncmp@str2^0,c
  2001  000BEC  0E03               	movlw	high STR_3
  2002  000BEE  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  2003  000BF0  ECF6  F017         	call	_myStrncmp	;wreg free
  2004  000BF4  5018               	movf	?_myStrncmp^0,w,c
  2005  000BF6  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  2006  000BF8  B4D8               	btfsc	status,2,c
  2007  000BFA  EF01  F006         	goto	u5171
  2008  000BFE  EF03  F006         	goto	u5170
  2009  000C02                     u5171:
  2010  000C02  EF05  F006         	goto	l4869
  2011  000C06                     u5170:
  2012  000C06  EF16  F006         	goto	l4873
  2013  000C0A                     l4869:
  2014                           
  2015                           ;./geral.h: 182: void testeADbit(){
  2016  000C0A  0101               	movlb	1	; () banked
  2017  000C0C  4B38               	infsnz	testeMotores@i& (0+255),f,b
  2018  000C0E  2B39               	incf	(testeMotores@i+1)& (0+255),f,b
  2019  000C10                     
  2020                           ; BSR set to: 1
  2021  000C10  BF39               	btfsc	(testeMotores@i+1)& (0+255),7,b
  2022  000C12  EF14  F006         	goto	u5181
  2023  000C16  5139               	movf	(testeMotores@i+1)& (0+255),w,b
  2024  000C18  E109               	bnz	u5180
  2025  000C1A  0E65               	movlw	101
  2026  000C1C  5D38               	subwf	testeMotores@i& (0+255),w,b
  2027  000C1E  A0D8               	btfss	status,0,c
  2028  000C20  EF14  F006         	goto	u5181
  2029  000C24  EF16  F006         	goto	u5180
  2030  000C28                     u5181:
  2031  000C28  EFDD  F005         	goto	l4861
  2032  000C2C                     u5180:
  2033  000C2C                     l4873:
  2034                           
  2035                           ;./geral.h: 183:             for (int i = 0; i < 7; i++) {
  2036  000C2C  0E00               	movlw	0
  2037  000C2E  6E1A               	movwf	(setDutyPWM6@porcVelo+1)^0,c
  2038  000C30  0E00               	movlw	0
  2039  000C32  6E19               	movwf	setDutyPWM6@porcVelo^0,c
  2040  000C34  EC14  F018         	call	_setDutyPWM6	;wreg free
  2041                           
  2042                           ;./geral.h: 184:                 char string[2] = {'\0'};
  2043  000C38  0E00               	movlw	0
  2044  000C3A  6E1A               	movwf	(setDutyPWM2@porcVelo+1)^0,c
  2045  000C3C  0E00               	movlw	0
  2046  000C3E  6E19               	movwf	setDutyPWM2@porcVelo^0,c
  2047  000C40  EC3A  F018         	call	_setDutyPWM2	;wreg free
  2048  000C44                     
  2049                           ;./geral.h: 187: 
  2050  000C44  0E00               	movlw	0
  2051  000C46  0101               	movlb	1	; () banked
  2052  000C48  6F39               	movwf	(testeMotores@i+1)& (0+255),b
  2053  000C4A  0E00               	movlw	0
  2054  000C4C  6F38               	movwf	testeMotores@i& (0+255),b
  2055  000C4E                     l4881:
  2056                           
  2057                           ; BSR set to: 1
  2058                           ;./geral.h: 188:                 UARTSendString(string,16);
  2059  000C4E  C138  F019         	movff	testeMotores@i,setDutyPWM6@porcVelo
  2060  000C52  C139  F01A         	movff	testeMotores@i+1,setDutyPWM6@porcVelo+1
  2061  000C56  EC14  F018         	call	_setDutyPWM6	;wreg free
  2062                           
  2063                           ;./geral.h: 189:                 UARTSendString("\r", 16);
  2064  000C5A  C138  F019         	movff	testeMotores@i,setDutyPWM4@porcVelo
  2065  000C5E  C139  F01A         	movff	testeMotores@i+1,setDutyPWM4@porcVelo+1
  2066  000C62  EC27  F018         	call	_setDutyPWM4	;wreg free
  2067  000C66                     
  2068                           ;./geral.h: 190:                 UARTSendString(valorConvUARTbit(getAD_ANbit(i)), 16);
  2069  000C66  0E82               	movlw	130
  2070  000C68  6E40               	movwf	??_testeMotores^0,c
  2071  000C6A  0EDE               	movlw	222
  2072  000C6C                     u5637:
  2073  000C6C  2EE8               	decfsz	wreg,f,c
  2074  000C6E  D7FE               	bra	u5637
  2075  000C70  2E40               	decfsz	??_testeMotores^0,f,c
  2076  000C72  D7FC               	bra	u5637
  2077  000C74                     
  2078                           ;./geral.h: 191:                 UARTSendString("\r", 16);
  2079  000C74  C0FE  F018         	movff	_comando,myStrncmp@str1
  2080  000C78  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  2081  000C7C  0E94               	movlw	low STR_3
  2082  000C7E  6E1A               	movwf	myStrncmp@str2^0,c
  2083  000C80  0E03               	movlw	high STR_3
  2084  000C82  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  2085  000C84  ECF6  F017         	call	_myStrncmp	;wreg free
  2086  000C88  5018               	movf	?_myStrncmp^0,w,c
  2087  000C8A  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  2088  000C8C  B4D8               	btfsc	status,2,c
  2089  000C8E  EF4B  F006         	goto	u5191
  2090  000C92  EF4D  F006         	goto	u5190
  2091  000C96                     u5191:
  2092  000C96  EF4F  F006         	goto	l4889
  2093  000C9A                     u5190:
  2094  000C9A  EF60  F006         	goto	l4893
  2095  000C9E                     l4889:
  2096                           
  2097                           ;./geral.h: 192:                 UARTSendString("----------",16);
  2098  000C9E  0101               	movlb	1	; () banked
  2099  000CA0  4B38               	infsnz	testeMotores@i& (0+255),f,b
  2100  000CA2  2B39               	incf	(testeMotores@i+1)& (0+255),f,b
  2101  000CA4                     
  2102                           ; BSR set to: 1
  2103  000CA4  BF39               	btfsc	(testeMotores@i+1)& (0+255),7,b
  2104  000CA6  EF5E  F006         	goto	u5201
  2105  000CAA  5139               	movf	(testeMotores@i+1)& (0+255),w,b
  2106  000CAC  E109               	bnz	u5200
  2107  000CAE  0E65               	movlw	101
  2108  000CB0  5D38               	subwf	testeMotores@i& (0+255),w,b
  2109  000CB2  A0D8               	btfss	status,0,c
  2110  000CB4  EF5E  F006         	goto	u5201
  2111  000CB8  EF60  F006         	goto	u5200
  2112  000CBC                     u5201:
  2113  000CBC  EF27  F006         	goto	l4881
  2114  000CC0                     u5200:
  2115  000CC0                     l4893:
  2116                           
  2117                           ;./geral.h: 193:                 UARTSendString("\r",16);
  2118  000CC0  0E00               	movlw	0
  2119  000CC2  6E1A               	movwf	(setDutyPWM6@porcVelo+1)^0,c
  2120  000CC4  0E00               	movlw	0
  2121  000CC6  6E19               	movwf	setDutyPWM6@porcVelo^0,c
  2122  000CC8  EC14  F018         	call	_setDutyPWM6	;wreg free
  2123                           
  2124                           ;./geral.h: 194:             }
  2125  000CCC  0E00               	movlw	0
  2126  000CCE  6E1A               	movwf	(setDutyPWM4@porcVelo+1)^0,c
  2127  000CD0  0E00               	movlw	0
  2128  000CD2  6E19               	movwf	setDutyPWM4@porcVelo^0,c
  2129  000CD4  EC27  F018         	call	_setDutyPWM4	;wreg free
  2130  000CD8  0012               	return		;funcret
  2131  000CDA                     __end_of_testeMotores:
  2132                           	opt callstack 0
  2133                           
  2134 ;; *************** function _testeLampadas *****************
  2135 ;; Defined at:
  2136 ;;		line 200 in file "./geral.h"
  2137 ;; Parameters:    Size  Location     Type
  2138 ;;		None
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;  i               2   34[COMRAM] int 
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  1    wreg      void 
  2143 ;; Registers used:
  2144 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2150 ;;      Params:         0       0       0       0
  2151 ;;      Locals:         2       0       0       0
  2152 ;;      Temps:          2       0       0       0
  2153 ;;      Totals:         4       0       0       0
  2154 ;;Total ram usage:        4 bytes
  2155 ;; Hardware stack levels used:    1
  2156 ;; Hardware stack levels required when called:    6
  2157 ;; This function calls:
  2158 ;;		_bitExtract
  2159 ;;		_myStrncmp
  2160 ;; This function is called by:
  2161 ;;		_main
  2162 ;; This function uses a non-reentrant model
  2163 ;;
  2164                           
  2165                           	psect	text2
  2166  002154                     __ptext2:
  2167                           	opt callstack 0
  2168  002154                     _testeLampadas:
  2169                           	opt callstack 24
  2170  002154  0E00               	movlw	0
  2171  002156  6E24               	movwf	(testeLampadas@i+1)^0,c
  2172  002158  0E00               	movlw	0
  2173  00215A  6E23               	movwf	testeLampadas@i^0,c
  2174  00215C                     l4901:
  2175  00215C  C023  F013         	movff	testeLampadas@i,bitExtract@numero
  2176  002160  C024  F014         	movff	testeLampadas@i+1,bitExtract@numero+1
  2177  002164  0E00               	movlw	0
  2178  002166  6E16               	movwf	(bitExtract@k+1)^0,c
  2179  002168  0E01               	movlw	1
  2180  00216A  6E15               	movwf	bitExtract@k^0,c
  2181  00216C  0E00               	movlw	0
  2182  00216E  6E18               	movwf	(bitExtract@p+1)^0,c
  2183  002170  0E00               	movlw	0
  2184  002172  6E17               	movwf	bitExtract@p^0,c
  2185  002174  EC7C  F017         	call	_bitExtract	;wreg free
  2186  002178  3013               	rrcf	?_bitExtract^0,w,c
  2187  00217A  B0D8               	btfsc	status,0,c
  2188  00217C  EFC2  F010         	goto	u5211
  2189  002180  EFC5  F010         	goto	u5210
  2190  002184                     u5211:
  2191  002184  8082               	bsf	3970,0,c	;volatile
  2192  002186  EFC6  F010         	goto	u5225
  2193  00218A                     u5210:
  2194  00218A  9082               	bcf	3970,0,c	;volatile
  2195  00218C                     u5225:
  2196  00218C  C023  F013         	movff	testeLampadas@i,bitExtract@numero
  2197  002190  C024  F014         	movff	testeLampadas@i+1,bitExtract@numero+1
  2198  002194  0E00               	movlw	0
  2199  002196  6E16               	movwf	(bitExtract@k+1)^0,c
  2200  002198  0E01               	movlw	1
  2201  00219A  6E15               	movwf	bitExtract@k^0,c
  2202  00219C  0E00               	movlw	0
  2203  00219E  6E18               	movwf	(bitExtract@p+1)^0,c
  2204  0021A0  0E01               	movlw	1
  2205  0021A2  6E17               	movwf	bitExtract@p^0,c
  2206  0021A4  EC7C  F017         	call	_bitExtract	;wreg free
  2207  0021A8  3013               	rrcf	?_bitExtract^0,w,c
  2208  0021AA  B0D8               	btfsc	status,0,c
  2209  0021AC  EFDA  F010         	goto	u5231
  2210  0021B0  EFDD  F010         	goto	u5230
  2211  0021B4                     u5231:
  2212  0021B4  8282               	bsf	3970,1,c	;volatile
  2213  0021B6  EFDE  F010         	goto	u5245
  2214  0021BA                     u5230:
  2215  0021BA  9282               	bcf	3970,1,c	;volatile
  2216  0021BC                     u5245:
  2217  0021BC  C023  F013         	movff	testeLampadas@i,bitExtract@numero
  2218  0021C0  C024  F014         	movff	testeLampadas@i+1,bitExtract@numero+1
  2219  0021C4  0E00               	movlw	0
  2220  0021C6  6E16               	movwf	(bitExtract@k+1)^0,c
  2221  0021C8  0E01               	movlw	1
  2222  0021CA  6E15               	movwf	bitExtract@k^0,c
  2223  0021CC  0E00               	movlw	0
  2224  0021CE  6E18               	movwf	(bitExtract@p+1)^0,c
  2225  0021D0  0E02               	movlw	2
  2226  0021D2  6E17               	movwf	bitExtract@p^0,c
  2227  0021D4  EC7C  F017         	call	_bitExtract	;wreg free
  2228  0021D8  3013               	rrcf	?_bitExtract^0,w,c
  2229  0021DA  B0D8               	btfsc	status,0,c
  2230  0021DC  EFF2  F010         	goto	u5251
  2231  0021E0  EFF5  F010         	goto	u5250
  2232  0021E4                     u5251:
  2233  0021E4  8482               	bsf	3970,2,c	;volatile
  2234  0021E6  EFF6  F010         	goto	u5265
  2235  0021EA                     u5250:
  2236  0021EA  9482               	bcf	3970,2,c	;volatile
  2237  0021EC                     u5265:
  2238  0021EC  C023  F013         	movff	testeLampadas@i,bitExtract@numero
  2239  0021F0  C024  F014         	movff	testeLampadas@i+1,bitExtract@numero+1
  2240  0021F4  0E00               	movlw	0
  2241  0021F6  6E16               	movwf	(bitExtract@k+1)^0,c
  2242  0021F8  0E01               	movlw	1
  2243  0021FA  6E15               	movwf	bitExtract@k^0,c
  2244  0021FC  0E00               	movlw	0
  2245  0021FE  6E18               	movwf	(bitExtract@p+1)^0,c
  2246  002200  0E03               	movlw	3
  2247  002202  6E17               	movwf	bitExtract@p^0,c
  2248  002204  EC7C  F017         	call	_bitExtract	;wreg free
  2249  002208  3013               	rrcf	?_bitExtract^0,w,c
  2250  00220A  B0D8               	btfsc	status,0,c
  2251  00220C  EF0A  F011         	goto	u5271
  2252  002210  EF0D  F011         	goto	u5270
  2253  002214                     u5271:
  2254  002214  8682               	bsf	3970,3,c	;volatile
  2255  002216  EF0E  F011         	goto	u5285
  2256  00221A                     u5270:
  2257  00221A  9682               	bcf	3970,3,c	;volatile
  2258  00221C                     u5285:
  2259  00221C  C0FE  F018         	movff	_comando,myStrncmp@str1
  2260  002220  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  2261  002224  0E94               	movlw	low STR_3
  2262  002226  6E1A               	movwf	myStrncmp@str2^0,c
  2263  002228  0E03               	movlw	high STR_3
  2264  00222A  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  2265  00222C  ECF6  F017         	call	_myStrncmp	;wreg free
  2266  002230  5018               	movf	?_myStrncmp^0,w,c
  2267  002232  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  2268  002234  B4D8               	btfsc	status,2,c
  2269  002236  EF1F  F011         	goto	u5291
  2270  00223A  EF21  F011         	goto	u5290
  2271  00223E                     u5291:
  2272  00223E  EF23  F011         	goto	l4907
  2273  002242                     u5290:
  2274  002242  EF40  F011         	goto	l244
  2275  002246                     l4907:
  2276  002246  0E0D               	movlw	13
  2277  002248  6E22               	movwf	(??_testeLampadas+1)^0,c
  2278  00224A  0EAF               	movlw	175
  2279  00224C  6E21               	movwf	??_testeLampadas^0,c
  2280  00224E  0EB6               	movlw	182
  2281  002250                     u5647:
  2282  002250  2EE8               	decfsz	wreg,f,c
  2283  002252  D7FE               	bra	u5647
  2284  002254  2E21               	decfsz	??_testeLampadas^0,f,c
  2285  002256  D7FC               	bra	u5647
  2286  002258  2E22               	decfsz	(??_testeLampadas+1)^0,f,c
  2287  00225A  D7FA               	bra	u5647
  2288  00225C  F000 F000          	nop2	
  2289  002260  4A23               	infsnz	testeLampadas@i^0,f,c
  2290  002262  2A24               	incf	(testeLampadas@i+1)^0,f,c
  2291  002264  BE24               	btfsc	(testeLampadas@i+1)^0,7,c
  2292  002266  EF3E  F011         	goto	u5301
  2293  00226A  5024               	movf	(testeLampadas@i+1)^0,w,c
  2294  00226C  E109               	bnz	u5300
  2295  00226E  0E10               	movlw	16
  2296  002270  5C23               	subwf	testeLampadas@i^0,w,c
  2297  002272  A0D8               	btfss	status,0,c
  2298  002274  EF3E  F011         	goto	u5301
  2299  002278  EF40  F011         	goto	u5300
  2300  00227C                     u5301:
  2301  00227C  EFAE  F010         	goto	l4901
  2302  002280                     u5300:
  2303  002280                     l244:
  2304  002280  0012               	return		;funcret
  2305  002282                     __end_of_testeLampadas:
  2306                           	opt callstack 0
  2307                           
  2308 ;; *************** function _myStrncmp *****************
  2309 ;; Defined at:
  2310 ;;		line 76 in file "./geral.h"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;  str1            2   23[COMRAM] PTR const unsigned char 
  2313 ;;		 -> STR_68(5), STR_52(2), STR_50(5), STR_49(11), 
  2314 ;;		 -> STR_48(4), STR_47(3), STR_46(14), STR_45(13), 
  2315 ;;		 -> STR_1(1), 
  2316 ;;  str2            2   25[COMRAM] PTR const unsigned char 
  2317 ;;		 -> STR_66(6), STR_64(4), STR_62(11), STR_60(3), 
  2318 ;;		 -> STR_58(14), STR_56(13), STR_54(5), STR_21(5), 
  2319 ;;		 -> STR_19(5), STR_17(5), STR_15(5), STR_13(5), 
  2320 ;;		 -> STR_11(5), STR_9(5), STR_7(5), STR_4(5), 
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;		None
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  2   23[COMRAM] int 
  2325 ;; Registers used:
  2326 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2332 ;;      Params:         4       0       0       0
  2333 ;;      Locals:         0       0       0       0
  2334 ;;      Temps:          0       0       0       0
  2335 ;;      Totals:         4       0       0       0
  2336 ;;Total ram usage:        4 bytes
  2337 ;; Hardware stack levels used:    1
  2338 ;; Hardware stack levels required when called:    5
  2339 ;; This function calls:
  2340 ;;		_strcmp
  2341 ;; This function is called by:
  2342 ;;		_testeMotores
  2343 ;;		_testeLampadas
  2344 ;;		_main
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348                           	psect	text3
  2349  002FEC                     __ptext3:
  2350                           	opt callstack 0
  2351  002FEC                     _myStrncmp:
  2352                           	opt callstack 24
  2353  002FEC                     
  2354                           ;./geral.h: 77: 
  2355  002FEC  C018  F013         	movff	myStrncmp@str1,strcmp@l
  2356  002FF0  C019  F014         	movff	myStrncmp@str1+1,strcmp@l+1
  2357  002FF4  C01A  F015         	movff	myStrncmp@str2,strcmp@r
  2358  002FF8  C01B  F016         	movff	myStrncmp@str2+1,strcmp@r+1
  2359  002FFC  EC12  F017         	call	_strcmp	;wreg free
  2360  003000  5013               	movf	?_strcmp^0,w,c
  2361  003002  1014               	iorwf	(?_strcmp+1)^0,w,c
  2362  003004  A4D8               	btfss	status,2,c
  2363  003006  EF07  F018         	goto	u4981
  2364  00300A  EF09  F018         	goto	u4980
  2365  00300E                     u4981:
  2366  00300E  EF0F  F018         	goto	l4661
  2367  003012                     u4980:
  2368  003012                     
  2369                           ;./geral.h: 78: 
  2370  003012  0E00               	movlw	0
  2371  003014  6E19               	movwf	(?_myStrncmp+1)^0,c
  2372  003016  0E01               	movlw	1
  2373  003018  6E18               	movwf	?_myStrncmp^0,c
  2374  00301A  EF13  F018         	goto	l200
  2375  00301E                     l4661:
  2376                           
  2377                           ;./geral.h: 81:         _delay((unsigned long)((20)*(20000000/4000.0)));
  2378  00301E  0E00               	movlw	0
  2379  003020  6E19               	movwf	(?_myStrncmp+1)^0,c
  2380  003022  0E00               	movlw	0
  2381  003024  6E18               	movwf	?_myStrncmp^0,c
  2382  003026                     l200:
  2383  003026  0012               	return		;funcret
  2384  003028                     __end_of_myStrncmp:
  2385                           	opt callstack 0
  2386                           
  2387 ;; *************** function _strcmp *****************
  2388 ;; Defined at:
  2389 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcmp.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;  l               2   18[COMRAM] PTR const unsigned char 
  2392 ;;		 -> STR_68(5), STR_52(2), STR_50(5), STR_49(11), 
  2393 ;;		 -> STR_48(4), STR_47(3), STR_46(14), STR_45(13), 
  2394 ;;		 -> STR_1(1), 
  2395 ;;  r               2   20[COMRAM] PTR const unsigned char 
  2396 ;;		 -> STR_66(6), STR_64(4), STR_62(11), STR_60(3), 
  2397 ;;		 -> STR_58(14), STR_56(13), STR_54(5), STR_21(5), 
  2398 ;;		 -> STR_19(5), STR_17(5), STR_15(5), STR_13(5), 
  2399 ;;		 -> STR_11(5), STR_9(5), STR_7(5), STR_4(5), 
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;		None
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  2   18[COMRAM] int 
  2404 ;; Registers used:
  2405 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2411 ;;      Params:         4       0       0       0
  2412 ;;      Locals:         0       0       0       0
  2413 ;;      Temps:          1       0       0       0
  2414 ;;      Totals:         5       0       0       0
  2415 ;;Total ram usage:        5 bytes
  2416 ;; Hardware stack levels used:    1
  2417 ;; Hardware stack levels required when called:    4
  2418 ;; This function calls:
  2419 ;;		Nothing
  2420 ;; This function is called by:
  2421 ;;		_myStrncmp
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425                           	psect	text4
  2426  002E24                     __ptext4:
  2427                           	opt callstack 0
  2428  002E24                     _strcmp:
  2429                           	opt callstack 24
  2430  002E24  EF18  F017         	goto	l4287
  2431  002E28                     l4285:
  2432  002E28  4A13               	infsnz	strcmp@l^0,f,c
  2433  002E2A  2A14               	incf	(strcmp@l+1)^0,f,c
  2434  002E2C  4A15               	infsnz	strcmp@r^0,f,c
  2435  002E2E  2A16               	incf	(strcmp@r+1)^0,f,c
  2436  002E30                     l4287:
  2437  002E30  C013  FFF6         	movff	strcmp@l,tblptrl
  2438  002E34  C014  FFF7         	movff	strcmp@l+1,tblptrh
  2439  002E38                     	if	0	;tblptru may be non-zero
  2440  002E38                     	endif
  2441  002E38                     	if	0	;tblptru may be non-zero
  2442  002E38                     	endif
  2443  002E38  0008               	tblrd		*
  2444  002E3A  CFF5 F017          	movff	tablat,??_strcmp
  2445  002E3E  C015  FFF6         	movff	strcmp@r,tblptrl
  2446  002E42  C016  FFF7         	movff	strcmp@r+1,tblptrh
  2447  002E46                     	if	0	;tblptru may be non-zero
  2448  002E46                     	endif
  2449  002E46                     	if	0	;tblptru may be non-zero
  2450  002E46                     	endif
  2451  002E46  0008               	tblrd		*
  2452  002E48  50F5               	movf	tablat,w,c
  2453  002E4A  1817               	xorwf	??_strcmp^0,w,c
  2454  002E4C  A4D8               	btfss	status,2,c
  2455  002E4E  EF2B  F017         	goto	u4341
  2456  002E52  EF2D  F017         	goto	u4340
  2457  002E56                     u4341:
  2458  002E56  EF3B  F017         	goto	l4291
  2459  002E5A                     u4340:
  2460  002E5A  C013  FFF6         	movff	strcmp@l,tblptrl
  2461  002E5E  C014  FFF7         	movff	strcmp@l+1,tblptrh
  2462  002E62                     	if	0	;tblptru may be non-zero
  2463  002E62                     	endif
  2464  002E62                     	if	0	;tblptru may be non-zero
  2465  002E62                     	endif
  2466  002E62  0008               	tblrd		*
  2467  002E64  50F5               	movf	tablat,w,c
  2468  002E66  0900               	iorlw	0
  2469  002E68  A4D8               	btfss	status,2,c
  2470  002E6A  EF39  F017         	goto	u4351
  2471  002E6E  EF3B  F017         	goto	u4350
  2472  002E72                     u4351:
  2473  002E72  EF14  F017         	goto	l4285
  2474  002E76                     u4350:
  2475  002E76                     l4291:
  2476  002E76  C013  FFF6         	movff	strcmp@l,tblptrl
  2477  002E7A  C014  FFF7         	movff	strcmp@l+1,tblptrh
  2478  002E7E                     	if	0	;tblptru may be non-zero
  2479  002E7E                     	endif
  2480  002E7E                     	if	0	;tblptru may be non-zero
  2481  002E7E                     	endif
  2482  002E7E  0008               	tblrd		*
  2483  002E80  CFF5 F017          	movff	tablat,??_strcmp
  2484  002E84  C015  FFF6         	movff	strcmp@r,tblptrl
  2485  002E88  C016  FFF7         	movff	strcmp@r+1,tblptrh
  2486  002E8C                     	if	0	;tblptru may be non-zero
  2487  002E8C                     	endif
  2488  002E8C                     	if	0	;tblptru may be non-zero
  2489  002E8C                     	endif
  2490  002E8C  0008               	tblrd		*
  2491  002E8E  50F5               	movf	tablat,w,c
  2492  002E90  5C17               	subwf	??_strcmp^0,w,c
  2493  002E92  6E13               	movwf	?_strcmp^0,c
  2494  002E94  6A14               	clrf	(?_strcmp+1)^0,c
  2495  002E96  A0D8               	btfss	status,0,c
  2496  002E98  0614               	decf	(?_strcmp+1)^0,f,c
  2497  002E9A  0012               	return		;funcret
  2498  002E9C                     __end_of_strcmp:
  2499                           	opt callstack 0
  2500                           
  2501 ;; *************** function _testeADbit *****************
  2502 ;; Defined at:
  2503 ;;		line 252 in file "./geral.h"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;		None
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;  string          2    2[BANK1 ] unsigned char [2]
  2508 ;;  i               2    4[BANK1 ] int 
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  1    wreg      void 
  2511 ;; Registers used:
  2512 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2518 ;;      Params:         0       0       0       0
  2519 ;;      Locals:         0       0       4       0
  2520 ;;      Temps:          0       0       2       0
  2521 ;;      Totals:         0       0       6       0
  2522 ;;Total ram usage:        6 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; Hardware stack levels required when called:    7
  2525 ;; This function calls:
  2526 ;;		_UARTSendString
  2527 ;;		_getAD_ANbit
  2528 ;;		_valorConvUARTbit
  2529 ;; This function is called by:
  2530 ;;		_main
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           	psect	text5
  2535  00269A                     __ptext5:
  2536                           	opt callstack 0
  2537  00269A                     _testeADbit:
  2538                           	opt callstack 23
  2539  00269A  0E00               	movlw	0
  2540  00269C  0101               	movlb	1	; () banked
  2541  00269E  6F3D               	movwf	(testeADbit@i+1)& (0+255),b
  2542  0026A0  0E00               	movlw	0
  2543  0026A2  6F3C               	movwf	testeADbit@i& (0+255),b
  2544  0026A4                     l4953:
  2545                           
  2546                           ; BSR set to: 1
  2547  0026A4  0E00               	movlw	0
  2548  0026A6  6F3B               	movwf	(testeADbit@string+1)& (0+255),b
  2549  0026A8  0E00               	movlw	0
  2550  0026AA  6F3A               	movwf	testeADbit@string& (0+255),b
  2551  0026AC                     
  2552                           ; BSR set to: 1
  2553  0026AC  513C               	movf	testeADbit@i& (0+255),w,b
  2554  0026AE  0F30               	addlw	48
  2555  0026B0  6F3A               	movwf	testeADbit@string& (0+255),b
  2556  0026B2                     
  2557                           ; BSR set to: 1
  2558  0026B2  0E3A               	movlw	low testeADbit@string
  2559  0026B4  0100               	movlb	0	; () banked
  2560  0026B6  6FAA               	movwf	UARTSendString@str& (0+255),b
  2561  0026B8  0E01               	movlw	high testeADbit@string
  2562  0026BA  6FAB               	movwf	(UARTSendString@str+1)& (0+255),b
  2563  0026BC  0E00               	movlw	0
  2564  0026BE  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  2565  0026C0  0E10               	movlw	16
  2566  0026C2  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  2567  0026C4  EC38  F014         	call	_UARTSendString	;wreg free
  2568  0026C8  0EA2               	movlw	low STR_23
  2569  0026CA  0100               	movlb	0	; () banked
  2570  0026CC  6FAA               	movwf	UARTSendString@str& (0+255),b
  2571  0026CE  0E03               	movlw	high STR_23
  2572  0026D0  6FAB               	movwf	(UARTSendString@str+1)& (0+255),b
  2573  0026D2  0E00               	movlw	0
  2574  0026D4  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  2575  0026D6  0E10               	movlw	16
  2576  0026D8  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  2577  0026DA  EC38  F014         	call	_UARTSendString	;wreg free
  2578  0026DE  C13C  F021         	movff	testeADbit@i,getAD_ANbit@porta
  2579  0026E2  C13D  F022         	movff	testeADbit@i+1,getAD_ANbit@porta+1
  2580  0026E6  ECD1  F012         	call	_getAD_ANbit	;wreg free
  2581  0026EA  C021  F025         	movff	?_getAD_ANbit,valorConvUARTbit@valor
  2582  0026EE  C022  F026         	movff	?_getAD_ANbit+1,valorConvUARTbit@valor+1
  2583  0026F2  ECC7  F013         	call	_valorConvUARTbit	;wreg free
  2584  0026F6  C025  F0AA         	movff	?_valorConvUARTbit,UARTSendString@str
  2585  0026FA  C026  F0AB         	movff	?_valorConvUARTbit+1,UARTSendString@str+1
  2586  0026FE  0E00               	movlw	0
  2587  002700  0100               	movlb	0	; () banked
  2588  002702  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  2589  002704  0E10               	movlw	16
  2590  002706  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  2591  002708  EC38  F014         	call	_UARTSendString	;wreg free
  2592  00270C  0EA2               	movlw	low STR_23
  2593  00270E  0100               	movlb	0	; () banked
  2594  002710  6FAA               	movwf	UARTSendString@str& (0+255),b
  2595  002712  0E03               	movlw	high STR_23
  2596  002714  6FAB               	movwf	(UARTSendString@str+1)& (0+255),b
  2597  002716  0E00               	movlw	0
  2598  002718  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  2599  00271A  0E10               	movlw	16
  2600  00271C  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  2601  00271E  EC38  F014         	call	_UARTSendString	;wreg free
  2602  002722  0E39               	movlw	low STR_38
  2603  002724  0100               	movlb	0	; () banked
  2604  002726  6FAA               	movwf	UARTSendString@str& (0+255),b
  2605  002728  0E03               	movlw	high STR_38
  2606  00272A  6FAB               	movwf	(UARTSendString@str+1)& (0+255),b
  2607  00272C  0E00               	movlw	0
  2608  00272E  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  2609  002730  0E10               	movlw	16
  2610  002732  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  2611  002734  EC38  F014         	call	_UARTSendString	;wreg free
  2612  002738  0EA2               	movlw	low STR_23
  2613  00273A  0100               	movlb	0	; () banked
  2614  00273C  6FAA               	movwf	UARTSendString@str& (0+255),b
  2615  00273E  0E03               	movlw	high STR_23
  2616  002740  6FAB               	movwf	(UARTSendString@str+1)& (0+255),b
  2617  002742  0E00               	movlw	0
  2618  002744  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  2619  002746  0E10               	movlw	16
  2620  002748  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  2621  00274A  EC38  F014         	call	_UARTSendString	;wreg free
  2622  00274E  0101               	movlb	1	; () banked
  2623  002750  4B3C               	infsnz	testeADbit@i& (0+255),f,b
  2624  002752  2B3D               	incf	(testeADbit@i+1)& (0+255),f,b
  2625  002754                     
  2626                           ; BSR set to: 1
  2627  002754  BF3D               	btfsc	(testeADbit@i+1)& (0+255),7,b
  2628  002756  EFB6  F013         	goto	u5311
  2629  00275A  513D               	movf	(testeADbit@i+1)& (0+255),w,b
  2630  00275C  E109               	bnz	u5310
  2631  00275E  0E07               	movlw	7
  2632  002760  5D3C               	subwf	testeADbit@i& (0+255),w,b
  2633  002762  A0D8               	btfss	status,0,c
  2634  002764  EFB6  F013         	goto	u5311
  2635  002768  EFB8  F013         	goto	u5310
  2636  00276C                     u5311:
  2637  00276C  EF52  F013         	goto	l4953
  2638  002770                     u5310:
  2639  002770                     
  2640                           ; BSR set to: 1
  2641  002770  0E33               	movlw	51
  2642  002772  0101               	movlb	1	; () banked
  2643  002774  6F39               	movwf	(??_testeADbit+1)& (0+255),b
  2644  002776  0EBB               	movlw	187
  2645  002778  6F38               	movwf	??_testeADbit& (0+255),b
  2646  00277A  0EDF               	movlw	223
  2647  00277C                     u5657:
  2648  00277C  2EE8               	decfsz	wreg,f,c
  2649  00277E  D7FE               	bra	u5657
  2650  002780  2F38               	decfsz	??_testeADbit& (0+255),f,b
  2651  002782  D7FC               	bra	u5657
  2652  002784  2F39               	decfsz	(??_testeADbit+1)& (0+255),f,b
  2653  002786  D7FA               	bra	u5657
  2654  002788  F000 F000          	nop2	
  2655  00278C  0012               	return		;funcret
  2656  00278E                     __end_of_testeADbit:
  2657                           	opt callstack 0
  2658                           
  2659 ;; *************** function _valorConvUARTbit *****************
  2660 ;; Defined at:
  2661 ;;		line 48 in file "./ADC.h"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;  valor           2   36[COMRAM] int 
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;  string          5   48[COMRAM] unsigned char [5]
  2666 ;;  unidade         2   44[COMRAM] int 
  2667 ;;  dezena          2   42[COMRAM] int 
  2668 ;;  centena         2   40[COMRAM] int 
  2669 ;;  milhar          2   38[COMRAM] int 
  2670 ;; Return value:  Size  Location     Type
  2671 ;;                  2   36[COMRAM] PTR const unsigned char 
  2672 ;; Registers used:
  2673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2679 ;;      Params:         2       0       0       0
  2680 ;;      Locals:        15       0       0       0
  2681 ;;      Temps:          0       0       0       0
  2682 ;;      Totals:        17       0       0       0
  2683 ;;Total ram usage:       17 bytes
  2684 ;; Hardware stack levels used:    1
  2685 ;; Hardware stack levels required when called:    5
  2686 ;; This function calls:
  2687 ;;		___awdiv
  2688 ;;		___awmod
  2689 ;; This function is called by:
  2690 ;;		_testeADbit
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           	psect	text6
  2695  00278E                     __ptext6:
  2696                           	opt callstack 0
  2697  00278E                     _valorConvUARTbit:
  2698                           	opt callstack 24
  2699  00278E                     
  2700                           ;./ADC.h: 50:     int milhar = valor/1000;
  2701  00278E  C025  F013         	movff	valorConvUARTbit@valor,___awdiv@dividend
  2702  002792  C026  F014         	movff	valorConvUARTbit@valor+1,___awdiv@dividend+1
  2703  002796  0E03               	movlw	3
  2704  002798  6E16               	movwf	(___awdiv@divisor+1)^0,c
  2705  00279A  0EE8               	movlw	232
  2706  00279C  6E15               	movwf	___awdiv@divisor^0,c
  2707  00279E  EC9E  F014         	call	___awdiv	;wreg free
  2708  0027A2  C013  F027         	movff	?___awdiv,valorConvUARTbit@milhar
  2709  0027A6  C014  F028         	movff	?___awdiv+1,valorConvUARTbit@milhar+1
  2710                           
  2711                           ;./ADC.h: 51:     int centena = (valor/100) % 10;
  2712  0027AA  0E00               	movlw	0
  2713  0027AC  6E16               	movwf	(___awdiv@divisor+1)^0,c
  2714  0027AE  0E64               	movlw	100
  2715  0027B0  6E15               	movwf	___awdiv@divisor^0,c
  2716  0027B2  C025  F013         	movff	valorConvUARTbit@valor,___awdiv@dividend
  2717  0027B6  C026  F014         	movff	valorConvUARTbit@valor+1,___awdiv@dividend+1
  2718  0027BA  EC9E  F014         	call	___awdiv	;wreg free
  2719  0027BE  C013  F01B         	movff	?___awdiv,___awmod@dividend
  2720  0027C2  C014  F01C         	movff	?___awdiv+1,___awmod@dividend+1
  2721  0027C6  0E00               	movlw	0
  2722  0027C8  6E1E               	movwf	(___awmod@divisor+1)^0,c
  2723  0027CA  0E0A               	movlw	10
  2724  0027CC  6E1D               	movwf	___awmod@divisor^0,c
  2725  0027CE  ECBA  F015         	call	___awmod	;wreg free
  2726  0027D2  C01B  F029         	movff	?___awmod,valorConvUARTbit@centena
  2727  0027D6  C01C  F02A         	movff	?___awmod+1,valorConvUARTbit@centena+1
  2728                           
  2729                           ;./ADC.h: 52:     int dezena = (valor/10) % 10;
  2730  0027DA  0E00               	movlw	0
  2731  0027DC  6E16               	movwf	(___awdiv@divisor+1)^0,c
  2732  0027DE  0E0A               	movlw	10
  2733  0027E0  6E15               	movwf	___awdiv@divisor^0,c
  2734  0027E2  C025  F013         	movff	valorConvUARTbit@valor,___awdiv@dividend
  2735  0027E6  C026  F014         	movff	valorConvUARTbit@valor+1,___awdiv@dividend+1
  2736  0027EA  EC9E  F014         	call	___awdiv	;wreg free
  2737  0027EE  C013  F01B         	movff	?___awdiv,___awmod@dividend
  2738  0027F2  C014  F01C         	movff	?___awdiv+1,___awmod@dividend+1
  2739  0027F6  0E00               	movlw	0
  2740  0027F8  6E1E               	movwf	(___awmod@divisor+1)^0,c
  2741  0027FA  0E0A               	movlw	10
  2742  0027FC  6E1D               	movwf	___awmod@divisor^0,c
  2743  0027FE  ECBA  F015         	call	___awmod	;wreg free
  2744  002802  C01B  F02B         	movff	?___awmod,valorConvUARTbit@dezena
  2745  002806  C01C  F02C         	movff	?___awmod+1,valorConvUARTbit@dezena+1
  2746                           
  2747                           ;./ADC.h: 53:     int unidade = (valor % 100) % 10;
  2748  00280A  0E00               	movlw	0
  2749  00280C  6E1E               	movwf	(___awmod@divisor+1)^0,c
  2750  00280E  0E64               	movlw	100
  2751  002810  6E1D               	movwf	___awmod@divisor^0,c
  2752  002812  C025  F01B         	movff	valorConvUARTbit@valor,___awmod@dividend
  2753  002816  C026  F01C         	movff	valorConvUARTbit@valor+1,___awmod@dividend+1
  2754  00281A  ECBA  F015         	call	___awmod	;wreg free
  2755  00281E  C01B  F02F         	movff	?___awmod,_valorConvUARTbit$1564
  2756  002822  C01C  F030         	movff	?___awmod+1,_valorConvUARTbit$1564+1
  2757                           
  2758                           ;./ADC.h: 53:     int unidade = (valor % 100) % 10;
  2759  002826  C02F  F01B         	movff	_valorConvUARTbit$1564,___awmod@dividend
  2760  00282A  C030  F01C         	movff	_valorConvUARTbit$1564+1,___awmod@dividend+1
  2761  00282E  0E00               	movlw	0
  2762  002830  6E1E               	movwf	(___awmod@divisor+1)^0,c
  2763  002832  0E0A               	movlw	10
  2764  002834  6E1D               	movwf	___awmod@divisor^0,c
  2765  002836  ECBA  F015         	call	___awmod	;wreg free
  2766  00283A  C01B  F02D         	movff	?___awmod,valorConvUARTbit@unidade
  2767  00283E  C01C  F02E         	movff	?___awmod+1,valorConvUARTbit@unidade+1
  2768  002842                     
  2769                           ;./ADC.h: 55:     char string[5] = {'\0'};
  2770  002842  EE20  F031         	lfsr	2,valorConvUARTbit@string
  2771  002846  0E04               	movlw	4
  2772  002848                     u4961:
  2773  002848  6ADE               	clrf	postinc2,c
  2774  00284A  06E8               	decf	wreg,f,c
  2775  00284C  E2FD               	bc	u4961
  2776  00284E                     
  2777                           ;./ADC.h: 57:     string[0] = milhar + '0';
  2778  00284E  5027               	movf	valorConvUARTbit@milhar^0,w,c
  2779  002850  0F30               	addlw	48
  2780  002852  6E31               	movwf	valorConvUARTbit@string^0,c
  2781  002854                     
  2782                           ;./ADC.h: 58:     string[1] = centena + '0';
  2783  002854  5029               	movf	valorConvUARTbit@centena^0,w,c
  2784  002856  0F30               	addlw	48
  2785  002858  6E32               	movwf	(valorConvUARTbit@string+1)^0,c
  2786  00285A                     
  2787                           ;./ADC.h: 59:     string[2] = dezena + '0';
  2788  00285A  502B               	movf	valorConvUARTbit@dezena^0,w,c
  2789  00285C  0F30               	addlw	48
  2790  00285E  6E33               	movwf	(valorConvUARTbit@string+2)^0,c
  2791  002860                     
  2792                           ;./ADC.h: 60:     string[3] = unidade + '0';
  2793  002860  502D               	movf	valorConvUARTbit@unidade^0,w,c
  2794  002862  0F30               	addlw	48
  2795  002864  6E34               	movwf	(valorConvUARTbit@string+3)^0,c
  2796  002866                     
  2797                           ;./ADC.h: 62:     return string;
  2798  002866  0E31               	movlw	low valorConvUARTbit@string
  2799  002868  6E25               	movwf	?_valorConvUARTbit^0,c
  2800  00286A  0E00               	movlw	high valorConvUARTbit@string
  2801  00286C  6E26               	movwf	(?_valorConvUARTbit+1)^0,c
  2802  00286E  0012               	return		;funcret
  2803  002870                     __end_of_valorConvUARTbit:
  2804                           	opt callstack 0
  2805                           
  2806 ;; *************** function _getAD_ANbit *****************
  2807 ;; Defined at:
  2808 ;;		line 119 in file "./ADC.h"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;  porta           2   32[COMRAM] int 
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;  ANread          2   34[COMRAM] int 
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  2   32[COMRAM] int 
  2815 ;; Registers used:
  2816 ;;		wreg, status,2, status,0, cstack
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2822 ;;      Params:         2       0       0       0
  2823 ;;      Locals:         2       0       0       0
  2824 ;;      Temps:          0       0       0       0
  2825 ;;      Totals:         4       0       0       0
  2826 ;;Total ram usage:        4 bytes
  2827 ;; Hardware stack levels used:    1
  2828 ;; Hardware stack levels required when called:    5
  2829 ;; This function calls:
  2830 ;;		_bitExtract
  2831 ;;		_readAD_ANbit
  2832 ;; This function is called by:
  2833 ;;		_testeADbit
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           	psect	text7
  2838  0025A2                     __ptext7:
  2839                           	opt callstack 0
  2840  0025A2                     _getAD_ANbit:
  2841                           	opt callstack 24
  2842  0025A2                     
  2843                           ;./ADC.h: 121:     ADCON0bits.ACMOD = bitExtract(porta, 2, 0);
  2844  0025A2  C021  F013         	movff	getAD_ANbit@porta,bitExtract@numero
  2845  0025A6  C022  F014         	movff	getAD_ANbit@porta+1,bitExtract@numero+1
  2846  0025AA  0E00               	movlw	0
  2847  0025AC  6E16               	movwf	(bitExtract@k+1)^0,c
  2848  0025AE  0E02               	movlw	2
  2849  0025B0  6E15               	movwf	bitExtract@k^0,c
  2850  0025B2  0E00               	movlw	0
  2851  0025B4  6E18               	movwf	(bitExtract@p+1)^0,c
  2852  0025B6  0E00               	movlw	0
  2853  0025B8  6E17               	movwf	bitExtract@p^0,c
  2854  0025BA  EC7C  F017         	call	_bitExtract	;wreg free
  2855  0025BE  4613               	rlncf	?_bitExtract^0,f,c
  2856  0025C0  4613               	rlncf	?_bitExtract^0,f,c
  2857  0025C2  50C2               	movf	194,w,c	;volatile
  2858  0025C4  1813               	xorwf	?_bitExtract^0,w,c
  2859  0025C6  0BF3               	andlw	-13
  2860  0025C8  1813               	xorwf	?_bitExtract^0,w,c
  2861  0025CA  6EC2               	movwf	194,c	;volatile
  2862                           
  2863                           ;./ADC.h: 123:     ADCHSbits.GASEL0 = bitExtract(porta, 1, 2);
  2864  0025CC  C021  F013         	movff	getAD_ANbit@porta,bitExtract@numero
  2865  0025D0  C022  F014         	movff	getAD_ANbit@porta+1,bitExtract@numero+1
  2866  0025D4  0E00               	movlw	0
  2867  0025D6  6E16               	movwf	(bitExtract@k+1)^0,c
  2868  0025D8  0E01               	movlw	1
  2869  0025DA  6E15               	movwf	bitExtract@k^0,c
  2870  0025DC  0E00               	movlw	0
  2871  0025DE  6E18               	movwf	(bitExtract@p+1)^0,c
  2872  0025E0  0E02               	movlw	2
  2873  0025E2  6E17               	movwf	bitExtract@p^0,c
  2874  0025E4  EC7C  F017         	call	_bitExtract	;wreg free
  2875  0025E8  5099               	movf	153,w,c	;volatile
  2876  0025EA  1813               	xorwf	?_bitExtract^0,w,c
  2877  0025EC  0BFE               	andlw	-2
  2878  0025EE  1813               	xorwf	?_bitExtract^0,w,c
  2879  0025F0  6E99               	movwf	153,c	;volatile
  2880                           
  2881                           ;./ADC.h: 124:     ADCHSbits.GBSEL0 = bitExtract(porta, 1, 2);
  2882  0025F2  C021  F013         	movff	getAD_ANbit@porta,bitExtract@numero
  2883  0025F6  C022  F014         	movff	getAD_ANbit@porta+1,bitExtract@numero+1
  2884  0025FA  0E00               	movlw	0
  2885  0025FC  6E16               	movwf	(bitExtract@k+1)^0,c
  2886  0025FE  0E01               	movlw	1
  2887  002600  6E15               	movwf	bitExtract@k^0,c
  2888  002602  0E00               	movlw	0
  2889  002604  6E18               	movwf	(bitExtract@p+1)^0,c
  2890  002606  0E02               	movlw	2
  2891  002608  6E17               	movwf	bitExtract@p^0,c
  2892  00260A  EC7C  F017         	call	_bitExtract	;wreg free
  2893  00260E  3A13               	swapf	?_bitExtract^0,f,c
  2894  002610  5099               	movf	153,w,c	;volatile
  2895  002612  1813               	xorwf	?_bitExtract^0,w,c
  2896  002614  0BEF               	andlw	-17
  2897  002616  1813               	xorwf	?_bitExtract^0,w,c
  2898  002618  6E99               	movwf	153,c	;volatile
  2899                           
  2900                           ;./ADC.h: 125:     ADCHSbits.GCSEL0 = bitExtract(porta, 1, 2);
  2901  00261A  C021  F013         	movff	getAD_ANbit@porta,bitExtract@numero
  2902  00261E  C022  F014         	movff	getAD_ANbit@porta+1,bitExtract@numero+1
  2903  002622  0E00               	movlw	0
  2904  002624  6E16               	movwf	(bitExtract@k+1)^0,c
  2905  002626  0E01               	movlw	1
  2906  002628  6E15               	movwf	bitExtract@k^0,c
  2907  00262A  0E00               	movlw	0
  2908  00262C  6E18               	movwf	(bitExtract@p+1)^0,c
  2909  00262E  0E02               	movlw	2
  2910  002630  6E17               	movwf	bitExtract@p^0,c
  2911  002632  EC7C  F017         	call	_bitExtract	;wreg free
  2912  002636  4613               	rlncf	?_bitExtract^0,f,c
  2913  002638  4613               	rlncf	?_bitExtract^0,f,c
  2914  00263A  5099               	movf	153,w,c	;volatile
  2915  00263C  1813               	xorwf	?_bitExtract^0,w,c
  2916  00263E  0BFB               	andlw	-5
  2917  002640  1813               	xorwf	?_bitExtract^0,w,c
  2918  002642  6E99               	movwf	153,c	;volatile
  2919                           
  2920                           ;./ADC.h: 126:     ADCHSbits.GDSEL0 = bitExtract(porta, 1, 2);
  2921  002644  C021  F013         	movff	getAD_ANbit@porta,bitExtract@numero
  2922  002648  C022  F014         	movff	getAD_ANbit@porta+1,bitExtract@numero+1
  2923  00264C  0E00               	movlw	0
  2924  00264E  6E16               	movwf	(bitExtract@k+1)^0,c
  2925  002650  0E01               	movlw	1
  2926  002652  6E15               	movwf	bitExtract@k^0,c
  2927  002654  0E00               	movlw	0
  2928  002656  6E18               	movwf	(bitExtract@p+1)^0,c
  2929  002658  0E02               	movlw	2
  2930  00265A  6E17               	movwf	bitExtract@p^0,c
  2931  00265C  EC7C  F017         	call	_bitExtract	;wreg free
  2932  002660  3A13               	swapf	?_bitExtract^0,f,c
  2933  002662  4613               	rlncf	?_bitExtract^0,f,c
  2934  002664  4613               	rlncf	?_bitExtract^0,f,c
  2935  002666  5099               	movf	153,w,c	;volatile
  2936  002668  1813               	xorwf	?_bitExtract^0,w,c
  2937  00266A  0BBF               	andlw	-65
  2938  00266C  1813               	xorwf	?_bitExtract^0,w,c
  2939  00266E  6E99               	movwf	153,c	;volatile
  2940  002670                     
  2941                           ;./ADC.h: 128:     ADCON0bits.ADON = 1;
  2942  002670  80C2               	bsf	194,0,c	;volatile
  2943  002672                     
  2944                           ;./ADC.h: 129:     ADCON0bits.GODONE = 1;
  2945  002672  82C2               	bsf	194,1,c	;volatile
  2946  002674                     l172:
  2947  002674  B2C2               	btfsc	194,1,c	;volatile
  2948  002676  EF3F  F013         	goto	u4971
  2949  00267A  EF41  F013         	goto	u4970
  2950  00267E                     u4971:
  2951  00267E  EF3A  F013         	goto	l172
  2952  002682                     u4970:
  2953  002682                     
  2954                           ;./ADC.h: 132:     int ANread = readAD_ANbit();
  2955  002682  ECF6  F018         	call	_readAD_ANbit	;wreg free
  2956  002686  C013  F023         	movff	?_readAD_ANbit,getAD_ANbit@ANread
  2957  00268A  C014  F024         	movff	?_readAD_ANbit+1,getAD_ANbit@ANread+1
  2958  00268E                     
  2959                           ;./ADC.h: 133:     ADCON0bits.ADON = 0;
  2960  00268E  90C2               	bcf	194,0,c	;volatile
  2961  002690                     
  2962                           ;./ADC.h: 135:     return (int) ANread;
  2963  002690  C023  F021         	movff	getAD_ANbit@ANread,?_getAD_ANbit
  2964  002694  C024  F022         	movff	getAD_ANbit@ANread+1,?_getAD_ANbit+1
  2965  002698  0012               	return		;funcret
  2966  00269A                     __end_of_getAD_ANbit:
  2967                           	opt callstack 0
  2968                           
  2969 ;; *************** function _readAD_ANbit *****************
  2970 ;; Defined at:
  2971 ;;		line 80 in file "./ADC.h"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;		None
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;		None
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  2   18[COMRAM] int 
  2978 ;; Registers used:
  2979 ;;		wreg, status,2, status,0
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2985 ;;      Params:         2       0       0       0
  2986 ;;      Locals:         0       0       0       0
  2987 ;;      Temps:          0       0       0       0
  2988 ;;      Totals:         2       0       0       0
  2989 ;;Total ram usage:        2 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; Hardware stack levels required when called:    4
  2992 ;; This function calls:
  2993 ;;		Nothing
  2994 ;; This function is called by:
  2995 ;;		_getAD_ANbit
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           	psect	text8
  3000  0031EC                     __ptext8:
  3001                           	opt callstack 0
  3002  0031EC                     _readAD_ANbit:
  3003                           	opt callstack 24
  3004  0031EC                     
  3005                           ;./ADC.h: 82:     vdig_AN = ADRESH;
  3006  0031EC  CFC4 F04B          	movff	4036,_vdig_AN	;volatile
  3007  0031F0  6A4C               	clrf	(_vdig_AN+1)^0,c
  3008  0031F2                     
  3009                           ;./ADC.h: 83:     vdig_AN = vdig_AN << 8;
  3010  0031F2  504B               	movf	_vdig_AN^0,w,c
  3011  0031F4  6E4C               	movwf	(_vdig_AN+1)^0,c
  3012  0031F6  6A4B               	clrf	_vdig_AN^0,c
  3013  0031F8                     
  3014                           ;./ADC.h: 84:     vdig_AN += ADRESL;
  3015  0031F8  50C3               	movf	195,w,c	;volatile
  3016  0031FA  264B               	addwf	_vdig_AN^0,f,c
  3017  0031FC  0E00               	movlw	0
  3018  0031FE  224C               	addwfc	(_vdig_AN+1)^0,f,c
  3019  003200                     
  3020                           ;./ADC.h: 86:     return vdig_AN;
  3021  003200  C04B  F013         	movff	_vdig_AN,?_readAD_ANbit
  3022  003204  C04C  F014         	movff	_vdig_AN+1,?_readAD_ANbit+1
  3023  003208  0012               	return		;funcret
  3024  00320A                     __end_of_readAD_ANbit:
  3025                           	opt callstack 0
  3026                           
  3027 ;; *************** function _testeAD *****************
  3028 ;; Defined at:
  3029 ;;		line 213 in file "./geral.h"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;		None
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;		None
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  1    wreg      void 
  3036 ;; Registers used:
  3037 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3043 ;;      Params:         0       0       0       0
  3044 ;;      Locals:         0       0       0       0
  3045 ;;      Temps:          0       0       2       0
  3046 ;;      Totals:         0       0       2       0
  3047 ;;Total ram usage:        2 bytes
  3048 ;; Hardware stack levels used:    1
  3049 ;; Hardware stack levels required when called:    7
  3050 ;; This function calls:
  3051 ;;		_UARTSendString
  3052 ;;		_getAD_AN
  3053 ;;		_valorConvUART
  3054 ;; This function is called by:
  3055 ;;		_main
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           	psect	text9
  3060  0014A0                     __ptext9:
  3061                           	opt callstack 0
  3062  0014A0                     _testeAD:
  3063                           	opt callstack 23
  3064  0014A0  0E59               	movlw	low STR_22
  3065  0014A2  0100               	movlb	0	; () banked
  3066  0014A4  6FAA               	movwf	UARTSendString@str& (0+255),b
  3067  0014A6  0E03               	movlw	high STR_22
  3068  0014A8  6FAB               	movwf	(UARTSendString@str+1)& (0+255),b
  3069  0014AA  0E00               	movlw	0
  3070  0014AC  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3071  0014AE  0E10               	movlw	16
  3072  0014B0  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  3073  0014B2  EC38  F014         	call	_UARTSendString	;wreg free
  3074  0014B6  0E00               	movlw	0
  3075  0014B8  0100               	movlb	0	; () banked
  3076  0014BA  6F96               	movwf	(getAD_AN@porta+1)& (0+255),b
  3077  0014BC  0E00               	movlw	0
  3078  0014BE  6F95               	movwf	getAD_AN@porta& (0+255),b
  3079  0014C0  EC41  F011         	call	_getAD_AN	;wreg free
  3080  0014C4  C095  F09B         	movff	?_getAD_AN,valorConvUART@valor
  3081  0014C8  C096  F09C         	movff	?_getAD_AN+1,valorConvUART@valor+1
  3082  0014CC  EC61  F015         	call	_valorConvUART	;wreg free
  3083  0014D0  C09B  F0AA         	movff	?_valorConvUART,UARTSendString@str
  3084  0014D4  C09C  F0AB         	movff	?_valorConvUART+1,UARTSendString@str+1
  3085  0014D8  0E00               	movlw	0
  3086  0014DA  0100               	movlb	0	; () banked
  3087  0014DC  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3088  0014DE  0E10               	movlw	16
  3089  0014E0  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  3090  0014E2  EC38  F014         	call	_UARTSendString	;wreg free
  3091  0014E6  0EA2               	movlw	low STR_23
  3092  0014E8  0100               	movlb	0	; () banked
  3093  0014EA  6FAA               	movwf	UARTSendString@str& (0+255),b
  3094  0014EC  0E03               	movlw	high STR_23
  3095  0014EE  6FAB               	movwf	(UARTSendString@str+1)& (0+255),b
  3096  0014F0  0E00               	movlw	0
  3097  0014F2  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3098  0014F4  0E10               	movlw	16
  3099  0014F6  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  3100  0014F8  EC38  F014         	call	_UARTSendString	;wreg free
  3101  0014FC  0E5F               	movlw	low STR_24
  3102  0014FE  0100               	movlb	0	; () banked
  3103  001500  6FAA               	movwf	UARTSendString@str& (0+255),b
  3104  001502  0E03               	movlw	high STR_24
  3105  001504  6FAB               	movwf	(UARTSendString@str+1)& (0+255),b
  3106  001506  0E00               	movlw	0
  3107  001508  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3108  00150A  0E10               	movlw	16
  3109  00150C  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  3110  00150E  EC38  F014         	call	_UARTSendString	;wreg free
  3111  001512  0E00               	movlw	0
  3112  001514  0100               	movlb	0	; () banked
  3113  001516  6F96               	movwf	(getAD_AN@porta+1)& (0+255),b
  3114  001518  0E01               	movlw	1
  3115  00151A  6F95               	movwf	getAD_AN@porta& (0+255),b
  3116  00151C  EC41  F011         	call	_getAD_AN	;wreg free
  3117  001520  C095  F09B         	movff	?_getAD_AN,valorConvUART@valor
  3118  001524  C096  F09C         	movff	?_getAD_AN+1,valorConvUART@valor+1
  3119  001528  EC61  F015         	call	_valorConvUART	;wreg free
  3120  00152C  C09B  F0AA         	movff	?_valorConvUART,UARTSendString@str
  3121  001530  C09C  F0AB         	movff	?_valorConvUART+1,UARTSendString@str+1
  3122  001534  0E00               	movlw	0
  3123  001536  0100               	movlb	0	; () banked
  3124  001538  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3125  00153A  0E10               	movlw	16
  3126  00153C  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  3127  00153E  EC38  F014         	call	_UARTSendString	;wreg free
  3128  001542  0EA2               	movlw	low STR_23
  3129  001544  0100               	movlb	0	; () banked
  3130  001546  6FAA               	movwf	UARTSendString@str& (0+255),b
  3131  001548  0E03               	movlw	high STR_23
  3132  00154A  6FAB               	movwf	(UARTSendString@str+1)& (0+255),b
  3133  00154C  0E00               	movlw	0
  3134  00154E  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3135  001550  0E10               	movlw	16
  3136  001552  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  3137  001554  EC38  F014         	call	_UARTSendString	;wreg free
  3138  001558  0E65               	movlw	low STR_26
  3139  00155A  0100               	movlb	0	; () banked
  3140  00155C  6FAA               	movwf	UARTSendString@str& (0+255),b
  3141  00155E  0E03               	movlw	high STR_26
  3142  001560  6FAB               	movwf	(UARTSendString@str+1)& (0+255),b
  3143  001562  0E00               	movlw	0
  3144  001564  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3145  001566  0E10               	movlw	16
  3146  001568  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  3147  00156A  EC38  F014         	call	_UARTSendString	;wreg free
  3148  00156E  0E00               	movlw	0
  3149  001570  0100               	movlb	0	; () banked
  3150  001572  6F96               	movwf	(getAD_AN@porta+1)& (0+255),b
  3151  001574  0E02               	movlw	2
  3152  001576  6F95               	movwf	getAD_AN@porta& (0+255),b
  3153  001578  EC41  F011         	call	_getAD_AN	;wreg free
  3154  00157C  C095  F09B         	movff	?_getAD_AN,valorConvUART@valor
  3155  001580  C096  F09C         	movff	?_getAD_AN+1,valorConvUART@valor+1
  3156  001584  EC61  F015         	call	_valorConvUART	;wreg free
  3157  001588  C09B  F0AA         	movff	?_valorConvUART,UARTSendString@str
  3158  00158C  C09C  F0AB         	movff	?_valorConvUART+1,UARTSendString@str+1
  3159  001590  0E00               	movlw	0
  3160  001592  0100               	movlb	0	; () banked
  3161  001594  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3162  001596  0E10               	movlw	16
  3163  001598  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  3164  00159A  EC38  F014         	call	_UARTSendString	;wreg free
  3165  00159E  0EA2               	movlw	low STR_23
  3166  0015A0  0100               	movlb	0	; () banked
  3167  0015A2  6FAA               	movwf	UARTSendString@str& (0+255),b
  3168  0015A4  0E03               	movlw	high STR_23
  3169  0015A6  6FAB               	movwf	(UARTSendString@str+1)& (0+255),b
  3170  0015A8  0E00               	movlw	0
  3171  0015AA  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3172  0015AC  0E10               	movlw	16
  3173  0015AE  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  3174  0015B0  EC38  F014         	call	_UARTSendString	;wreg free
  3175  0015B4  0E6B               	movlw	low STR_28
  3176  0015B6  0100               	movlb	0	; () banked
  3177  0015B8  6FAA               	movwf	UARTSendString@str& (0+255),b
  3178  0015BA  0E03               	movlw	high STR_28
  3179  0015BC  6FAB               	movwf	(UARTSendString@str+1)& (0+255),b
  3180  0015BE  0E00               	movlw	0
  3181  0015C0  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3182  0015C2  0E10               	movlw	16
  3183  0015C4  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  3184  0015C6  EC38  F014         	call	_UARTSendString	;wreg free
  3185  0015CA  0E00               	movlw	0
  3186  0015CC  0100               	movlb	0	; () banked
  3187  0015CE  6F96               	movwf	(getAD_AN@porta+1)& (0+255),b
  3188  0015D0  0E03               	movlw	3
  3189  0015D2  6F95               	movwf	getAD_AN@porta& (0+255),b
  3190  0015D4  EC41  F011         	call	_getAD_AN	;wreg free
  3191  0015D8  C095  F09B         	movff	?_getAD_AN,valorConvUART@valor
  3192  0015DC  C096  F09C         	movff	?_getAD_AN+1,valorConvUART@valor+1
  3193  0015E0  EC61  F015         	call	_valorConvUART	;wreg free
  3194  0015E4  C09B  F0AA         	movff	?_valorConvUART,UARTSendString@str
  3195  0015E8  C09C  F0AB         	movff	?_valorConvUART+1,UARTSendString@str+1
  3196  0015EC  0E00               	movlw	0
  3197  0015EE  0100               	movlb	0	; () banked
  3198  0015F0  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3199  0015F2  0E10               	movlw	16
  3200  0015F4  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  3201  0015F6  EC38  F014         	call	_UARTSendString	;wreg free
  3202  0015FA  0EA2               	movlw	low STR_23
  3203  0015FC  0100               	movlb	0	; () banked
  3204  0015FE  6FAA               	movwf	UARTSendString@str& (0+255),b
  3205  001600  0E03               	movlw	high STR_23
  3206  001602  6FAB               	movwf	(UARTSendString@str+1)& (0+255),b
  3207  001604  0E00               	movlw	0
  3208  001606  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3209  001608  0E10               	movlw	16
  3210  00160A  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  3211  00160C  EC38  F014         	call	_UARTSendString	;wreg free
  3212  001610  0E71               	movlw	low STR_30
  3213  001612  0100               	movlb	0	; () banked
  3214  001614  6FAA               	movwf	UARTSendString@str& (0+255),b
  3215  001616  0E03               	movlw	high STR_30
  3216  001618  6FAB               	movwf	(UARTSendString@str+1)& (0+255),b
  3217  00161A  0E00               	movlw	0
  3218  00161C  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3219  00161E  0E10               	movlw	16
  3220  001620  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  3221  001622  EC38  F014         	call	_UARTSendString	;wreg free
  3222  001626  0E00               	movlw	0
  3223  001628  0100               	movlb	0	; () banked
  3224  00162A  6F96               	movwf	(getAD_AN@porta+1)& (0+255),b
  3225  00162C  0E04               	movlw	4
  3226  00162E  6F95               	movwf	getAD_AN@porta& (0+255),b
  3227  001630  EC41  F011         	call	_getAD_AN	;wreg free
  3228  001634  C095  F09B         	movff	?_getAD_AN,valorConvUART@valor
  3229  001638  C096  F09C         	movff	?_getAD_AN+1,valorConvUART@valor+1
  3230  00163C  EC61  F015         	call	_valorConvUART	;wreg free
  3231  001640  C09B  F0AA         	movff	?_valorConvUART,UARTSendString@str
  3232  001644  C09C  F0AB         	movff	?_valorConvUART+1,UARTSendString@str+1
  3233  001648  0E00               	movlw	0
  3234  00164A  0100               	movlb	0	; () banked
  3235  00164C  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3236  00164E  0E10               	movlw	16
  3237  001650  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  3238  001652  EC38  F014         	call	_UARTSendString	;wreg free
  3239  001656  0EA2               	movlw	low STR_23
  3240  001658  0100               	movlb	0	; () banked
  3241  00165A  6FAA               	movwf	UARTSendString@str& (0+255),b
  3242  00165C  0E03               	movlw	high STR_23
  3243  00165E  6FAB               	movwf	(UARTSendString@str+1)& (0+255),b
  3244  001660  0E00               	movlw	0
  3245  001662  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3246  001664  0E10               	movlw	16
  3247  001666  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  3248  001668  EC38  F014         	call	_UARTSendString	;wreg free
  3249  00166C  0E77               	movlw	low STR_32
  3250  00166E  0100               	movlb	0	; () banked
  3251  001670  6FAA               	movwf	UARTSendString@str& (0+255),b
  3252  001672  0E03               	movlw	high STR_32
  3253  001674  6FAB               	movwf	(UARTSendString@str+1)& (0+255),b
  3254  001676  0E00               	movlw	0
  3255  001678  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3256  00167A  0E10               	movlw	16
  3257  00167C  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  3258  00167E  EC38  F014         	call	_UARTSendString	;wreg free
  3259  001682  0E00               	movlw	0
  3260  001684  0100               	movlb	0	; () banked
  3261  001686  6F96               	movwf	(getAD_AN@porta+1)& (0+255),b
  3262  001688  0E05               	movlw	5
  3263  00168A  6F95               	movwf	getAD_AN@porta& (0+255),b
  3264  00168C  EC41  F011         	call	_getAD_AN	;wreg free
  3265  001690  C095  F09B         	movff	?_getAD_AN,valorConvUART@valor
  3266  001694  C096  F09C         	movff	?_getAD_AN+1,valorConvUART@valor+1
  3267  001698  EC61  F015         	call	_valorConvUART	;wreg free
  3268  00169C  C09B  F0AA         	movff	?_valorConvUART,UARTSendString@str
  3269  0016A0  C09C  F0AB         	movff	?_valorConvUART+1,UARTSendString@str+1
  3270  0016A4  0E00               	movlw	0
  3271  0016A6  0100               	movlb	0	; () banked
  3272  0016A8  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3273  0016AA  0E10               	movlw	16
  3274  0016AC  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  3275  0016AE  EC38  F014         	call	_UARTSendString	;wreg free
  3276  0016B2  0EA2               	movlw	low STR_23
  3277  0016B4  0100               	movlb	0	; () banked
  3278  0016B6  6FAA               	movwf	UARTSendString@str& (0+255),b
  3279  0016B8  0E03               	movlw	high STR_23
  3280  0016BA  6FAB               	movwf	(UARTSendString@str+1)& (0+255),b
  3281  0016BC  0E00               	movlw	0
  3282  0016BE  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3283  0016C0  0E10               	movlw	16
  3284  0016C2  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  3285  0016C4  EC38  F014         	call	_UARTSendString	;wreg free
  3286  0016C8  0E7D               	movlw	low STR_34
  3287  0016CA  0100               	movlb	0	; () banked
  3288  0016CC  6FAA               	movwf	UARTSendString@str& (0+255),b
  3289  0016CE  0E03               	movlw	high STR_34
  3290  0016D0  6FAB               	movwf	(UARTSendString@str+1)& (0+255),b
  3291  0016D2  0E00               	movlw	0
  3292  0016D4  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3293  0016D6  0E10               	movlw	16
  3294  0016D8  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  3295  0016DA  EC38  F014         	call	_UARTSendString	;wreg free
  3296  0016DE  0E00               	movlw	0
  3297  0016E0  0100               	movlb	0	; () banked
  3298  0016E2  6F96               	movwf	(getAD_AN@porta+1)& (0+255),b
  3299  0016E4  0E06               	movlw	6
  3300  0016E6  6F95               	movwf	getAD_AN@porta& (0+255),b
  3301  0016E8  EC41  F011         	call	_getAD_AN	;wreg free
  3302  0016EC  C095  F09B         	movff	?_getAD_AN,valorConvUART@valor
  3303  0016F0  C096  F09C         	movff	?_getAD_AN+1,valorConvUART@valor+1
  3304  0016F4  EC61  F015         	call	_valorConvUART	;wreg free
  3305  0016F8  C09B  F0AA         	movff	?_valorConvUART,UARTSendString@str
  3306  0016FC  C09C  F0AB         	movff	?_valorConvUART+1,UARTSendString@str+1
  3307  001700  0E00               	movlw	0
  3308  001702  0100               	movlb	0	; () banked
  3309  001704  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3310  001706  0E10               	movlw	16
  3311  001708  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  3312  00170A  EC38  F014         	call	_UARTSendString	;wreg free
  3313  00170E  0EA2               	movlw	low STR_23
  3314  001710  0100               	movlb	0	; () banked
  3315  001712  6FAA               	movwf	UARTSendString@str& (0+255),b
  3316  001714  0E03               	movlw	high STR_23
  3317  001716  6FAB               	movwf	(UARTSendString@str+1)& (0+255),b
  3318  001718  0E00               	movlw	0
  3319  00171A  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3320  00171C  0E10               	movlw	16
  3321  00171E  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  3322  001720  EC38  F014         	call	_UARTSendString	;wreg free
  3323  001724  0E83               	movlw	low STR_36
  3324  001726  0100               	movlb	0	; () banked
  3325  001728  6FAA               	movwf	UARTSendString@str& (0+255),b
  3326  00172A  0E03               	movlw	high STR_36
  3327  00172C  6FAB               	movwf	(UARTSendString@str+1)& (0+255),b
  3328  00172E  0E00               	movlw	0
  3329  001730  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3330  001732  0E10               	movlw	16
  3331  001734  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  3332  001736  EC38  F014         	call	_UARTSendString	;wreg free
  3333  00173A  0E00               	movlw	0
  3334  00173C  0100               	movlb	0	; () banked
  3335  00173E  6F96               	movwf	(getAD_AN@porta+1)& (0+255),b
  3336  001740  0E07               	movlw	7
  3337  001742  6F95               	movwf	getAD_AN@porta& (0+255),b
  3338  001744  EC41  F011         	call	_getAD_AN	;wreg free
  3339  001748  C095  F09B         	movff	?_getAD_AN,valorConvUART@valor
  3340  00174C  C096  F09C         	movff	?_getAD_AN+1,valorConvUART@valor+1
  3341  001750  EC61  F015         	call	_valorConvUART	;wreg free
  3342  001754  C09B  F0AA         	movff	?_valorConvUART,UARTSendString@str
  3343  001758  C09C  F0AB         	movff	?_valorConvUART+1,UARTSendString@str+1
  3344  00175C  0E00               	movlw	0
  3345  00175E  0100               	movlb	0	; () banked
  3346  001760  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3347  001762  0E10               	movlw	16
  3348  001764  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  3349  001766  EC38  F014         	call	_UARTSendString	;wreg free
  3350  00176A  0EA2               	movlw	low STR_23
  3351  00176C  0100               	movlb	0	; () banked
  3352  00176E  6FAA               	movwf	UARTSendString@str& (0+255),b
  3353  001770  0E03               	movlw	high STR_23
  3354  001772  6FAB               	movwf	(UARTSendString@str+1)& (0+255),b
  3355  001774  0E00               	movlw	0
  3356  001776  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3357  001778  0E10               	movlw	16
  3358  00177A  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  3359  00177C  EC38  F014         	call	_UARTSendString	;wreg free
  3360  001780  0E39               	movlw	low STR_38
  3361  001782  0100               	movlb	0	; () banked
  3362  001784  6FAA               	movwf	UARTSendString@str& (0+255),b
  3363  001786  0E03               	movlw	high STR_38
  3364  001788  6FAB               	movwf	(UARTSendString@str+1)& (0+255),b
  3365  00178A  0E00               	movlw	0
  3366  00178C  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3367  00178E  0E10               	movlw	16
  3368  001790  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  3369  001792  EC38  F014         	call	_UARTSendString	;wreg free
  3370  001796  0EA2               	movlw	low STR_23
  3371  001798  0100               	movlb	0	; () banked
  3372  00179A  6FAA               	movwf	UARTSendString@str& (0+255),b
  3373  00179C  0E03               	movlw	high STR_23
  3374  00179E  6FAB               	movwf	(UARTSendString@str+1)& (0+255),b
  3375  0017A0  0E00               	movlw	0
  3376  0017A2  6FAD               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3377  0017A4  0E10               	movlw	16
  3378  0017A6  6FAC               	movwf	UARTSendString@max_length& (0+255),b
  3379  0017A8  EC38  F014         	call	_UARTSendString	;wreg free
  3380  0017AC  0E0D               	movlw	13
  3381  0017AE  0101               	movlb	1	; () banked
  3382  0017B0  6F39               	movwf	(??_testeAD+1)& (0+255),b
  3383  0017B2  0EAF               	movlw	175
  3384  0017B4  6F38               	movwf	??_testeAD& (0+255),b
  3385  0017B6  0EB6               	movlw	182
  3386  0017B8                     u5667:
  3387  0017B8  2EE8               	decfsz	wreg,f,c
  3388  0017BA  D7FE               	bra	u5667
  3389  0017BC  2F38               	decfsz	??_testeAD& (0+255),f,b
  3390  0017BE  D7FC               	bra	u5667
  3391  0017C0  2F39               	decfsz	(??_testeAD+1)& (0+255),f,b
  3392  0017C2  D7FA               	bra	u5667
  3393  0017C4  F000               	nop	
  3394  0017C6  0012               	return		;funcret
  3395  0017C8                     __end_of_testeAD:
  3396                           	opt callstack 0
  3397                           
  3398 ;; *************** function _valorConvUART *****************
  3399 ;; Defined at:
  3400 ;;		line 32 in file "./ADC.h"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;  valor           2   59[BANK0 ] int 
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;  string          5   69[BANK0 ] unsigned char [5]
  3405 ;;  unidade         2   65[BANK0 ] int 
  3406 ;;  dezena          2   63[BANK0 ] int 
  3407 ;;  centena         2   61[BANK0 ] int 
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  2   59[BANK0 ] PTR const unsigned char 
  3410 ;; Registers used:
  3411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3417 ;;      Params:         0       2       0       0
  3418 ;;      Locals:         0      13       0       0
  3419 ;;      Temps:          0       0       0       0
  3420 ;;      Totals:         0      15       0       0
  3421 ;;Total ram usage:       15 bytes
  3422 ;; Hardware stack levels used:    1
  3423 ;; Hardware stack levels required when called:    5
  3424 ;; This function calls:
  3425 ;;		___awdiv
  3426 ;;		___awmod
  3427 ;; This function is called by:
  3428 ;;		_testeAD
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           
  3432                           	psect	text10
  3433  002AC2                     __ptext10:
  3434                           	opt callstack 0
  3435  002AC2                     _valorConvUART:
  3436                           	opt callstack 24
  3437  002AC2                     
  3438                           ;./ADC.h: 34:     int centena = valor / 100;
  3439  002AC2  C09B  F013         	movff	valorConvUART@valor,___awdiv@dividend
  3440  002AC6  C09C  F014         	movff	valorConvUART@valor+1,___awdiv@dividend+1
  3441  002ACA  0E00               	movlw	0
  3442  002ACC  6E16               	movwf	(___awdiv@divisor+1)^0,c
  3443  002ACE  0E64               	movlw	100
  3444  002AD0  6E15               	movwf	___awdiv@divisor^0,c
  3445  002AD2  EC9E  F014         	call	___awdiv	;wreg free
  3446  002AD6  C013  F09D         	movff	?___awdiv,valorConvUART@centena
  3447  002ADA  C014  F09E         	movff	?___awdiv+1,valorConvUART@centena+1
  3448                           
  3449                           ;./ADC.h: 35:     int dezena = (valor / 10) % 10;
  3450  002ADE  0E00               	movlw	0
  3451  002AE0  6E16               	movwf	(___awdiv@divisor+1)^0,c
  3452  002AE2  0E0A               	movlw	10
  3453  002AE4  6E15               	movwf	___awdiv@divisor^0,c
  3454  002AE6  C09B  F013         	movff	valorConvUART@valor,___awdiv@dividend
  3455  002AEA  C09C  F014         	movff	valorConvUART@valor+1,___awdiv@dividend+1
  3456  002AEE  EC9E  F014         	call	___awdiv	;wreg free
  3457  002AF2  C013  F01B         	movff	?___awdiv,___awmod@dividend
  3458  002AF6  C014  F01C         	movff	?___awdiv+1,___awmod@dividend+1
  3459  002AFA  0E00               	movlw	0
  3460  002AFC  6E1E               	movwf	(___awmod@divisor+1)^0,c
  3461  002AFE  0E0A               	movlw	10
  3462  002B00  6E1D               	movwf	___awmod@divisor^0,c
  3463  002B02  ECBA  F015         	call	___awmod	;wreg free
  3464  002B06  C01B  F09F         	movff	?___awmod,valorConvUART@dezena
  3465  002B0A  C01C  F0A0         	movff	?___awmod+1,valorConvUART@dezena+1
  3466                           
  3467                           ;./ADC.h: 36:     int unidade = (valor % 100) % 10;
  3468  002B0E  0E00               	movlw	0
  3469  002B10  6E1E               	movwf	(___awmod@divisor+1)^0,c
  3470  002B12  0E64               	movlw	100
  3471  002B14  6E1D               	movwf	___awmod@divisor^0,c
  3472  002B16  C09B  F01B         	movff	valorConvUART@valor,___awmod@dividend
  3473  002B1A  C09C  F01C         	movff	valorConvUART@valor+1,___awmod@dividend+1
  3474  002B1E  ECBA  F015         	call	___awmod	;wreg free
  3475  002B22  C01B  F0A3         	movff	?___awmod,_valorConvUART$1563
  3476  002B26  C01C  F0A4         	movff	?___awmod+1,_valorConvUART$1563+1
  3477                           
  3478                           ;./ADC.h: 36:     int unidade = (valor % 100) % 10;
  3479  002B2A  C0A3  F01B         	movff	_valorConvUART$1563,___awmod@dividend
  3480  002B2E  C0A4  F01C         	movff	_valorConvUART$1563+1,___awmod@dividend+1
  3481  002B32  0E00               	movlw	0
  3482  002B34  6E1E               	movwf	(___awmod@divisor+1)^0,c
  3483  002B36  0E0A               	movlw	10
  3484  002B38  6E1D               	movwf	___awmod@divisor^0,c
  3485  002B3A  ECBA  F015         	call	___awmod	;wreg free
  3486  002B3E  C01B  F0A1         	movff	?___awmod,valorConvUART@unidade
  3487  002B42  C01C  F0A2         	movff	?___awmod+1,valorConvUART@unidade+1
  3488  002B46                     
  3489                           ;./ADC.h: 38:     char string[5] = {'\0'};
  3490  002B46  EE20  F0A5         	lfsr	2,valorConvUART@string
  3491  002B4A  0E04               	movlw	4
  3492  002B4C                     u4951:
  3493  002B4C  6ADE               	clrf	postinc2,c
  3494  002B4E  06E8               	decf	wreg,f,c
  3495  002B50  E2FD               	bc	u4951
  3496  002B52                     
  3497                           ;./ADC.h: 40:     string[0] = centena + '0';
  3498  002B52  0100               	movlb	0	; () banked
  3499  002B54  519D               	movf	valorConvUART@centena& (0+255),w,b
  3500  002B56  0F30               	addlw	48
  3501  002B58  6FA5               	movwf	valorConvUART@string& (0+255),b
  3502  002B5A                     
  3503                           ; BSR set to: 0
  3504                           ;./ADC.h: 41:     string[1] = '.';
  3505  002B5A  0E2E               	movlw	46
  3506  002B5C  6FA6               	movwf	(valorConvUART@string+1)& (0+255),b
  3507  002B5E                     
  3508                           ; BSR set to: 0
  3509                           ;./ADC.h: 42:     string[2] = dezena + '0';
  3510  002B5E  519F               	movf	valorConvUART@dezena& (0+255),w,b
  3511  002B60  0F30               	addlw	48
  3512  002B62  6FA7               	movwf	(valorConvUART@string+2)& (0+255),b
  3513  002B64                     
  3514                           ; BSR set to: 0
  3515                           ;./ADC.h: 43:     string[3] = unidade + '0';
  3516  002B64  51A1               	movf	valorConvUART@unidade& (0+255),w,b
  3517  002B66  0F30               	addlw	48
  3518  002B68  6FA8               	movwf	(valorConvUART@string+3)& (0+255),b
  3519  002B6A                     
  3520                           ; BSR set to: 0
  3521                           ;./ADC.h: 45:     return string;
  3522  002B6A  0EA5               	movlw	low valorConvUART@string
  3523  002B6C  6F9B               	movwf	?_valorConvUART& (0+255),b
  3524  002B6E  0E00               	movlw	high valorConvUART@string
  3525  002B70  6F9C               	movwf	(?_valorConvUART+1)& (0+255),b
  3526  002B72                     
  3527                           ; BSR set to: 0
  3528  002B72  0012               	return		;funcret
  3529  002B74                     __end_of_valorConvUART:
  3530                           	opt callstack 0
  3531                           
  3532 ;; *************** function ___awmod *****************
  3533 ;; Defined at:
  3534 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;  dividend        2   26[COMRAM] int 
  3537 ;;  divisor         2   28[COMRAM] int 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;  sign            1   31[COMRAM] unsigned char 
  3540 ;;  counter         1   30[COMRAM] unsigned char 
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  2   26[COMRAM] int 
  3543 ;; Registers used:
  3544 ;;		wreg, status,2, status,0
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3550 ;;      Params:         4       0       0       0
  3551 ;;      Locals:         2       0       0       0
  3552 ;;      Temps:          0       0       0       0
  3553 ;;      Totals:         6       0       0       0
  3554 ;;Total ram usage:        6 bytes
  3555 ;; Hardware stack levels used:    1
  3556 ;; Hardware stack levels required when called:    4
  3557 ;; This function calls:
  3558 ;;		Nothing
  3559 ;; This function is called by:
  3560 ;;		_valorConvUART
  3561 ;;		_valorConvUARTbit
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           	psect	text11
  3566  002B74                     __ptext11:
  3567                           	opt callstack 0
  3568  002B74                     ___awmod:
  3569                           	opt callstack 24
  3570  002B74  0E00               	movlw	0
  3571  002B76  6E20               	movwf	___awmod@sign^0,c
  3572  002B78  BE1C               	btfsc	(___awmod@dividend+1)^0,7,c
  3573  002B7A  EFC3  F015         	goto	u4830
  3574  002B7E  EFC1  F015         	goto	u4831
  3575  002B82                     u4831:
  3576  002B82  EFC9  F015         	goto	l4559
  3577  002B86                     u4830:
  3578  002B86  6C1B               	negf	___awmod@dividend^0,c
  3579  002B88  1E1C               	comf	(___awmod@dividend+1)^0,f,c
  3580  002B8A  B0D8               	btfsc	status,0,c
  3581  002B8C  2A1C               	incf	(___awmod@dividend+1)^0,f,c
  3582  002B8E  0E01               	movlw	1
  3583  002B90  6E20               	movwf	___awmod@sign^0,c
  3584  002B92                     l4559:
  3585  002B92  BE1E               	btfsc	(___awmod@divisor+1)^0,7,c
  3586  002B94  EFD0  F015         	goto	u4840
  3587  002B98  EFCE  F015         	goto	u4841
  3588  002B9C                     u4841:
  3589  002B9C  EFD4  F015         	goto	l4563
  3590  002BA0                     u4840:
  3591  002BA0  6C1D               	negf	___awmod@divisor^0,c
  3592  002BA2  1E1E               	comf	(___awmod@divisor+1)^0,f,c
  3593  002BA4  B0D8               	btfsc	status,0,c
  3594  002BA6  2A1E               	incf	(___awmod@divisor+1)^0,f,c
  3595  002BA8                     l4563:
  3596  002BA8  501D               	movf	___awmod@divisor^0,w,c
  3597  002BAA  101E               	iorwf	(___awmod@divisor+1)^0,w,c
  3598  002BAC  B4D8               	btfsc	status,2,c
  3599  002BAE  EFDB  F015         	goto	u4851
  3600  002BB2  EFDD  F015         	goto	u4850
  3601  002BB6                     u4851:
  3602  002BB6  EF01  F016         	goto	l4579
  3603  002BBA                     u4850:
  3604  002BBA  0E01               	movlw	1
  3605  002BBC  6E1F               	movwf	___awmod@counter^0,c
  3606  002BBE  EFE5  F015         	goto	l4569
  3607  002BC2                     l4567:
  3608  002BC2  90D8               	bcf	status,0,c
  3609  002BC4  361D               	rlcf	___awmod@divisor^0,f,c
  3610  002BC6  361E               	rlcf	(___awmod@divisor+1)^0,f,c
  3611  002BC8  2A1F               	incf	___awmod@counter^0,f,c
  3612  002BCA                     l4569:
  3613  002BCA  AE1E               	btfss	(___awmod@divisor+1)^0,7,c
  3614  002BCC  EFEA  F015         	goto	u4861
  3615  002BD0  EFEC  F015         	goto	u4860
  3616  002BD4                     u4861:
  3617  002BD4  EFE1  F015         	goto	l4567
  3618  002BD8                     u4860:
  3619  002BD8                     l4571:
  3620  002BD8  501D               	movf	___awmod@divisor^0,w,c
  3621  002BDA  5C1B               	subwf	___awmod@dividend^0,w,c
  3622  002BDC  501E               	movf	(___awmod@divisor+1)^0,w,c
  3623  002BDE  581C               	subwfb	(___awmod@dividend+1)^0,w,c
  3624  002BE0  A0D8               	btfss	status,0,c
  3625  002BE2  EFF5  F015         	goto	u4871
  3626  002BE6  EFF7  F015         	goto	u4870
  3627  002BEA                     u4871:
  3628  002BEA  EFFB  F015         	goto	l4575
  3629  002BEE                     u4870:
  3630  002BEE  501D               	movf	___awmod@divisor^0,w,c
  3631  002BF0  5E1B               	subwf	___awmod@dividend^0,f,c
  3632  002BF2  501E               	movf	(___awmod@divisor+1)^0,w,c
  3633  002BF4  5A1C               	subwfb	(___awmod@dividend+1)^0,f,c
  3634  002BF6                     l4575:
  3635  002BF6  90D8               	bcf	status,0,c
  3636  002BF8  321E               	rrcf	(___awmod@divisor+1)^0,f,c
  3637  002BFA  321D               	rrcf	___awmod@divisor^0,f,c
  3638  002BFC  2E1F               	decfsz	___awmod@counter^0,f,c
  3639  002BFE  EFEC  F015         	goto	l4571
  3640  002C02                     l4579:
  3641  002C02  5020               	movf	___awmod@sign^0,w,c
  3642  002C04  B4D8               	btfsc	status,2,c
  3643  002C06  EF07  F016         	goto	u4881
  3644  002C0A  EF09  F016         	goto	u4880
  3645  002C0E                     u4881:
  3646  002C0E  EF0D  F016         	goto	l4583
  3647  002C12                     u4880:
  3648  002C12  6C1B               	negf	___awmod@dividend^0,c
  3649  002C14  1E1C               	comf	(___awmod@dividend+1)^0,f,c
  3650  002C16  B0D8               	btfsc	status,0,c
  3651  002C18  2A1C               	incf	(___awmod@dividend+1)^0,f,c
  3652  002C1A                     l4583:
  3653  002C1A  C01B  F01B         	movff	___awmod@dividend,?___awmod
  3654  002C1E  C01C  F01C         	movff	___awmod@dividend+1,?___awmod+1
  3655  002C22  0012               	return		;funcret
  3656  002C24                     __end_of___awmod:
  3657                           	opt callstack 0
  3658                           
  3659 ;; *************** function ___awdiv *****************
  3660 ;; Defined at:
  3661 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;  dividend        2   18[COMRAM] int 
  3664 ;;  divisor         2   20[COMRAM] int 
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;  quotient        2   24[COMRAM] int 
  3667 ;;  sign            1   23[COMRAM] unsigned char 
  3668 ;;  counter         1   22[COMRAM] unsigned char 
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  2   18[COMRAM] int 
  3671 ;; Registers used:
  3672 ;;		wreg, status,2, status,0
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3678 ;;      Params:         4       0       0       0
  3679 ;;      Locals:         4       0       0       0
  3680 ;;      Temps:          0       0       0       0
  3681 ;;      Totals:         8       0       0       0
  3682 ;;Total ram usage:        8 bytes
  3683 ;; Hardware stack levels used:    1
  3684 ;; Hardware stack levels required when called:    4
  3685 ;; This function calls:
  3686 ;;		Nothing
  3687 ;; This function is called by:
  3688 ;;		_valorConvUART
  3689 ;;		_valorConvUARTbit
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           	psect	text12
  3694  00293C                     __ptext12:
  3695                           	opt callstack 0
  3696  00293C                     ___awdiv:
  3697                           	opt callstack 24
  3698  00293C  0E00               	movlw	0
  3699  00293E  6E18               	movwf	___awdiv@sign^0,c
  3700  002940  BE16               	btfsc	(___awdiv@divisor+1)^0,7,c
  3701  002942  EFA7  F014         	goto	u4770
  3702  002946  EFA5  F014         	goto	u4771
  3703  00294A                     u4771:
  3704  00294A  EFAD  F014         	goto	l4515
  3705  00294E                     u4770:
  3706  00294E  6C15               	negf	___awdiv@divisor^0,c
  3707  002950  1E16               	comf	(___awdiv@divisor+1)^0,f,c
  3708  002952  B0D8               	btfsc	status,0,c
  3709  002954  2A16               	incf	(___awdiv@divisor+1)^0,f,c
  3710  002956  0E01               	movlw	1
  3711  002958  6E18               	movwf	___awdiv@sign^0,c
  3712  00295A                     l4515:
  3713  00295A  BE14               	btfsc	(___awdiv@dividend+1)^0,7,c
  3714  00295C  EFB4  F014         	goto	u4780
  3715  002960  EFB2  F014         	goto	u4781
  3716  002964                     u4781:
  3717  002964  EFBA  F014         	goto	l4521
  3718  002968                     u4780:
  3719  002968  6C13               	negf	___awdiv@dividend^0,c
  3720  00296A  1E14               	comf	(___awdiv@dividend+1)^0,f,c
  3721  00296C  B0D8               	btfsc	status,0,c
  3722  00296E  2A14               	incf	(___awdiv@dividend+1)^0,f,c
  3723  002970  0E01               	movlw	1
  3724  002972  1A18               	xorwf	___awdiv@sign^0,f,c
  3725  002974                     l4521:
  3726  002974  0E00               	movlw	0
  3727  002976  6E1A               	movwf	(___awdiv@quotient+1)^0,c
  3728  002978  0E00               	movlw	0
  3729  00297A  6E19               	movwf	___awdiv@quotient^0,c
  3730  00297C  5015               	movf	___awdiv@divisor^0,w,c
  3731  00297E  1016               	iorwf	(___awdiv@divisor+1)^0,w,c
  3732  002980  B4D8               	btfsc	status,2,c
  3733  002982  EFC5  F014         	goto	u4791
  3734  002986  EFC7  F014         	goto	u4790
  3735  00298A                     u4791:
  3736  00298A  EFEF  F014         	goto	l4543
  3737  00298E                     u4790:
  3738  00298E  0E01               	movlw	1
  3739  002990  6E17               	movwf	___awdiv@counter^0,c
  3740  002992  EFCF  F014         	goto	l4529
  3741  002996                     l4527:
  3742  002996  90D8               	bcf	status,0,c
  3743  002998  3615               	rlcf	___awdiv@divisor^0,f,c
  3744  00299A  3616               	rlcf	(___awdiv@divisor+1)^0,f,c
  3745  00299C  2A17               	incf	___awdiv@counter^0,f,c
  3746  00299E                     l4529:
  3747  00299E  AE16               	btfss	(___awdiv@divisor+1)^0,7,c
  3748  0029A0  EFD4  F014         	goto	u4801
  3749  0029A4  EFD6  F014         	goto	u4800
  3750  0029A8                     u4801:
  3751  0029A8  EFCB  F014         	goto	l4527
  3752  0029AC                     u4800:
  3753  0029AC                     l4531:
  3754  0029AC  90D8               	bcf	status,0,c
  3755  0029AE  3619               	rlcf	___awdiv@quotient^0,f,c
  3756  0029B0  361A               	rlcf	(___awdiv@quotient+1)^0,f,c
  3757  0029B2  5015               	movf	___awdiv@divisor^0,w,c
  3758  0029B4  5C13               	subwf	___awdiv@dividend^0,w,c
  3759  0029B6  5016               	movf	(___awdiv@divisor+1)^0,w,c
  3760  0029B8  5814               	subwfb	(___awdiv@dividend+1)^0,w,c
  3761  0029BA  A0D8               	btfss	status,0,c
  3762  0029BC  EFE2  F014         	goto	u4811
  3763  0029C0  EFE4  F014         	goto	u4810
  3764  0029C4                     u4811:
  3765  0029C4  EFE9  F014         	goto	l4539
  3766  0029C8                     u4810:
  3767  0029C8  5015               	movf	___awdiv@divisor^0,w,c
  3768  0029CA  5E13               	subwf	___awdiv@dividend^0,f,c
  3769  0029CC  5016               	movf	(___awdiv@divisor+1)^0,w,c
  3770  0029CE  5A14               	subwfb	(___awdiv@dividend+1)^0,f,c
  3771  0029D0  8019               	bsf	___awdiv@quotient^0,0,c
  3772  0029D2                     l4539:
  3773  0029D2  90D8               	bcf	status,0,c
  3774  0029D4  3216               	rrcf	(___awdiv@divisor+1)^0,f,c
  3775  0029D6  3215               	rrcf	___awdiv@divisor^0,f,c
  3776  0029D8  2E17               	decfsz	___awdiv@counter^0,f,c
  3777  0029DA  EFD6  F014         	goto	l4531
  3778  0029DE                     l4543:
  3779  0029DE  5018               	movf	___awdiv@sign^0,w,c
  3780  0029E0  B4D8               	btfsc	status,2,c
  3781  0029E2  EFF5  F014         	goto	u4821
  3782  0029E6  EFF7  F014         	goto	u4820
  3783  0029EA                     u4821:
  3784  0029EA  EFFB  F014         	goto	l4547
  3785  0029EE                     u4820:
  3786  0029EE  6C19               	negf	___awdiv@quotient^0,c
  3787  0029F0  1E1A               	comf	(___awdiv@quotient+1)^0,f,c
  3788  0029F2  B0D8               	btfsc	status,0,c
  3789  0029F4  2A1A               	incf	(___awdiv@quotient+1)^0,f,c
  3790  0029F6                     l4547:
  3791  0029F6  C019  F013         	movff	___awdiv@quotient,?___awdiv
  3792  0029FA  C01A  F014         	movff	___awdiv@quotient+1,?___awdiv+1
  3793  0029FE  0012               	return		;funcret
  3794  002A00                     __end_of___awdiv:
  3795                           	opt callstack 0
  3796                           
  3797 ;; *************** function _UARTSendString *****************
  3798 ;; Defined at:
  3799 ;;		line 57 in file "./bluetooth.h"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;  str             2   74[BANK0 ] PTR unsigned char 
  3802 ;;		 -> STR_68(5), STR_67(5), STR_52(2), STR_51(5), 
  3803 ;;		 -> STR_50(5), STR_49(11), STR_48(4), STR_47(3), 
  3804 ;;		 -> STR_46(14), STR_45(13), STR_44(10), STR_43(2), 
  3805 ;;		 -> STR_42(11), STR_41(2), STR_40(2), testeADbit@string(2), 
  3806 ;;		 -> STR_39(2), STR_38(11), STR_37(2), STR_36(6), 
  3807 ;;		 -> STR_35(2), STR_34(6), STR_33(2), STR_32(6), 
  3808 ;;		 -> STR_31(2), STR_30(6), STR_29(2), STR_28(6), 
  3809 ;;		 -> STR_27(2), STR_26(6), STR_25(2), STR_24(6), 
  3810 ;;		 -> STR_23(2), STR_22(6), STR_5(15), STR_2(14), 
  3811 ;;		 -> valorConvUARTbit@string(5), valorConvUART@string(5), STR_1(1), 
  3812 ;;  max_length      2   76[BANK0 ] const int 
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;  i               2   80[BANK0 ] int 
  3815 ;; Return value:  Size  Location     Type
  3816 ;;                  1    wreg      void 
  3817 ;; Registers used:
  3818 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3819 ;; Tracked objects:
  3820 ;;		On entry : 0/0
  3821 ;;		On exit  : 0/0
  3822 ;;		Unchanged: 0/0
  3823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3824 ;;      Params:         0       4       0       0
  3825 ;;      Locals:         0       2       0       0
  3826 ;;      Temps:          0       2       0       0
  3827 ;;      Totals:         0       8       0       0
  3828 ;;Total ram usage:        8 bytes
  3829 ;; Hardware stack levels used:    1
  3830 ;; Hardware stack levels required when called:    6
  3831 ;; This function calls:
  3832 ;;		_UARTSendChar
  3833 ;;		_UARTWriteTest
  3834 ;; This function is called by:
  3835 ;;		_testeMotores
  3836 ;;		_testeAD
  3837 ;;		_testeADbit
  3838 ;;		_main
  3839 ;; This function uses a non-reentrant model
  3840 ;;
  3841                           
  3842                           	psect	text13
  3843  002870                     __ptext13:
  3844                           	opt callstack 0
  3845  002870                     _UARTSendString:
  3846                           	opt callstack 23
  3847  002870                     
  3848                           ;./bluetooth.h: 58:     int i = 0;
  3849  002870  0E00               	movlw	0
  3850  002872  0100               	movlb	0	; () banked
  3851  002874  6FB1               	movwf	(UARTSendString@i+1)& (0+255),b
  3852  002876  0E00               	movlw	0
  3853  002878  6FB0               	movwf	UARTSendString@i& (0+255),b
  3854                           
  3855                           ;./bluetooth.h: 60:     for (i = 0; i < max_length; i++) {
  3856  00287A  0E00               	movlw	0
  3857  00287C  6FB1               	movwf	(UARTSendString@i+1)& (0+255),b
  3858  00287E  0E00               	movlw	0
  3859  002880  6FB0               	movwf	UARTSendString@i& (0+255),b
  3860  002882                     
  3861                           ; BSR set to: 0
  3862  002882  BFAD               	btfsc	(UARTSendString@max_length+1)& (0+255),7,b
  3863  002884  EF4E  F014         	goto	u4900
  3864  002888  51AD               	movf	(UARTSendString@max_length+1)& (0+255),w,b
  3865  00288A  E106               	bnz	u4901
  3866  00288C  05AC               	decf	UARTSendString@max_length& (0+255),w,b
  3867  00288E  B0D8               	btfsc	status,0,c
  3868  002890  EF4C  F014         	goto	u4901
  3869  002894  EF4E  F014         	goto	u4900
  3870  002898                     u4901:
  3871  002898  EF50  F014         	goto	l4595
  3872  00289C                     u4900:
  3873  00289C  EF9D  F014         	goto	l140
  3874  0028A0                     l4595:
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;./bluetooth.h: 62:         if (str[i] == '\0') break;
  3878  0028A0  51B0               	movf	UARTSendString@i& (0+255),w,b
  3879  0028A2  25AA               	addwf	UARTSendString@str& (0+255),w,b
  3880  0028A4  6FAE               	movwf	??_UARTSendString& (0+255),b
  3881  0028A6  51B1               	movf	(UARTSendString@i+1)& (0+255),w,b
  3882  0028A8  21AB               	addwfc	(UARTSendString@str+1)& (0+255),w,b
  3883  0028AA  6FAF               	movwf	(??_UARTSendString+1)& (0+255),b
  3884  0028AC  C0AE  FFF6         	movff	??_UARTSendString,tblptrl
  3885  0028B0  C0AF  FFF7         	movff	??_UARTSendString+1,tblptrh
  3886  0028B4  6AF8               	clrf	tblptru,c
  3887  0028B6  0E02               	movlw	(high __ramtop+-1)
  3888  0028B8  64F7               	cpfsgt	tblptrh,c
  3889  0028BA  D003               	bra	u4917
  3890  0028BC  0008               	tblrd		*
  3891  0028BE  50F5               	movf	tablat,w,c
  3892  0028C0  D005               	bra	u4910
  3893  0028C2                     u4917:
  3894  0028C2  CFF6 FFE9          	movff	tblptrl,fsr0l
  3895  0028C6  CFF7 FFEA          	movff	tblptrh,fsr0h
  3896  0028CA  50EF               	movf	indf0,w,c
  3897  0028CC                     u4910:
  3898  0028CC  0900               	iorlw	0
  3899  0028CE  A4D8               	btfss	status,2,c
  3900  0028D0  EF6C  F014         	goto	u4921
  3901  0028D4  EF6E  F014         	goto	u4920
  3902  0028D8                     u4921:
  3903  0028D8  EF70  F014         	goto	l4599
  3904  0028DC                     u4920:
  3905  0028DC  EF9D  F014         	goto	l140
  3906  0028E0                     l4599:
  3907                           
  3908                           ;./bluetooth.h: 63:         UARTSendChar(str[i]);
  3909  0028E0  0100               	movlb	0	; () banked
  3910  0028E2  51B0               	movf	UARTSendString@i& (0+255),w,b
  3911  0028E4  25AA               	addwf	UARTSendString@str& (0+255),w,b
  3912  0028E6  6FAE               	movwf	??_UARTSendString& (0+255),b
  3913  0028E8  51B1               	movf	(UARTSendString@i+1)& (0+255),w,b
  3914  0028EA  21AB               	addwfc	(UARTSendString@str+1)& (0+255),w,b
  3915  0028EC  6FAF               	movwf	(??_UARTSendString+1)& (0+255),b
  3916  0028EE  C0AE  FFF6         	movff	??_UARTSendString,tblptrl
  3917  0028F2  C0AF  FFF7         	movff	??_UARTSendString+1,tblptrh
  3918  0028F6  6AF8               	clrf	tblptru,c
  3919  0028F8  0E02               	movlw	(high __ramtop+-1)
  3920  0028FA  64F7               	cpfsgt	tblptrh,c
  3921  0028FC  D003               	bra	u4937
  3922  0028FE  0008               	tblrd		*
  3923  002900  50F5               	movf	tablat,w,c
  3924  002902  D005               	bra	u4930
  3925  002904                     u4937:
  3926  002904  CFF6 FFE9          	movff	tblptrl,fsr0l
  3927  002908  CFF7 FFEA          	movff	tblptrh,fsr0h
  3928  00290C  50EF               	movf	indf0,w,c
  3929  00290E                     u4930:
  3930  00290E  EC24  F019         	call	_UARTSendChar
  3931  002912                     
  3932                           ;./bluetooth.h: 64:         UARTWriteTest();
  3933  002912  EC14  F019         	call	_UARTWriteTest	;wreg free
  3934  002916                     
  3935                           ;./bluetooth.h: 66:     }
  3936  002916  0100               	movlb	0	; () banked
  3937  002918  4BB0               	infsnz	UARTSendString@i& (0+255),f,b
  3938  00291A  2BB1               	incf	(UARTSendString@i+1)& (0+255),f,b
  3939  00291C                     
  3940                           ; BSR set to: 0
  3941  00291C  51AC               	movf	UARTSendString@max_length& (0+255),w,b
  3942  00291E  5DB0               	subwf	UARTSendString@i& (0+255),w,b
  3943  002920  51B1               	movf	(UARTSendString@i+1)& (0+255),w,b
  3944  002922  0A80               	xorlw	128
  3945  002924  6FAE               	movwf	??_UARTSendString& (0+255),b
  3946  002926  51AD               	movf	(UARTSendString@max_length+1)& (0+255),w,b
  3947  002928  0A80               	xorlw	128
  3948  00292A  59AE               	subwfb	??_UARTSendString& (0+255),w,b
  3949  00292C  A0D8               	btfss	status,0,c
  3950  00292E  EF9B  F014         	goto	u4941
  3951  002932  EF9D  F014         	goto	u4940
  3952  002936                     u4941:
  3953  002936  EF50  F014         	goto	l4595
  3954  00293A                     u4940:
  3955  00293A                     l140:
  3956  00293A  0012               	return		;funcret
  3957  00293C                     __end_of_UARTSendString:
  3958                           	opt callstack 0
  3959                           
  3960 ;; *************** function _UARTSendChar *****************
  3961 ;; Defined at:
  3962 ;;		line 52 in file "./bluetooth.h"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;  c               1    wreg     unsigned char 
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;  c               1   18[COMRAM] unsigned char 
  3967 ;; Return value:  Size  Location     Type
  3968 ;;                  1    wreg      void 
  3969 ;; Registers used:
  3970 ;;		wreg, cstack
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3976 ;;      Params:         0       0       0       0
  3977 ;;      Locals:         1       0       0       0
  3978 ;;      Temps:          0       0       0       0
  3979 ;;      Totals:         1       0       0       0
  3980 ;;Total ram usage:        1 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; Hardware stack levels required when called:    5
  3983 ;; This function calls:
  3984 ;;		_UARTWriteTest
  3985 ;; This function is called by:
  3986 ;;		_UARTSendString
  3987 ;;		_main
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           	psect	text14
  3992  003248                     __ptext14:
  3993                           	opt callstack 0
  3994  003248                     _UARTSendChar:
  3995                           	opt callstack 23
  3996                           
  3997                           ;incstack = 0
  3998                           ;UARTSendChar@c stored from wreg
  3999  003248  6E13               	movwf	UARTSendChar@c^0,c
  4000  00324A                     
  4001                           ;./bluetooth.h: 53:     TXREG = c;
  4002  00324A  C013  FFAD         	movff	UARTSendChar@c,4013	;volatile
  4003  00324E                     
  4004                           ;./bluetooth.h: 54:     UARTWriteTest();
  4005  00324E  EC14  F019         	call	_UARTWriteTest	;wreg free
  4006  003252  0012               	return		;funcret
  4007  003254                     __end_of_UARTSendChar:
  4008                           	opt callstack 0
  4009                           
  4010 ;; *************** function _UARTWriteTest *****************
  4011 ;; Defined at:
  4012 ;;		line 48 in file "./bluetooth.h"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;		None
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;		None
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  1    wreg      void 
  4019 ;; Registers used:
  4020 ;;		None
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4026 ;;      Params:         0       0       0       0
  4027 ;;      Locals:         0       0       0       0
  4028 ;;      Temps:          0       0       0       0
  4029 ;;      Totals:         0       0       0       0
  4030 ;;Total ram usage:        0 bytes
  4031 ;; Hardware stack levels used:    1
  4032 ;; Hardware stack levels required when called:    4
  4033 ;; This function calls:
  4034 ;;		Nothing
  4035 ;; This function is called by:
  4036 ;;		_UARTSendChar
  4037 ;;		_UARTSendString
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           	psect	text15
  4042  003228                     __ptext15:
  4043                           	opt callstack 0
  4044  003228                     _UARTWriteTest:
  4045                           	opt callstack 24
  4046  003228                     l128:
  4047  003228  A2AC               	btfss	4012,1,c	;volatile
  4048  00322A  EF19  F019         	goto	u4301
  4049  00322E  EF1B  F019         	goto	u4300
  4050  003232                     u4301:
  4051  003232  EF14  F019         	goto	l128
  4052  003236                     u4300:
  4053  003236  0012               	return		;funcret
  4054  003238                     __end_of_UARTWriteTest:
  4055                           	opt callstack 0
  4056                           
  4057 ;; *************** function _setPID *****************
  4058 ;; Defined at:
  4059 ;;		line 97 in file "./Seguidor.h"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;		None
  4062 ;; Auto vars:     Size  Location     Type
  4063 ;;		None
  4064 ;; Return value:  Size  Location     Type
  4065 ;;                  1    wreg      void 
  4066 ;; Registers used:
  4067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4068 ;; Tracked objects:
  4069 ;;		On entry : 0/0
  4070 ;;		On exit  : 0/0
  4071 ;;		Unchanged: 0/0
  4072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4073 ;;      Params:         0       0       0       0
  4074 ;;      Locals:         0       8       0       0
  4075 ;;      Temps:          0       0       0       0
  4076 ;;      Totals:         0       8       0       0
  4077 ;;Total ram usage:        8 bytes
  4078 ;; Hardware stack levels used:    1
  4079 ;; Hardware stack levels required when called:    8
  4080 ;; This function calls:
  4081 ;;		___fladd
  4082 ;;		___fldiv
  4083 ;;		___flmul
  4084 ;;		___flsub
  4085 ;;		___xxtofl
  4086 ;;		_configDA
  4087 ;;		_moverMotor
  4088 ;;		_posicao
  4089 ;; This function is called by:
  4090 ;;		_main
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           
  4094                           	psect	text16
  4095  0017C8                     __ptext16:
  4096                           	opt callstack 0
  4097  0017C8                     _setPID:
  4098                           	opt callstack 22
  4099  0017C8                     
  4100                           ;./Seguidor.h: 99:     configDA();
  4101  0017C8  EC03  F010         	call	_configDA	;wreg free
  4102  0017CC                     
  4103                           ;./Seguidor.h: 101:     pos = posicao();
  4104  0017CC  EC38  F00F         	call	_posicao	;wreg free
  4105  0017D0  C08D  F0E8         	movff	?_posicao,_pos
  4106  0017D4  C08E  F0E9         	movff	?_posicao+1,_pos+1
  4107  0017D8  C08F  F0EA         	movff	?_posicao+2,_pos+2
  4108  0017DC  C090  F0EB         	movff	?_posicao+3,_pos+3
  4109  0017E0                     
  4110                           ;./Seguidor.h: 103:     posin = pos;
  4111  0017E0  C0E8  F0EC         	movff	_pos,_posin
  4112  0017E4  C0E9  F0ED         	movff	_pos+1,_posin+1
  4113  0017E8  C0EA  F0EE         	movff	_pos+2,_posin+2
  4114  0017EC  C0EB  F0EF         	movff	_pos+3,_posin+3
  4115  0017F0                     
  4116                           ;./Seguidor.h: 105:     erro = setpoint - pos;
  4117  0017F0  0E00               	movlw	0
  4118  0017F2  0100               	movlb	0	; () banked
  4119  0017F4  6F6C               	movwf	___flsub@b& (0+255),b
  4120  0017F6  0E00               	movlw	0
  4121  0017F8  6F6D               	movwf	(___flsub@b+1)& (0+255),b
  4122  0017FA  0E40               	movlw	64
  4123  0017FC  6F6E               	movwf	(___flsub@b+2)& (0+255),b
  4124  0017FE  0E40               	movlw	64
  4125  001800  6F6F               	movwf	(___flsub@b+3)& (0+255),b
  4126  001802  C0E8  F070         	movff	_pos,___flsub@a
  4127  001806  C0E9  F071         	movff	_pos+1,___flsub@a+1
  4128  00180A  C0EA  F072         	movff	_pos+2,___flsub@a+2
  4129  00180E  C0EB  F073         	movff	_pos+3,___flsub@a+3
  4130  001812  ECD2  F017         	call	___flsub	;wreg free
  4131  001816  C06C  F0E4         	movff	?___flsub,_erro
  4132  00181A  C06D  F0E5         	movff	?___flsub+1,_erro+1
  4133  00181E  C06E  F0E6         	movff	?___flsub+2,_erro+2
  4134  001822  C06F  F0E7         	movff	?___flsub+3,_erro+3
  4135  001826                     
  4136                           ;./Seguidor.h: 107:     de = erro - erroi;
  4137  001826  C0E4  F06C         	movff	_erro,___flsub@b
  4138  00182A  C0E5  F06D         	movff	_erro+1,___flsub@b+1
  4139  00182E  C0E6  F06E         	movff	_erro+2,___flsub@b+2
  4140  001832  C0E7  F06F         	movff	_erro+3,___flsub@b+3
  4141  001836  C0B8  F070         	movff	_erroi,___flsub@a
  4142  00183A  C0B9  F071         	movff	_erroi+1,___flsub@a+1
  4143  00183E  C0BA  F072         	movff	_erroi+2,___flsub@a+2
  4144  001842  C0BB  F073         	movff	_erroi+3,___flsub@a+3
  4145  001846  ECD2  F017         	call	___flsub	;wreg free
  4146  00184A  C06C  F0C0         	movff	?___flsub,_de
  4147  00184E  C06D  F0C1         	movff	?___flsub+1,_de+1
  4148  001852  C06E  F0C2         	movff	?___flsub+2,_de+2
  4149  001856  C06F  F0C3         	movff	?___flsub+3,_de+3
  4150  00185A                     
  4151                           ;./Seguidor.h: 109:     erroi = erro;
  4152  00185A  C0E4  F0B8         	movff	_erro,_erroi
  4153  00185E  C0E5  F0B9         	movff	_erro+1,_erroi+1
  4154  001862  C0E6  F0BA         	movff	_erro+2,_erroi+2
  4155  001866  C0E7  F0BB         	movff	_erro+3,_erroi+3
  4156  00186A                     
  4157                           ;./Seguidor.h: 111:     dt = (millis - tf) / 1000.0;
  4158  00186A  C0BC  F070         	movff	_tf,___flsub@a
  4159  00186E  C0BD  F071         	movff	_tf+1,___flsub@a+1
  4160  001872  C0BE  F072         	movff	_tf+2,___flsub@a+2
  4161  001876  C0BF  F073         	movff	_tf+3,___flsub@a+3
  4162  00187A  C0F0  F013         	movff	_millis,___xxtofl@val
  4163  00187E  C0F1  F014         	movff	_millis+1,___xxtofl@val+1
  4164  001882  C0F2  F015         	movff	_millis+2,___xxtofl@val+2
  4165  001886  C0F3  F016         	movff	_millis+3,___xxtofl@val+3
  4166  00188A  0E00               	movlw	0
  4167  00188C  EC5E  F00E         	call	___xxtofl
  4168  001890  C013  F06C         	movff	?___xxtofl,___flsub@b
  4169  001894  C014  F06D         	movff	?___xxtofl+1,___flsub@b+1
  4170  001898  C015  F06E         	movff	?___xxtofl+2,___flsub@b+2
  4171  00189C  C016  F06F         	movff	?___xxtofl+3,___flsub@b+3
  4172  0018A0  ECD2  F017         	call	___flsub	;wreg free
  4173  0018A4  C06C  F074         	movff	?___flsub,___fldiv@b
  4174  0018A8  C06D  F075         	movff	?___flsub+1,___fldiv@b+1
  4175  0018AC  C06E  F076         	movff	?___flsub+2,___fldiv@b+2
  4176  0018B0  C06F  F077         	movff	?___flsub+3,___fldiv@b+3
  4177  0018B4  0E00               	movlw	0
  4178  0018B6  0100               	movlb	0	; () banked
  4179  0018B8  6F78               	movwf	___fldiv@a& (0+255),b
  4180  0018BA  0E00               	movlw	0
  4181  0018BC  6F79               	movwf	(___fldiv@a+1)& (0+255),b
  4182  0018BE  0E7A               	movlw	122
  4183  0018C0  6F7A               	movwf	(___fldiv@a+2)& (0+255),b
  4184  0018C2  0E44               	movlw	68
  4185  0018C4  6F7B               	movwf	(___fldiv@a+3)& (0+255),b
  4186  0018C6  EC82  F008         	call	___fldiv	;wreg free
  4187  0018CA  C074  F0C4         	movff	?___fldiv,_dt
  4188  0018CE  C075  F0C5         	movff	?___fldiv+1,_dt+1
  4189  0018D2  C076  F0C6         	movff	?___fldiv+2,_dt+2
  4190  0018D6  C077  F0C7         	movff	?___fldiv+3,_dt+3
  4191  0018DA                     
  4192                           ;./Seguidor.h: 113:     tf = millis;
  4193  0018DA  C0F0  F013         	movff	_millis,___xxtofl@val
  4194  0018DE  C0F1  F014         	movff	_millis+1,___xxtofl@val+1
  4195  0018E2  C0F2  F015         	movff	_millis+2,___xxtofl@val+2
  4196  0018E6  C0F3  F016         	movff	_millis+3,___xxtofl@val+3
  4197  0018EA  0E00               	movlw	0
  4198  0018EC  EC5E  F00E         	call	___xxtofl
  4199  0018F0  C013  F0BC         	movff	?___xxtofl,_tf
  4200  0018F4  C014  F0BD         	movff	?___xxtofl+1,_tf+1
  4201  0018F8  C015  F0BE         	movff	?___xxtofl+2,_tf+2
  4202  0018FC  C016  F0BF         	movff	?___xxtofl+3,_tf+3
  4203  001900                     
  4204                           ;./Seguidor.h: 115:     P = kp*erro;
  4205  001900  C0E4  F021         	movff	_erro,___flmul@b
  4206  001904  C0E5  F022         	movff	_erro+1,___flmul@b+1
  4207  001908  C0E6  F023         	movff	_erro+2,___flmul@b+2
  4208  00190C  C0E7  F024         	movff	_erro+3,___flmul@b+3
  4209  001910  0E00               	movlw	0
  4210  001912  6E25               	movwf	___flmul@a^0,c
  4211  001914  0E00               	movlw	0
  4212  001916  6E26               	movwf	(___flmul@a+1)^0,c
  4213  001918  0E00               	movlw	0
  4214  00191A  6E27               	movwf	(___flmul@a+2)^0,c
  4215  00191C  0E00               	movlw	0
  4216  00191E  6E28               	movwf	(___flmul@a+3)^0,c
  4217  001920  EC6D  F006         	call	___flmul	;wreg free
  4218  001924  C021  F0E0         	movff	?___flmul,_P
  4219  001928  C022  F0E1         	movff	?___flmul+1,_P+1
  4220  00192C  C023  F0E2         	movff	?___flmul+2,_P+2
  4221  001930  C024  F0E3         	movff	?___flmul+3,_P+3
  4222  001934                     
  4223                           ;./Seguidor.h: 117:     I = I + ki * erro*dt;
  4224  001934  0E00               	movlw	0
  4225  001936  6E25               	movwf	___flmul@a^0,c
  4226  001938  0E00               	movlw	0
  4227  00193A  6E26               	movwf	(___flmul@a+1)^0,c
  4228  00193C  0E00               	movlw	0
  4229  00193E  6E27               	movwf	(___flmul@a+2)^0,c
  4230  001940  0E00               	movlw	0
  4231  001942  6E28               	movwf	(___flmul@a+3)^0,c
  4232  001944  C0E4  F021         	movff	_erro,___flmul@b
  4233  001948  C0E5  F022         	movff	_erro+1,___flmul@b+1
  4234  00194C  C0E6  F023         	movff	_erro+2,___flmul@b+2
  4235  001950  C0E7  F024         	movff	_erro+3,___flmul@b+3
  4236  001954  EC6D  F006         	call	___flmul	;wreg free
  4237  001958  C021  F0A3         	movff	?___flmul,_setPID$1567
  4238  00195C  C022  F0A4         	movff	?___flmul+1,_setPID$1567+1
  4239  001960  C023  F0A5         	movff	?___flmul+2,_setPID$1567+2
  4240  001964  C024  F0A6         	movff	?___flmul+3,_setPID$1567+3
  4241  001968                     
  4242                           ;./Seguidor.h: 117:     I = I + ki * erro*dt;
  4243  001968  C0C4  F025         	movff	_dt,___flmul@a
  4244  00196C  C0C5  F026         	movff	_dt+1,___flmul@a+1
  4245  001970  C0C6  F027         	movff	_dt+2,___flmul@a+2
  4246  001974  C0C7  F028         	movff	_dt+3,___flmul@a+3
  4247  001978  C0A3  F021         	movff	_setPID$1567,___flmul@b
  4248  00197C  C0A4  F022         	movff	_setPID$1567+1,___flmul@b+1
  4249  001980  C0A5  F023         	movff	_setPID$1567+2,___flmul@b+2
  4250  001984  C0A6  F024         	movff	_setPID$1567+3,___flmul@b+3
  4251  001988  EC6D  F006         	call	___flmul	;wreg free
  4252  00198C  C021  F060         	movff	?___flmul,___fladd@b
  4253  001990  C022  F061         	movff	?___flmul+1,___fladd@b+1
  4254  001994  C023  F062         	movff	?___flmul+2,___fladd@b+2
  4255  001998  C024  F063         	movff	?___flmul+3,___fladd@b+3
  4256  00199C  C0DC  F064         	movff	_I,___fladd@a
  4257  0019A0  C0DD  F065         	movff	_I+1,___fladd@a+1
  4258  0019A4  C0DE  F066         	movff	_I+2,___fladd@a+2
  4259  0019A8  C0DF  F067         	movff	_I+3,___fladd@a+3
  4260  0019AC  ECD3  F001         	call	___fladd	;wreg free
  4261  0019B0  C060  F0DC         	movff	?___fladd,_I
  4262  0019B4  C061  F0DD         	movff	?___fladd+1,_I+1
  4263  0019B8  C062  F0DE         	movff	?___fladd+2,_I+2
  4264  0019BC  C063  F0DF         	movff	?___fladd+3,_I+3
  4265  0019C0                     
  4266                           ;./Seguidor.h: 119:     D = kd * de / dt;
  4267  0019C0  0E00               	movlw	0
  4268  0019C2  6E25               	movwf	___flmul@a^0,c
  4269  0019C4  0E00               	movlw	0
  4270  0019C6  6E26               	movwf	(___flmul@a+1)^0,c
  4271  0019C8  0E00               	movlw	0
  4272  0019CA  6E27               	movwf	(___flmul@a+2)^0,c
  4273  0019CC  0E00               	movlw	0
  4274  0019CE  6E28               	movwf	(___flmul@a+3)^0,c
  4275  0019D0  C0C0  F021         	movff	_de,___flmul@b
  4276  0019D4  C0C1  F022         	movff	_de+1,___flmul@b+1
  4277  0019D8  C0C2  F023         	movff	_de+2,___flmul@b+2
  4278  0019DC  C0C3  F024         	movff	_de+3,___flmul@b+3
  4279  0019E0  EC6D  F006         	call	___flmul	;wreg free
  4280  0019E4  C021  F074         	movff	?___flmul,___fldiv@b
  4281  0019E8  C022  F075         	movff	?___flmul+1,___fldiv@b+1
  4282  0019EC  C023  F076         	movff	?___flmul+2,___fldiv@b+2
  4283  0019F0  C024  F077         	movff	?___flmul+3,___fldiv@b+3
  4284  0019F4  C0C4  F078         	movff	_dt,___fldiv@a
  4285  0019F8  C0C5  F079         	movff	_dt+1,___fldiv@a+1
  4286  0019FC  C0C6  F07A         	movff	_dt+2,___fldiv@a+2
  4287  001A00  C0C7  F07B         	movff	_dt+3,___fldiv@a+3
  4288  001A04  EC82  F008         	call	___fldiv	;wreg free
  4289  001A08  C074  F0D8         	movff	?___fldiv,_D
  4290  001A0C  C075  F0D9         	movff	?___fldiv+1,_D+1
  4291  001A10  C076  F0DA         	movff	?___fldiv+2,_D+2
  4292  001A14  C077  F0DB         	movff	?___fldiv+3,_D+3
  4293  001A18                     
  4294                           ;./Seguidor.h: 121:     PID = P + I + D;
  4295  001A18  C0DC  F064         	movff	_I,___fladd@a
  4296  001A1C  C0DD  F065         	movff	_I+1,___fladd@a+1
  4297  001A20  C0DE  F066         	movff	_I+2,___fladd@a+2
  4298  001A24  C0DF  F067         	movff	_I+3,___fladd@a+3
  4299  001A28  C0E0  F060         	movff	_P,___fladd@b
  4300  001A2C  C0E1  F061         	movff	_P+1,___fladd@b+1
  4301  001A30  C0E2  F062         	movff	_P+2,___fladd@b+2
  4302  001A34  C0E3  F063         	movff	_P+3,___fladd@b+3
  4303  001A38  ECD3  F001         	call	___fladd	;wreg free
  4304  001A3C  C060  F0A7         	movff	?___fladd,_setPID$1568
  4305  001A40  C061  F0A8         	movff	?___fladd+1,_setPID$1568+1
  4306  001A44  C062  F0A9         	movff	?___fladd+2,_setPID$1568+2
  4307  001A48  C063  F0AA         	movff	?___fladd+3,_setPID$1568+3
  4308  001A4C                     
  4309                           ;./Seguidor.h: 121:     PID = P + I + D;
  4310  001A4C  C0A7  F060         	movff	_setPID$1568,___fladd@b
  4311  001A50  C0A8  F061         	movff	_setPID$1568+1,___fladd@b+1
  4312  001A54  C0A9  F062         	movff	_setPID$1568+2,___fladd@b+2
  4313  001A58  C0AA  F063         	movff	_setPID$1568+3,___fladd@b+3
  4314  001A5C  C0D8  F064         	movff	_D,___fladd@a
  4315  001A60  C0D9  F065         	movff	_D+1,___fladd@a+1
  4316  001A64  C0DA  F066         	movff	_D+2,___fladd@a+2
  4317  001A68  C0DB  F067         	movff	_D+3,___fladd@a+3
  4318  001A6C  ECD3  F001         	call	___fladd	;wreg free
  4319  001A70  C060  F0D4         	movff	?___fladd,_PID
  4320  001A74  C061  F0D5         	movff	?___fladd+1,_PID+1
  4321  001A78  C062  F0D6         	movff	?___fladd+2,_PID+2
  4322  001A7C  C063  F0D7         	movff	?___fladd+3,_PID+3
  4323  001A80                     
  4324                           ;./Seguidor.h: 123:     moverMotor(PID);
  4325  001A80  C0D4  F095         	movff	_PID,moverMotor@PID
  4326  001A84  C0D5  F096         	movff	_PID+1,moverMotor@PID+1
  4327  001A88  C0D6  F097         	movff	_PID+2,moverMotor@PID+2
  4328  001A8C  C0D7  F098         	movff	_PID+3,moverMotor@PID+3
  4329  001A90  EC00  F015         	call	_moverMotor	;wreg free
  4330  001A94  0012               	return		;funcret
  4331  001A96                     __end_of_setPID:
  4332                           	opt callstack 0
  4333                           
  4334 ;; *************** function _posicao *****************
  4335 ;; Defined at:
  4336 ;;		line 49 in file "./Seguidor.h"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;		None
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;  total           4   57[BANK0 ] void 
  4341 ;;  pos             4   53[BANK0 ] void 
  4342 ;;  local           4   49[BANK0 ] void 
  4343 ;;  i               2   61[BANK0 ] int 
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  4   45[BANK0 ] int 
  4346 ;; Registers used:
  4347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4353 ;;      Params:         0       4       0       0
  4354 ;;      Locals:         0      14       0       0
  4355 ;;      Temps:          2       0       0       0
  4356 ;;      Totals:         2      18       0       0
  4357 ;;Total ram usage:       20 bytes
  4358 ;; Hardware stack levels used:    1
  4359 ;; Hardware stack levels required when called:    5
  4360 ;; This function calls:
  4361 ;;		___fladd
  4362 ;;		___fldiv
  4363 ;;		___fleq
  4364 ;; This function is called by:
  4365 ;;		_setPID
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           	psect	text17
  4370  001E70                     __ptext17:
  4371                           	opt callstack 0
  4372  001E70                     _posicao:
  4373                           	opt callstack 24
  4374  001E70                     
  4375                           ;./Seguidor.h: 50:     int i;;./Seguidor.h: 51:     double pos = 0, local, total = 0;
  4376  001E70  0E00               	movlw	0
  4377  001E72  0100               	movlb	0	; () banked
  4378  001E74  6F95               	movwf	posicao@pos& (0+255),b
  4379  001E76  0E00               	movlw	0
  4380  001E78  6F96               	movwf	(posicao@pos+1)& (0+255),b
  4381  001E7A  0E00               	movlw	0
  4382  001E7C  6F97               	movwf	(posicao@pos+2)& (0+255),b
  4383  001E7E  0E00               	movlw	0
  4384  001E80  6F98               	movwf	(posicao@pos+3)& (0+255),b
  4385  001E82  0E00               	movlw	0
  4386  001E84  6F99               	movwf	posicao@total& (0+255),b
  4387  001E86  0E00               	movlw	0
  4388  001E88  6F9A               	movwf	(posicao@total+1)& (0+255),b
  4389  001E8A  0E00               	movlw	0
  4390  001E8C  6F9B               	movwf	(posicao@total+2)& (0+255),b
  4391  001E8E  0E00               	movlw	0
  4392  001E90  6F9C               	movwf	(posicao@total+3)& (0+255),b
  4393                           
  4394                           ;./Seguidor.h: 52:     for (i = 1; i < 6; i++) {
  4395  001E92  0E00               	movlw	0
  4396  001E94  6F9E               	movwf	(posicao@i+1)& (0+255),b
  4397  001E96  0E01               	movlw	1
  4398  001E98  6F9D               	movwf	posicao@i& (0+255),b
  4399  001E9A                     l4691:
  4400                           
  4401                           ; BSR set to: 0
  4402                           ;./Seguidor.h: 53:         if (leitura[i] == 1) {
  4403  001E9A  0E00               	movlw	low _leitura
  4404  001E9C  6E3E               	movwf	??_posicao^0,c
  4405  001E9E  0E01               	movlw	high _leitura
  4406  001EA0  6E3F               	movwf	(??_posicao+1)^0,c
  4407  001EA2  90D8               	bcf	status,0,c
  4408  001EA4  359D               	rlcf	posicao@i& (0+255),w,b
  4409  001EA6  6ED9               	movwf	fsr2l,c
  4410  001EA8  359E               	rlcf	(posicao@i+1)& (0+255),w,b
  4411  001EAA  6EDA               	movwf	fsr2h,c
  4412  001EAC  90D8               	bcf	status,0,c
  4413  001EAE  36D9               	rlcf	fsr2l,f,c
  4414  001EB0  36DA               	rlcf	fsr2h,f,c
  4415  001EB2  503E               	movf	??_posicao^0,w,c
  4416  001EB4  26D9               	addwf	fsr2l,f,c
  4417  001EB6  503F               	movf	(??_posicao+1)^0,w,c
  4418  001EB8  22DA               	addwfc	fsr2h,f,c
  4419  001EBA  CFDE F013          	movff	postinc2,___fleq@ff1
  4420  001EBE  CFDE F014          	movff	postinc2,___fleq@ff1+1
  4421  001EC2  CFDE F015          	movff	postinc2,___fleq@ff1+2
  4422  001EC6  CFDE F016          	movff	postinc2,___fleq@ff1+3
  4423  001ECA  0E00               	movlw	0
  4424  001ECC  6E17               	movwf	___fleq@ff2^0,c
  4425  001ECE  0E00               	movlw	0
  4426  001ED0  6E18               	movwf	(___fleq@ff2+1)^0,c
  4427  001ED2  0E80               	movlw	128
  4428  001ED4  6E19               	movwf	(___fleq@ff2+2)^0,c
  4429  001ED6  0E3F               	movlw	63
  4430  001ED8  6E1A               	movwf	(___fleq@ff2+3)^0,c
  4431  001EDA  EC6A  F016         	call	___fleq	;wreg free
  4432  001EDE  A0D8               	btfss	status,0,c
  4433  001EE0  EF74  F00F         	goto	u5011
  4434  001EE4  EF76  F00F         	goto	u5010
  4435  001EE8                     u5011:
  4436  001EE8  EFAC  F00F         	goto	l4695
  4437  001EEC                     u5010:
  4438  001EEC                     
  4439                           ;./Seguidor.h: 54:             pos += 1;
  4440  001EEC  C095  F060         	movff	posicao@pos,___fladd@b
  4441  001EF0  C096  F061         	movff	posicao@pos+1,___fladd@b+1
  4442  001EF4  C097  F062         	movff	posicao@pos+2,___fladd@b+2
  4443  001EF8  C098  F063         	movff	posicao@pos+3,___fladd@b+3
  4444  001EFC  0E00               	movlw	0
  4445  001EFE  0100               	movlb	0	; () banked
  4446  001F00  6F64               	movwf	___fladd@a& (0+255),b
  4447  001F02  0E00               	movlw	0
  4448  001F04  6F65               	movwf	(___fladd@a+1)& (0+255),b
  4449  001F06  0E80               	movlw	128
  4450  001F08  6F66               	movwf	(___fladd@a+2)& (0+255),b
  4451  001F0A  0E3F               	movlw	63
  4452  001F0C  6F67               	movwf	(___fladd@a+3)& (0+255),b
  4453  001F0E  ECD3  F001         	call	___fladd	;wreg free
  4454  001F12  C060  F095         	movff	?___fladd,posicao@pos
  4455  001F16  C061  F096         	movff	?___fladd+1,posicao@pos+1
  4456  001F1A  C062  F097         	movff	?___fladd+2,posicao@pos+2
  4457  001F1E  C063  F098         	movff	?___fladd+3,posicao@pos+3
  4458                           
  4459                           ;./Seguidor.h: 55:             total += 1;
  4460  001F22  C099  F060         	movff	posicao@total,___fladd@b
  4461  001F26  C09A  F061         	movff	posicao@total+1,___fladd@b+1
  4462  001F2A  C09B  F062         	movff	posicao@total+2,___fladd@b+2
  4463  001F2E  C09C  F063         	movff	posicao@total+3,___fladd@b+3
  4464  001F32  0E00               	movlw	0
  4465  001F34  0100               	movlb	0	; () banked
  4466  001F36  6F64               	movwf	___fladd@a& (0+255),b
  4467  001F38  0E00               	movlw	0
  4468  001F3A  6F65               	movwf	(___fladd@a+1)& (0+255),b
  4469  001F3C  0E80               	movlw	128
  4470  001F3E  6F66               	movwf	(___fladd@a+2)& (0+255),b
  4471  001F40  0E3F               	movlw	63
  4472  001F42  6F67               	movwf	(___fladd@a+3)& (0+255),b
  4473  001F44  ECD3  F001         	call	___fladd	;wreg free
  4474  001F48  C060  F099         	movff	?___fladd,posicao@total
  4475  001F4C  C061  F09A         	movff	?___fladd+1,posicao@total+1
  4476  001F50  C062  F09B         	movff	?___fladd+2,posicao@total+2
  4477  001F54  C063  F09C         	movff	?___fladd+3,posicao@total+3
  4478  001F58                     l4695:
  4479                           
  4480                           ;./Seguidor.h: 57:     }
  4481  001F58  0100               	movlb	0	; () banked
  4482  001F5A  4B9D               	infsnz	posicao@i& (0+255),f,b
  4483  001F5C  2B9E               	incf	(posicao@i+1)& (0+255),f,b
  4484  001F5E                     
  4485                           ; BSR set to: 0
  4486  001F5E  BF9E               	btfsc	(posicao@i+1)& (0+255),7,b
  4487  001F60  EFBB  F00F         	goto	u5021
  4488  001F64  519E               	movf	(posicao@i+1)& (0+255),w,b
  4489  001F66  E109               	bnz	u5020
  4490  001F68  0E06               	movlw	6
  4491  001F6A  5D9D               	subwf	posicao@i& (0+255),w,b
  4492  001F6C  A0D8               	btfss	status,0,c
  4493  001F6E  EFBB  F00F         	goto	u5021
  4494  001F72  EFBD  F00F         	goto	u5020
  4495  001F76                     u5021:
  4496  001F76  EF4D  F00F         	goto	l4691
  4497  001F7A                     u5020:
  4498  001F7A                     
  4499                           ; BSR set to: 0
  4500                           ;./Seguidor.h: 58:     if (total != 0) {
  4501  001F7A  C099  F013         	movff	posicao@total,___fleq@ff1
  4502  001F7E  C09A  F014         	movff	posicao@total+1,___fleq@ff1+1
  4503  001F82  C09B  F015         	movff	posicao@total+2,___fleq@ff1+2
  4504  001F86  C09C  F016         	movff	posicao@total+3,___fleq@ff1+3
  4505  001F8A  0E00               	movlw	0
  4506  001F8C  6E17               	movwf	___fleq@ff2^0,c
  4507  001F8E  0E00               	movlw	0
  4508  001F90  6E18               	movwf	(___fleq@ff2+1)^0,c
  4509  001F92  0E00               	movlw	0
  4510  001F94  6E19               	movwf	(___fleq@ff2+2)^0,c
  4511  001F96  0E00               	movlw	0
  4512  001F98  6E1A               	movwf	(___fleq@ff2+3)^0,c
  4513  001F9A  EC6A  F016         	call	___fleq	;wreg free
  4514  001F9E  B0D8               	btfsc	status,0,c
  4515  001FA0  EFD4  F00F         	goto	u5031
  4516  001FA4  EFD6  F00F         	goto	u5030
  4517  001FA8                     u5031:
  4518  001FA8  EFFA  F00F         	goto	l319
  4519  001FAC                     u5030:
  4520  001FAC                     
  4521                           ;./Seguidor.h: 59:         local = pos / total;
  4522  001FAC  C095  F074         	movff	posicao@pos,___fldiv@b
  4523  001FB0  C096  F075         	movff	posicao@pos+1,___fldiv@b+1
  4524  001FB4  C097  F076         	movff	posicao@pos+2,___fldiv@b+2
  4525  001FB8  C098  F077         	movff	posicao@pos+3,___fldiv@b+3
  4526  001FBC  C099  F078         	movff	posicao@total,___fldiv@a
  4527  001FC0  C09A  F079         	movff	posicao@total+1,___fldiv@a+1
  4528  001FC4  C09B  F07A         	movff	posicao@total+2,___fldiv@a+2
  4529  001FC8  C09C  F07B         	movff	posicao@total+3,___fldiv@a+3
  4530  001FCC  EC82  F008         	call	___fldiv	;wreg free
  4531  001FD0  C074  F091         	movff	?___fldiv,posicao@local
  4532  001FD4  C075  F092         	movff	?___fldiv+1,posicao@local+1
  4533  001FD8  C076  F093         	movff	?___fldiv+2,posicao@local+2
  4534  001FDC  C077  F094         	movff	?___fldiv+3,posicao@local+3
  4535  001FE0                     
  4536                           ;./Seguidor.h: 60:         return local;
  4537  001FE0  C091  F08D         	movff	posicao@local,?_posicao
  4538  001FE4  C092  F08E         	movff	posicao@local+1,?_posicao+1
  4539  001FE8  C093  F08F         	movff	posicao@local+2,?_posicao+2
  4540  001FEC  C094  F090         	movff	posicao@local+3,?_posicao+3
  4541  001FF0  EF02  F010         	goto	l320
  4542  001FF4                     l319:
  4543                           
  4544                           ;./Seguidor.h: 62:         return posin;
  4545  001FF4  C0EC  F08D         	movff	_posin,?_posicao
  4546  001FF8  C0ED  F08E         	movff	_posin+1,?_posicao+1
  4547  001FFC  C0EE  F08F         	movff	_posin+2,?_posicao+2
  4548  002000  C0EF  F090         	movff	_posin+3,?_posicao+3
  4549  002004                     l320:
  4550  002004  0012               	return		;funcret
  4551  002006                     __end_of_posicao:
  4552                           	opt callstack 0
  4553                           
  4554 ;; *************** function _moverMotor *****************
  4555 ;; Defined at:
  4556 ;;		line 83 in file "./Seguidor.h"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;  PID             4   53[BANK0 ] int 
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;		None
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  1    wreg      void 
  4563 ;; Registers used:
  4564 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4565 ;; Tracked objects:
  4566 ;;		On entry : 0/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4570 ;;      Params:         0       4       0       0
  4571 ;;      Locals:         0       0       0       0
  4572 ;;      Temps:          0       0       0       0
  4573 ;;      Totals:         0       4       0       0
  4574 ;;Total ram usage:        4 bytes
  4575 ;; Hardware stack levels used:    1
  4576 ;; Hardware stack levels required when called:    7
  4577 ;; This function calls:
  4578 ;;		___fldiv
  4579 ;;		___fleq
  4580 ;;		___fltol
  4581 ;;		_lados
  4582 ;; This function is called by:
  4583 ;;		_setPID
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587                           	psect	text18
  4588  002A00                     __ptext18:
  4589                           	opt callstack 0
  4590  002A00                     _moverMotor:
  4591                           	opt callstack 22
  4592  002A00                     
  4593                           ;./Seguidor.h: 83: void moverMotor(double PID);./Seguidor.h: 84: {;./Seguidor.h: 85:    
      +                           if (PID == 0) {
  4594  002A00  C095  F013         	movff	moverMotor@PID,___fleq@ff1
  4595  002A04  C096  F014         	movff	moverMotor@PID+1,___fleq@ff1+1
  4596  002A08  C097  F015         	movff	moverMotor@PID+2,___fleq@ff1+2
  4597  002A0C  C098  F016         	movff	moverMotor@PID+3,___fleq@ff1+3
  4598  002A10  0E00               	movlw	0
  4599  002A12  6E17               	movwf	___fleq@ff2^0,c
  4600  002A14  0E00               	movlw	0
  4601  002A16  6E18               	movwf	(___fleq@ff2+1)^0,c
  4602  002A18  0E00               	movlw	0
  4603  002A1A  6E19               	movwf	(___fleq@ff2+2)^0,c
  4604  002A1C  0E00               	movlw	0
  4605  002A1E  6E1A               	movwf	(___fleq@ff2+3)^0,c
  4606  002A20  EC6A  F016         	call	___fleq	;wreg free
  4607  002A24  A0D8               	btfss	status,0,c
  4608  002A26  EF17  F015         	goto	u5041
  4609  002A2A  EF19  F015         	goto	u5040
  4610  002A2E                     u5041:
  4611  002A2E  EF29  F015         	goto	l4713
  4612  002A32                     u5040:
  4613  002A32                     
  4614                           ;./Seguidor.h: 86:         lados('e', porcVelo);
  4615  002A32  0E00               	movlw	0
  4616  002A34  6E1E               	movwf	(lados@porcVelo+1)^0,c
  4617  002A36  0E03               	movlw	3
  4618  002A38  6E1D               	movwf	lados@porcVelo^0,c
  4619  002A3A  0E65               	movlw	101
  4620  002A3C  EC4E  F017         	call	_lados
  4621                           
  4622                           ;./Seguidor.h: 87:         lados('d', porcVelo);
  4623  002A40  0E00               	movlw	0
  4624  002A42  6E1E               	movwf	(lados@porcVelo+1)^0,c
  4625  002A44  0E03               	movlw	3
  4626  002A46  6E1D               	movwf	lados@porcVelo^0,c
  4627  002A48  0E64               	movlw	100
  4628  002A4A  EC4E  F017         	call	_lados
  4629                           
  4630                           ;./Seguidor.h: 88:     } else {
  4631  002A4E  EF60  F015         	goto	l331
  4632  002A52                     l4713:
  4633                           
  4634                           ;./Seguidor.h: 89:         PID_int = PID / 2;
  4635  002A52  0E00               	movlw	0
  4636  002A54  0100               	movlb	0	; () banked
  4637  002A56  6F78               	movwf	___fldiv@a& (0+255),b
  4638  002A58  0E00               	movlw	0
  4639  002A5A  6F79               	movwf	(___fldiv@a+1)& (0+255),b
  4640  002A5C  0E00               	movlw	0
  4641  002A5E  6F7A               	movwf	(___fldiv@a+2)& (0+255),b
  4642  002A60  0E40               	movlw	64
  4643  002A62  6F7B               	movwf	(___fldiv@a+3)& (0+255),b
  4644  002A64  C095  F074         	movff	moverMotor@PID,___fldiv@b
  4645  002A68  C096  F075         	movff	moverMotor@PID+1,___fldiv@b+1
  4646  002A6C  C097  F076         	movff	moverMotor@PID+2,___fldiv@b+2
  4647  002A70  C098  F077         	movff	moverMotor@PID+3,___fldiv@b+3
  4648  002A74  EC82  F008         	call	___fldiv	;wreg free
  4649  002A78  C074  F08D         	movff	?___fldiv,___fltol@f1
  4650  002A7C  C075  F08E         	movff	?___fldiv+1,___fltol@f1+1
  4651  002A80  C076  F08F         	movff	?___fldiv+2,___fltol@f1+2
  4652  002A84  C077  F090         	movff	?___fldiv+3,___fltol@f1+3
  4653  002A88  ECCB  F011         	call	___fltol	;wreg free
  4654  002A8C  C08D  F0F4         	movff	?___fltol,_PID_int
  4655  002A90  C08E  F0F5         	movff	?___fltol+1,_PID_int+1
  4656  002A94                     
  4657                           ;./Seguidor.h: 90:         lados('e', (porcVelo + PID_int));
  4658  002A94  0E03               	movlw	3
  4659  002A96  0100               	movlb	0	; () banked
  4660  002A98  25F4               	addwf	_PID_int& (0+255),w,b
  4661  002A9A  6E1D               	movwf	lados@porcVelo^0,c
  4662  002A9C  0E00               	movlw	0
  4663  002A9E  21F5               	addwfc	(_PID_int+1)& (0+255),w,b
  4664  002AA0  6E1E               	movwf	(lados@porcVelo+1)^0,c
  4665  002AA2  0E65               	movlw	101
  4666  002AA4  EC4E  F017         	call	_lados
  4667  002AA8                     
  4668                           ;./Seguidor.h: 91:         lados('d', (porcVelo - PID_int));
  4669  002AA8  0100               	movlb	0	; () banked
  4670  002AAA  51F4               	movf	_PID_int& (0+255),w,b
  4671  002AAC  0803               	sublw	3
  4672  002AAE  6E1D               	movwf	lados@porcVelo^0,c
  4673  002AB0  51F5               	movf	(_PID_int+1)& (0+255),w,b
  4674  002AB2  A0D8               	btfss	status,0,c
  4675  002AB4  2AE8               	incf	wreg,f,c
  4676  002AB6  0800               	sublw	0
  4677  002AB8  6E1E               	movwf	(lados@porcVelo+1)^0,c
  4678  002ABA  0E64               	movlw	100
  4679  002ABC  EC4E  F017         	call	_lados
  4680  002AC0                     l331:
  4681  002AC0  0012               	return		;funcret
  4682  002AC2                     __end_of_moverMotor:
  4683                           	opt callstack 0
  4684                           
  4685 ;; *************** function _lados *****************
  4686 ;; Defined at:
  4687 ;;		line 67 in file "./Seguidor.h"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;  lado            1    wreg     unsigned char 
  4690 ;;  porcVelo        2   28[COMRAM] int 
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;  lado            1   30[COMRAM] unsigned char 
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  1    wreg      void 
  4695 ;; Registers used:
  4696 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4697 ;; Tracked objects:
  4698 ;;		On entry : 0/0
  4699 ;;		On exit  : 0/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4702 ;;      Params:         2       0       0       0
  4703 ;;      Locals:         1       0       0       0
  4704 ;;      Temps:          0       0       0       0
  4705 ;;      Totals:         3       0       0       0
  4706 ;;Total ram usage:        3 bytes
  4707 ;; Hardware stack levels used:    1
  4708 ;; Hardware stack levels required when called:    6
  4709 ;; This function calls:
  4710 ;;		_setDutyPWM0
  4711 ;;		_setDutyPWM2
  4712 ;;		_setDutyPWM4
  4713 ;;		_setDutyPWM6
  4714 ;; This function is called by:
  4715 ;;		_moverMotor
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           	psect	text19
  4720  002E9C                     __ptext19:
  4721                           	opt callstack 0
  4722  002E9C                     _lados:
  4723                           	opt callstack 22
  4724                           
  4725                           ;incstack = 0
  4726                           ;lados@lado stored from wreg
  4727  002E9C  6E1F               	movwf	lados@lado^0,c
  4728  002E9E                     
  4729                           ;./Seguidor.h: 68:     PORTBbits.RB6 = 1;
  4730  002E9E  8C81               	bsf	129,6,c	;volatile
  4731                           
  4732                           ;./Seguidor.h: 69:     PORTBbits.RB7 = 1;
  4733  002EA0  8E81               	bsf	129,7,c	;volatile
  4734  002EA2                     
  4735                           ;./Seguidor.h: 72:     if (lado == 'e') {
  4736  002EA2  0E65               	movlw	101
  4737  002EA4  181F               	xorwf	lados@lado^0,w,c
  4738  002EA6  A4D8               	btfss	status,2,c
  4739  002EA8  EF58  F017         	goto	u4361
  4740  002EAC  EF5A  F017         	goto	u4360
  4741  002EB0                     u4361:
  4742  002EB0  EF66  F017         	goto	l4301
  4743  002EB4                     u4360:
  4744  002EB4                     
  4745                           ;./Seguidor.h: 73:         setDutyPWM0(porcVelo);
  4746  002EB4  C01D  F019         	movff	lados@porcVelo,setDutyPWM0@porcVelo
  4747  002EB8  C01E  F01A         	movff	lados@porcVelo+1,setDutyPWM0@porcVelo+1
  4748  002EBC  EC4D  F018         	call	_setDutyPWM0	;wreg free
  4749                           
  4750                           ;./Seguidor.h: 74:         setDutyPWM6(0);
  4751  002EC0  0E00               	movlw	0
  4752  002EC2  6E1A               	movwf	(setDutyPWM6@porcVelo+1)^0,c
  4753  002EC4  0E00               	movlw	0
  4754  002EC6  6E19               	movwf	setDutyPWM6@porcVelo^0,c
  4755  002EC8  EC14  F018         	call	_setDutyPWM6	;wreg free
  4756  002ECC                     l4301:
  4757                           
  4758                           ;./Seguidor.h: 76:     if (lado == 'd') {
  4759  002ECC  0E64               	movlw	100
  4760  002ECE  181F               	xorwf	lados@lado^0,w,c
  4761  002ED0  A4D8               	btfss	status,2,c
  4762  002ED2  EF6D  F017         	goto	u4371
  4763  002ED6  EF6F  F017         	goto	u4370
  4764  002EDA                     u4371:
  4765  002EDA  EF7B  F017         	goto	l326
  4766  002EDE                     u4370:
  4767  002EDE                     
  4768                           ;./Seguidor.h: 77:         setDutyPWM2(porcVelo);
  4769  002EDE  C01D  F019         	movff	lados@porcVelo,setDutyPWM2@porcVelo
  4770  002EE2  C01E  F01A         	movff	lados@porcVelo+1,setDutyPWM2@porcVelo+1
  4771  002EE6  EC3A  F018         	call	_setDutyPWM2	;wreg free
  4772                           
  4773                           ;./Seguidor.h: 78:         setDutyPWM4(0);
  4774  002EEA  0E00               	movlw	0
  4775  002EEC  6E1A               	movwf	(setDutyPWM4@porcVelo+1)^0,c
  4776  002EEE  0E00               	movlw	0
  4777  002EF0  6E19               	movwf	setDutyPWM4@porcVelo^0,c
  4778  002EF2  EC27  F018         	call	_setDutyPWM4	;wreg free
  4779  002EF6                     l326:
  4780  002EF6  0012               	return		;funcret
  4781  002EF8                     __end_of_lados:
  4782                           	opt callstack 0
  4783                           
  4784 ;; *************** function _setDutyPWM6 *****************
  4785 ;; Defined at:
  4786 ;;		line 41 in file "./PWM.h"
  4787 ;; Parameters:    Size  Location     Type
  4788 ;;  porcVelo        2   24[COMRAM] unsigned int 
  4789 ;; Auto vars:     Size  Location     Type
  4790 ;;  velo            2   26[COMRAM] unsigned int 
  4791 ;; Return value:  Size  Location     Type
  4792 ;;                  1    wreg      void 
  4793 ;; Registers used:
  4794 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4795 ;; Tracked objects:
  4796 ;;		On entry : 0/0
  4797 ;;		On exit  : 0/0
  4798 ;;		Unchanged: 0/0
  4799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4800 ;;      Params:         2       0       0       0
  4801 ;;      Locals:         2       0       0       0
  4802 ;;      Temps:          0       0       0       0
  4803 ;;      Totals:         4       0       0       0
  4804 ;;Total ram usage:        4 bytes
  4805 ;; Hardware stack levels used:    1
  4806 ;; Hardware stack levels required when called:    5
  4807 ;; This function calls:
  4808 ;;		___wmul
  4809 ;; This function is called by:
  4810 ;;		_testeMotores
  4811 ;;		_lados
  4812 ;;		_main
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           	psect	text20
  4817  003028                     __ptext20:
  4818                           	opt callstack 0
  4819  003028                     _setDutyPWM6:
  4820                           	opt callstack 24
  4821  003028                     
  4822                           ;./PWM.h: 42:     unsigned int velo = porcVelo*6;
  4823  003028  C019  F013         	movff	setDutyPWM6@porcVelo,___wmul@multiplier
  4824  00302C  C01A  F014         	movff	setDutyPWM6@porcVelo+1,___wmul@multiplier+1
  4825  003030  0E00               	movlw	0
  4826  003032  6E16               	movwf	(___wmul@multiplicand+1)^0,c
  4827  003034  0E06               	movlw	6
  4828  003036  6E15               	movwf	___wmul@multiplicand^0,c
  4829  003038  EC60  F018         	call	___wmul	;wreg free
  4830  00303C  C013  F01B         	movff	?___wmul,setDutyPWM6@velo
  4831  003040  C014  F01C         	movff	?___wmul+1,setDutyPWM6@velo+1
  4832  003044                     
  4833                           ;./PWM.h: 43:     PDC3L = velo & 0b11111111;
  4834  003044  C01B  FF73         	movff	setDutyPWM6@velo,3955	;volatile
  4835  003048                     
  4836                           ;./PWM.h: 44:     PDC3H = (velo >> 8) & 0b11111111;
  4837  003048  501C               	movf	(setDutyPWM6@velo+1)^0,w,c
  4838  00304A  6E72               	movwf	114,c	;volatile
  4839  00304C  0012               	return		;funcret
  4840  00304E                     __end_of_setDutyPWM6:
  4841                           	opt callstack 0
  4842                           
  4843 ;; *************** function _setDutyPWM4 *****************
  4844 ;; Defined at:
  4845 ;;		line 35 in file "./PWM.h"
  4846 ;; Parameters:    Size  Location     Type
  4847 ;;  porcVelo        2   24[COMRAM] unsigned int 
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;  velo            2   26[COMRAM] unsigned int 
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  1    wreg      void 
  4852 ;; Registers used:
  4853 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4859 ;;      Params:         2       0       0       0
  4860 ;;      Locals:         2       0       0       0
  4861 ;;      Temps:          0       0       0       0
  4862 ;;      Totals:         4       0       0       0
  4863 ;;Total ram usage:        4 bytes
  4864 ;; Hardware stack levels used:    1
  4865 ;; Hardware stack levels required when called:    5
  4866 ;; This function calls:
  4867 ;;		___wmul
  4868 ;; This function is called by:
  4869 ;;		_testeMotores
  4870 ;;		_lados
  4871 ;;		_main
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           	psect	text21
  4876  00304E                     __ptext21:
  4877                           	opt callstack 0
  4878  00304E                     _setDutyPWM4:
  4879                           	opt callstack 24
  4880  00304E                     
  4881                           ;./PWM.h: 36:     unsigned int velo = porcVelo*6;
  4882  00304E  C019  F013         	movff	setDutyPWM4@porcVelo,___wmul@multiplier
  4883  003052  C01A  F014         	movff	setDutyPWM4@porcVelo+1,___wmul@multiplier+1
  4884  003056  0E00               	movlw	0
  4885  003058  6E16               	movwf	(___wmul@multiplicand+1)^0,c
  4886  00305A  0E06               	movlw	6
  4887  00305C  6E15               	movwf	___wmul@multiplicand^0,c
  4888  00305E  EC60  F018         	call	___wmul	;wreg free
  4889  003062  C013  F01B         	movff	?___wmul,setDutyPWM4@velo
  4890  003066  C014  F01C         	movff	?___wmul+1,setDutyPWM4@velo+1
  4891  00306A                     
  4892                           ;./PWM.h: 37:     PDC2L = velo & 0b11111111;
  4893  00306A  C01B  FF75         	movff	setDutyPWM4@velo,3957	;volatile
  4894  00306E                     
  4895                           ;./PWM.h: 38:     PDC2H = (velo >> 8) & 0b11111111;
  4896  00306E  501C               	movf	(setDutyPWM4@velo+1)^0,w,c
  4897  003070  6E74               	movwf	116,c	;volatile
  4898  003072  0012               	return		;funcret
  4899  003074                     __end_of_setDutyPWM4:
  4900                           	opt callstack 0
  4901                           
  4902 ;; *************** function _setDutyPWM2 *****************
  4903 ;; Defined at:
  4904 ;;		line 29 in file "./PWM.h"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;  porcVelo        2   24[COMRAM] unsigned int 
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;  velo            2   26[COMRAM] unsigned int 
  4909 ;; Return value:  Size  Location     Type
  4910 ;;                  1    wreg      void 
  4911 ;; Registers used:
  4912 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 0/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4918 ;;      Params:         2       0       0       0
  4919 ;;      Locals:         2       0       0       0
  4920 ;;      Temps:          0       0       0       0
  4921 ;;      Totals:         4       0       0       0
  4922 ;;Total ram usage:        4 bytes
  4923 ;; Hardware stack levels used:    1
  4924 ;; Hardware stack levels required when called:    5
  4925 ;; This function calls:
  4926 ;;		___wmul
  4927 ;; This function is called by:
  4928 ;;		_testeMotores
  4929 ;;		_lados
  4930 ;;		_main
  4931 ;; This function uses a non-reentrant model
  4932 ;;
  4933                           
  4934                           	psect	text22
  4935  003074                     __ptext22:
  4936                           	opt callstack 0
  4937  003074                     _setDutyPWM2:
  4938                           	opt callstack 24
  4939  003074                     
  4940                           ;./PWM.h: 30:     unsigned int velo = porcVelo*6;
  4941  003074  C019  F013         	movff	setDutyPWM2@porcVelo,___wmul@multiplier
  4942  003078  C01A  F014         	movff	setDutyPWM2@porcVelo+1,___wmul@multiplier+1
  4943  00307C  0E00               	movlw	0
  4944  00307E  6E16               	movwf	(___wmul@multiplicand+1)^0,c
  4945  003080  0E06               	movlw	6
  4946  003082  6E15               	movwf	___wmul@multiplicand^0,c
  4947  003084  EC60  F018         	call	___wmul	;wreg free
  4948  003088  C013  F01B         	movff	?___wmul,setDutyPWM2@velo
  4949  00308C  C014  F01C         	movff	?___wmul+1,setDutyPWM2@velo+1
  4950  003090                     
  4951                           ;./PWM.h: 31:     PDC1L = velo & 0b11111111;
  4952  003090  C01B  FF77         	movff	setDutyPWM2@velo,3959	;volatile
  4953  003094                     
  4954                           ;./PWM.h: 32:     PDC1H = (velo >> 8) & 0b11111111;
  4955  003094  501C               	movf	(setDutyPWM2@velo+1)^0,w,c
  4956  003096  6E76               	movwf	118,c	;volatile
  4957  003098  0012               	return		;funcret
  4958  00309A                     __end_of_setDutyPWM2:
  4959                           	opt callstack 0
  4960                           
  4961 ;; *************** function _setDutyPWM0 *****************
  4962 ;; Defined at:
  4963 ;;		line 23 in file "./PWM.h"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;  porcVelo        2   24[COMRAM] unsigned int 
  4966 ;; Auto vars:     Size  Location     Type
  4967 ;;  velo            2   26[COMRAM] unsigned int 
  4968 ;; Return value:  Size  Location     Type
  4969 ;;                  1    wreg      void 
  4970 ;; Registers used:
  4971 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4972 ;; Tracked objects:
  4973 ;;		On entry : 0/0
  4974 ;;		On exit  : 0/0
  4975 ;;		Unchanged: 0/0
  4976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4977 ;;      Params:         2       0       0       0
  4978 ;;      Locals:         2       0       0       0
  4979 ;;      Temps:          0       0       0       0
  4980 ;;      Totals:         4       0       0       0
  4981 ;;Total ram usage:        4 bytes
  4982 ;; Hardware stack levels used:    1
  4983 ;; Hardware stack levels required when called:    5
  4984 ;; This function calls:
  4985 ;;		___wmul
  4986 ;; This function is called by:
  4987 ;;		_testeMotores
  4988 ;;		_lados
  4989 ;;		_main
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           	psect	text23
  4994  00309A                     __ptext23:
  4995                           	opt callstack 0
  4996  00309A                     _setDutyPWM0:
  4997                           	opt callstack 24
  4998  00309A                     
  4999                           ;./PWM.h: 24:     unsigned int velo = porcVelo*6;
  5000  00309A  C019  F013         	movff	setDutyPWM0@porcVelo,___wmul@multiplier
  5001  00309E  C01A  F014         	movff	setDutyPWM0@porcVelo+1,___wmul@multiplier+1
  5002  0030A2  0E00               	movlw	0
  5003  0030A4  6E16               	movwf	(___wmul@multiplicand+1)^0,c
  5004  0030A6  0E06               	movlw	6
  5005  0030A8  6E15               	movwf	___wmul@multiplicand^0,c
  5006  0030AA  EC60  F018         	call	___wmul	;wreg free
  5007  0030AE  C013  F01B         	movff	?___wmul,setDutyPWM0@velo
  5008  0030B2  C014  F01C         	movff	?___wmul+1,setDutyPWM0@velo+1
  5009  0030B6                     
  5010                           ;./PWM.h: 25:     PDC0L = velo & 0b11111111;
  5011  0030B6  C01B  FF79         	movff	setDutyPWM0@velo,3961	;volatile
  5012  0030BA                     
  5013                           ;./PWM.h: 26:     PDC0H = (velo >> 8) & 0b11111111;
  5014  0030BA  501C               	movf	(setDutyPWM0@velo+1)^0,w,c
  5015  0030BC  6E78               	movwf	120,c	;volatile
  5016  0030BE  0012               	return		;funcret
  5017  0030C0                     __end_of_setDutyPWM0:
  5018                           	opt callstack 0
  5019                           
  5020 ;; *************** function ___wmul *****************
  5021 ;; Defined at:
  5022 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  5023 ;; Parameters:    Size  Location     Type
  5024 ;;  multiplier      2   18[COMRAM] unsigned int 
  5025 ;;  multiplicand    2   20[COMRAM] unsigned int 
  5026 ;; Auto vars:     Size  Location     Type
  5027 ;;  product         2   22[COMRAM] unsigned int 
  5028 ;; Return value:  Size  Location     Type
  5029 ;;                  2   18[COMRAM] unsigned int 
  5030 ;; Registers used:
  5031 ;;		wreg, status,2, status,0, prodl, prodh
  5032 ;; Tracked objects:
  5033 ;;		On entry : 0/0
  5034 ;;		On exit  : 0/0
  5035 ;;		Unchanged: 0/0
  5036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5037 ;;      Params:         4       0       0       0
  5038 ;;      Locals:         2       0       0       0
  5039 ;;      Temps:          0       0       0       0
  5040 ;;      Totals:         6       0       0       0
  5041 ;;Total ram usage:        6 bytes
  5042 ;; Hardware stack levels used:    1
  5043 ;; Hardware stack levels required when called:    4
  5044 ;; This function calls:
  5045 ;;		Nothing
  5046 ;; This function is called by:
  5047 ;;		_setDutyPWM0
  5048 ;;		_setDutyPWM2
  5049 ;;		_setDutyPWM4
  5050 ;;		_setDutyPWM6
  5051 ;; This function uses a non-reentrant model
  5052 ;;
  5053                           
  5054                           	psect	text24
  5055  0030C0                     __ptext24:
  5056                           	opt callstack 0
  5057  0030C0                     ___wmul:
  5058                           	opt callstack 24
  5059  0030C0  5013               	movf	___wmul@multiplier^0,w,c
  5060  0030C2  0215               	mulwf	___wmul@multiplicand^0,c
  5061  0030C4  CFF3 F017          	movff	prodl,___wmul@product
  5062  0030C8  CFF4 F018          	movff	prodh,___wmul@product+1
  5063  0030CC  5013               	movf	___wmul@multiplier^0,w,c
  5064  0030CE  0216               	mulwf	(___wmul@multiplicand+1)^0,c
  5065  0030D0  50F3               	movf	243,w,c
  5066  0030D2  2618               	addwf	(___wmul@product+1)^0,f,c
  5067  0030D4  5014               	movf	(___wmul@multiplier+1)^0,w,c
  5068  0030D6  0215               	mulwf	___wmul@multiplicand^0,c
  5069  0030D8  50F3               	movf	243,w,c
  5070  0030DA  2618               	addwf	(___wmul@product+1)^0,f,c
  5071  0030DC  C017  F013         	movff	___wmul@product,?___wmul
  5072  0030E0  C018  F014         	movff	___wmul@product+1,?___wmul+1
  5073  0030E4  0012               	return		;funcret
  5074  0030E6                     __end_of___wmul:
  5075                           	opt callstack 0
  5076                           
  5077 ;; *************** function ___fleq *****************
  5078 ;; Defined at:
  5079 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  5080 ;; Parameters:    Size  Location     Type
  5081 ;;  ff1             4   18[COMRAM] unsigned int 
  5082 ;;  ff2             4   22[COMRAM] unsigned int 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;		None
  5085 ;; Return value:  Size  Location     Type
  5086 ;;		None               void
  5087 ;; Registers used:
  5088 ;;		wreg, status,2, status,0
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5094 ;;      Params:         8       0       0       0
  5095 ;;      Locals:         0       0       0       0
  5096 ;;      Temps:          4       0       0       0
  5097 ;;      Totals:        12       0       0       0
  5098 ;;Total ram usage:       12 bytes
  5099 ;; Hardware stack levels used:    1
  5100 ;; Hardware stack levels required when called:    4
  5101 ;; This function calls:
  5102 ;;		Nothing
  5103 ;; This function is called by:
  5104 ;;		_posicao
  5105 ;;		_moverMotor
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109                           	psect	text25
  5110  002CD4                     __ptext25:
  5111                           	opt callstack 0
  5112  002CD4                     ___fleq:
  5113                           	opt callstack 24
  5114  002CD4  0E00               	movlw	0
  5115  002CD6  1413               	andwf	___fleq@ff1^0,w,c
  5116  002CD8  6E1B               	movwf	??___fleq^0,c
  5117  002CDA  0E00               	movlw	0
  5118  002CDC  1414               	andwf	(___fleq@ff1+1)^0,w,c
  5119  002CDE  6E1C               	movwf	(??___fleq+1)^0,c
  5120  002CE0  0E80               	movlw	128
  5121  002CE2  1415               	andwf	(___fleq@ff1+2)^0,w,c
  5122  002CE4  6E1D               	movwf	(??___fleq+2)^0,c
  5123  002CE6  0E7F               	movlw	127
  5124  002CE8  1416               	andwf	(___fleq@ff1+3)^0,w,c
  5125  002CEA  6E1E               	movwf	(??___fleq+3)^0,c
  5126  002CEC  501B               	movf	??___fleq^0,w,c
  5127  002CEE  101C               	iorwf	(??___fleq+1)^0,w,c
  5128  002CF0  101D               	iorwf	(??___fleq+2)^0,w,c
  5129  002CF2  101E               	iorwf	(??___fleq+3)^0,w,c
  5130  002CF4  A4D8               	btfss	status,2,c
  5131  002CF6  EF7F  F016         	goto	u3271
  5132  002CFA  EF81  F016         	goto	u3270
  5133  002CFE                     u3271:
  5134  002CFE  EF89  F016         	goto	l3291
  5135  002D02                     u3270:
  5136  002D02  0E00               	movlw	0
  5137  002D04  6E13               	movwf	___fleq@ff1^0,c
  5138  002D06  0E00               	movlw	0
  5139  002D08  6E14               	movwf	(___fleq@ff1+1)^0,c
  5140  002D0A  0E00               	movlw	0
  5141  002D0C  6E15               	movwf	(___fleq@ff1+2)^0,c
  5142  002D0E  0E00               	movlw	0
  5143  002D10  6E16               	movwf	(___fleq@ff1+3)^0,c
  5144  002D12                     l3291:
  5145  002D12  0E00               	movlw	0
  5146  002D14  1417               	andwf	___fleq@ff2^0,w,c
  5147  002D16  6E1B               	movwf	??___fleq^0,c
  5148  002D18  0E00               	movlw	0
  5149  002D1A  1418               	andwf	(___fleq@ff2+1)^0,w,c
  5150  002D1C  6E1C               	movwf	(??___fleq+1)^0,c
  5151  002D1E  0E80               	movlw	128
  5152  002D20  1419               	andwf	(___fleq@ff2+2)^0,w,c
  5153  002D22  6E1D               	movwf	(??___fleq+2)^0,c
  5154  002D24  0E7F               	movlw	127
  5155  002D26  141A               	andwf	(___fleq@ff2+3)^0,w,c
  5156  002D28  6E1E               	movwf	(??___fleq+3)^0,c
  5157  002D2A  501B               	movf	??___fleq^0,w,c
  5158  002D2C  101C               	iorwf	(??___fleq+1)^0,w,c
  5159  002D2E  101D               	iorwf	(??___fleq+2)^0,w,c
  5160  002D30  101E               	iorwf	(??___fleq+3)^0,w,c
  5161  002D32  A4D8               	btfss	status,2,c
  5162  002D34  EF9E  F016         	goto	u3281
  5163  002D38  EFA0  F016         	goto	u3280
  5164  002D3C                     u3281:
  5165  002D3C  EFA8  F016         	goto	l3295
  5166  002D40                     u3280:
  5167  002D40  0E00               	movlw	0
  5168  002D42  6E17               	movwf	___fleq@ff2^0,c
  5169  002D44  0E00               	movlw	0
  5170  002D46  6E18               	movwf	(___fleq@ff2+1)^0,c
  5171  002D48  0E00               	movlw	0
  5172  002D4A  6E19               	movwf	(___fleq@ff2+2)^0,c
  5173  002D4C  0E00               	movlw	0
  5174  002D4E  6E1A               	movwf	(___fleq@ff2+3)^0,c
  5175  002D50                     l3295:
  5176  002D50  5017               	movf	___fleq@ff2^0,w,c
  5177  002D52  1813               	xorwf	___fleq@ff1^0,w,c
  5178  002D54  E10F               	bnz	u3290
  5179  002D56  5018               	movf	(___fleq@ff2+1)^0,w,c
  5180  002D58  1814               	xorwf	(___fleq@ff1+1)^0,w,c
  5181  002D5A  E10C               	bnz	u3290
  5182  002D5C  5019               	movf	(___fleq@ff2+2)^0,w,c
  5183  002D5E  1815               	xorwf	(___fleq@ff1+2)^0,w,c
  5184  002D60  E109               	bnz	u3290
  5185  002D62  501A               	movf	(___fleq@ff2+3)^0,w,c
  5186  002D64  1816               	xorwf	(___fleq@ff1+3)^0,w,c
  5187  002D66  B4D8               	btfsc	status,2,c
  5188  002D68  EFB8  F016         	goto	u3291
  5189  002D6C  EFBA  F016         	goto	u3290
  5190  002D70                     u3291:
  5191  002D70  EFBD  F016         	goto	l3299
  5192  002D74                     u3290:
  5193  002D74  90D8               	bcf	status,0,c
  5194  002D76  EFBE  F016         	goto	l631
  5195  002D7A                     l3299:
  5196  002D7A  80D8               	bsf	status,0,c
  5197  002D7C                     l631:
  5198  002D7C  0012               	return		;funcret
  5199  002D7E                     __end_of___fleq:
  5200                           	opt callstack 0
  5201                           
  5202 ;; *************** function ___fldiv *****************
  5203 ;; Defined at:
  5204 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  5205 ;; Parameters:    Size  Location     Type
  5206 ;;  b               4   20[BANK0 ] unsigned int 
  5207 ;;  a               4   24[BANK0 ] unsigned int 
  5208 ;; Auto vars:     Size  Location     Type
  5209 ;;  grs             4   39[BANK0 ] unsigned long 
  5210 ;;  rem             4   32[BANK0 ] unsigned long 
  5211 ;;  new_exp         2   37[BANK0 ] short 
  5212 ;;  aexp            1   44[BANK0 ] unsigned char 
  5213 ;;  bexp            1   43[BANK0 ] unsigned char 
  5214 ;;  sign            1   36[BANK0 ] unsigned char 
  5215 ;; Return value:  Size  Location     Type
  5216 ;;                  4   20[BANK0 ] unsigned char 
  5217 ;; Registers used:
  5218 ;;		wreg, status,2, status,0
  5219 ;; Tracked objects:
  5220 ;;		On entry : 0/0
  5221 ;;		On exit  : 0/0
  5222 ;;		Unchanged: 0/0
  5223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5224 ;;      Params:         0       8       0       0
  5225 ;;      Locals:         0      13       0       0
  5226 ;;      Temps:          0       4       0       0
  5227 ;;      Totals:         0      25       0       0
  5228 ;;Total ram usage:       25 bytes
  5229 ;; Hardware stack levels used:    1
  5230 ;; Hardware stack levels required when called:    4
  5231 ;; This function calls:
  5232 ;;		Nothing
  5233 ;; This function is called by:
  5234 ;;		_posicao
  5235 ;;		_moverMotor
  5236 ;;		_setPID
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           
  5240                           	psect	text26
  5241  001104                     __ptext26:
  5242                           	opt callstack 0
  5243  001104                     ___fldiv:
  5244                           	opt callstack 24
  5245  001104  0100               	movlb	0	; () banked
  5246  001106  5177               	movf	(___fldiv@b+3)& (0+255),w,b
  5247  001108  0B80               	andlw	128
  5248  00110A  6F84               	movwf	___fldiv@sign& (0+255),b
  5249  00110C  5177               	movf	(___fldiv@b+3)& (0+255),w,b
  5250  00110E  2577               	addwf	(___fldiv@b+3)& (0+255),w,b
  5251  001110  6F8B               	movwf	___fldiv@bexp& (0+255),b
  5252  001112                     
  5253                           ; BSR set to: 0
  5254  001112  AF76               	btfss	(___fldiv@b+2)& (0+255),7,b
  5255  001114  EF8E  F008         	goto	u2921
  5256  001118  EF90  F008         	goto	u2920
  5257  00111C                     u2921:
  5258  00111C  EF91  F008         	goto	l3075
  5259  001120                     u2920:
  5260  001120                     
  5261                           ; BSR set to: 0
  5262  001120  818B               	bsf	___fldiv@bexp& (0+255),0,b
  5263  001122                     l3075:
  5264                           
  5265                           ; BSR set to: 0
  5266  001122  518B               	movf	___fldiv@bexp& (0+255),w,b
  5267  001124  B4D8               	btfsc	status,2,c
  5268  001126  EF97  F008         	goto	u2931
  5269  00112A  EF99  F008         	goto	u2930
  5270  00112E                     u2931:
  5271  00112E  EFAE  F008         	goto	l3085
  5272  001132                     u2930:
  5273  001132                     
  5274                           ; BSR set to: 0
  5275  001132  298B               	incf	___fldiv@bexp& (0+255),w,b
  5276  001134  A4D8               	btfss	status,2,c
  5277  001136  EF9F  F008         	goto	u2941
  5278  00113A  EFA1  F008         	goto	u2940
  5279  00113E                     u2941:
  5280  00113E  EFA9  F008         	goto	l3081
  5281  001142                     u2940:
  5282  001142                     
  5283                           ; BSR set to: 0
  5284  001142  0E00               	movlw	0
  5285  001144  6F74               	movwf	___fldiv@b& (0+255),b
  5286  001146  0E00               	movlw	0
  5287  001148  6F75               	movwf	(___fldiv@b+1)& (0+255),b
  5288  00114A  0E00               	movlw	0
  5289  00114C  6F76               	movwf	(___fldiv@b+2)& (0+255),b
  5290  00114E  0E00               	movlw	0
  5291  001150  6F77               	movwf	(___fldiv@b+3)& (0+255),b
  5292  001152                     l3081:
  5293                           
  5294                           ; BSR set to: 0
  5295  001152  8F76               	bsf	(___fldiv@b+2)& (0+255),7,b
  5296  001154                     
  5297                           ; BSR set to: 0
  5298  001154  0E00               	movlw	0
  5299  001156  6F77               	movwf	(___fldiv@b+3)& (0+255),b
  5300  001158  EFB6  F008         	goto	l3087
  5301  00115C                     l3085:
  5302                           
  5303                           ; BSR set to: 0
  5304  00115C  0E00               	movlw	0
  5305  00115E  6F74               	movwf	___fldiv@b& (0+255),b
  5306  001160  0E00               	movlw	0
  5307  001162  6F75               	movwf	(___fldiv@b+1)& (0+255),b
  5308  001164  0E00               	movlw	0
  5309  001166  6F76               	movwf	(___fldiv@b+2)& (0+255),b
  5310  001168  0E00               	movlw	0
  5311  00116A  6F77               	movwf	(___fldiv@b+3)& (0+255),b
  5312  00116C                     l3087:
  5313                           
  5314                           ; BSR set to: 0
  5315  00116C  517B               	movf	(___fldiv@a+3)& (0+255),w,b
  5316  00116E  0B80               	andlw	128
  5317  001170  1B84               	xorwf	___fldiv@sign& (0+255),f,b
  5318  001172                     
  5319                           ; BSR set to: 0
  5320  001172  517B               	movf	(___fldiv@a+3)& (0+255),w,b
  5321  001174  257B               	addwf	(___fldiv@a+3)& (0+255),w,b
  5322  001176  6F8C               	movwf	___fldiv@aexp& (0+255),b
  5323  001178                     
  5324                           ; BSR set to: 0
  5325  001178  AF7A               	btfss	(___fldiv@a+2)& (0+255),7,b
  5326  00117A  EFC1  F008         	goto	u2951
  5327  00117E  EFC3  F008         	goto	u2950
  5328  001182                     u2951:
  5329  001182  EFC4  F008         	goto	l3095
  5330  001186                     u2950:
  5331  001186                     
  5332                           ; BSR set to: 0
  5333  001186  818C               	bsf	___fldiv@aexp& (0+255),0,b
  5334  001188                     l3095:
  5335                           
  5336                           ; BSR set to: 0
  5337  001188  518C               	movf	___fldiv@aexp& (0+255),w,b
  5338  00118A  B4D8               	btfsc	status,2,c
  5339  00118C  EFCA  F008         	goto	u2961
  5340  001190  EFCC  F008         	goto	u2960
  5341  001194                     u2961:
  5342  001194  EFE1  F008         	goto	l3105
  5343  001198                     u2960:
  5344  001198                     
  5345                           ; BSR set to: 0
  5346  001198  298C               	incf	___fldiv@aexp& (0+255),w,b
  5347  00119A  A4D8               	btfss	status,2,c
  5348  00119C  EFD2  F008         	goto	u2971
  5349  0011A0  EFD4  F008         	goto	u2970
  5350  0011A4                     u2971:
  5351  0011A4  EFDC  F008         	goto	l3101
  5352  0011A8                     u2970:
  5353  0011A8                     
  5354                           ; BSR set to: 0
  5355  0011A8  0E00               	movlw	0
  5356  0011AA  6F78               	movwf	___fldiv@a& (0+255),b
  5357  0011AC  0E00               	movlw	0
  5358  0011AE  6F79               	movwf	(___fldiv@a+1)& (0+255),b
  5359  0011B0  0E00               	movlw	0
  5360  0011B2  6F7A               	movwf	(___fldiv@a+2)& (0+255),b
  5361  0011B4  0E00               	movlw	0
  5362  0011B6  6F7B               	movwf	(___fldiv@a+3)& (0+255),b
  5363  0011B8                     l3101:
  5364                           
  5365                           ; BSR set to: 0
  5366  0011B8  8F7A               	bsf	(___fldiv@a+2)& (0+255),7,b
  5367  0011BA                     
  5368                           ; BSR set to: 0
  5369  0011BA  0E00               	movlw	0
  5370  0011BC  6F7B               	movwf	(___fldiv@a+3)& (0+255),b
  5371  0011BE  EFE9  F008         	goto	l3107
  5372  0011C2                     l3105:
  5373                           
  5374                           ; BSR set to: 0
  5375  0011C2  0E00               	movlw	0
  5376  0011C4  6F78               	movwf	___fldiv@a& (0+255),b
  5377  0011C6  0E00               	movlw	0
  5378  0011C8  6F79               	movwf	(___fldiv@a+1)& (0+255),b
  5379  0011CA  0E00               	movlw	0
  5380  0011CC  6F7A               	movwf	(___fldiv@a+2)& (0+255),b
  5381  0011CE  0E00               	movlw	0
  5382  0011D0  6F7B               	movwf	(___fldiv@a+3)& (0+255),b
  5383  0011D2                     l3107:
  5384                           
  5385                           ; BSR set to: 0
  5386  0011D2  5178               	movf	___fldiv@a& (0+255),w,b
  5387  0011D4  1179               	iorwf	(___fldiv@a+1)& (0+255),w,b
  5388  0011D6  117A               	iorwf	(___fldiv@a+2)& (0+255),w,b
  5389  0011D8  117B               	iorwf	(___fldiv@a+3)& (0+255),w,b
  5390  0011DA  A4D8               	btfss	status,2,c
  5391  0011DC  EFF2  F008         	goto	u2981
  5392  0011E0  EFF4  F008         	goto	u2980
  5393  0011E4                     u2981:
  5394  0011E4  EF0C  F009         	goto	l3119
  5395  0011E8                     u2980:
  5396  0011E8                     
  5397                           ; BSR set to: 0
  5398  0011E8  0E00               	movlw	0
  5399  0011EA  6F74               	movwf	___fldiv@b& (0+255),b
  5400  0011EC  0E00               	movlw	0
  5401  0011EE  6F75               	movwf	(___fldiv@b+1)& (0+255),b
  5402  0011F0  0E00               	movlw	0
  5403  0011F2  6F76               	movwf	(___fldiv@b+2)& (0+255),b
  5404  0011F4  0E00               	movlw	0
  5405  0011F6  6F77               	movwf	(___fldiv@b+3)& (0+255),b
  5406  0011F8                     
  5407                           ; BSR set to: 0
  5408  0011F8  0E80               	movlw	128
  5409  0011FA  1376               	iorwf	(___fldiv@b+2)& (0+255),f,b
  5410  0011FC  0E7F               	movlw	127
  5411  0011FE  1377               	iorwf	(___fldiv@b+3)& (0+255),f,b
  5412  001200                     l3113:
  5413                           
  5414                           ; BSR set to: 0
  5415  001200  5184               	movf	___fldiv@sign& (0+255),w,b
  5416  001202  1377               	iorwf	(___fldiv@b+3)& (0+255),f,b
  5417  001204                     
  5418                           ; BSR set to: 0
  5419  001204  C074  F074         	movff	___fldiv@b,?___fldiv
  5420  001208  C075  F075         	movff	___fldiv@b+1,?___fldiv+1
  5421  00120C  C076  F076         	movff	___fldiv@b+2,?___fldiv+2
  5422  001210  C077  F077         	movff	___fldiv@b+3,?___fldiv+3
  5423  001214  EF4F  F00A         	goto	l954
  5424  001218                     l3119:
  5425                           
  5426                           ; BSR set to: 0
  5427  001218  518B               	movf	___fldiv@bexp& (0+255),w,b
  5428  00121A  A4D8               	btfss	status,2,c
  5429  00121C  EF12  F009         	goto	u2991
  5430  001220  EF14  F009         	goto	u2990
  5431  001224                     u2991:
  5432  001224  EF1E  F009         	goto	l3127
  5433  001228                     u2990:
  5434  001228                     
  5435                           ; BSR set to: 0
  5436  001228  0E00               	movlw	0
  5437  00122A  6F74               	movwf	?___fldiv& (0+255),b
  5438  00122C  0E00               	movlw	0
  5439  00122E  6F75               	movwf	(?___fldiv+1)& (0+255),b
  5440  001230  0E00               	movlw	0
  5441  001232  6F76               	movwf	(?___fldiv+2)& (0+255),b
  5442  001234  0E00               	movlw	0
  5443  001236  6F77               	movwf	(?___fldiv+3)& (0+255),b
  5444  001238  EF4F  F00A         	goto	l954
  5445  00123C                     l3127:
  5446                           
  5447                           ; BSR set to: 0
  5448  00123C  518C               	movf	___fldiv@aexp& (0+255),w,b
  5449  00123E  C08B  F07C         	movff	___fldiv@bexp,??___fldiv
  5450  001242  6B7D               	clrf	(??___fldiv+1)& (0+255),b
  5451  001244  5F7C               	subwf	??___fldiv& (0+255),f,b
  5452  001246  0E00               	movlw	0
  5453  001248  5B7D               	subwfb	(??___fldiv+1)& (0+255),f,b
  5454  00124A  0E7F               	movlw	127
  5455  00124C  257C               	addwf	??___fldiv& (0+255),w,b
  5456  00124E  6F85               	movwf	___fldiv@new_exp& (0+255),b
  5457  001250  0E00               	movlw	0
  5458  001252  217D               	addwfc	(??___fldiv+1)& (0+255),w,b
  5459  001254  6F86               	movwf	(___fldiv@new_exp+1)& (0+255),b
  5460  001256                     
  5461                           ; BSR set to: 0
  5462  001256  C074  F080         	movff	___fldiv@b,___fldiv@rem
  5463  00125A  C075  F081         	movff	___fldiv@b+1,___fldiv@rem+1
  5464  00125E  C076  F082         	movff	___fldiv@b+2,___fldiv@rem+2
  5465  001262  C077  F083         	movff	___fldiv@b+3,___fldiv@rem+3
  5466  001266                     
  5467                           ; BSR set to: 0
  5468  001266  0E00               	movlw	0
  5469  001268  6F74               	movwf	___fldiv@b& (0+255),b
  5470  00126A  0E00               	movlw	0
  5471  00126C  6F75               	movwf	(___fldiv@b+1)& (0+255),b
  5472  00126E  0E00               	movlw	0
  5473  001270  6F76               	movwf	(___fldiv@b+2)& (0+255),b
  5474  001272  0E00               	movlw	0
  5475  001274  6F77               	movwf	(___fldiv@b+3)& (0+255),b
  5476  001276                     
  5477                           ; BSR set to: 0
  5478  001276  0E00               	movlw	0
  5479  001278  6F87               	movwf	___fldiv@grs& (0+255),b
  5480  00127A  0E00               	movlw	0
  5481  00127C  6F88               	movwf	(___fldiv@grs+1)& (0+255),b
  5482  00127E  0E00               	movlw	0
  5483  001280  6F89               	movwf	(___fldiv@grs+2)& (0+255),b
  5484  001282  0E00               	movlw	0
  5485  001284  6F8A               	movwf	(___fldiv@grs+3)& (0+255),b
  5486  001286                     
  5487                           ; BSR set to: 0
  5488  001286  0E00               	movlw	0
  5489  001288  6F8C               	movwf	___fldiv@aexp& (0+255),b
  5490  00128A  EF7F  F009         	goto	l956
  5491  00128E                     l3137:
  5492                           
  5493                           ; BSR set to: 0
  5494  00128E  518C               	movf	___fldiv@aexp& (0+255),w,b
  5495  001290  B4D8               	btfsc	status,2,c
  5496  001292  EF4D  F009         	goto	u3001
  5497  001296  EF4F  F009         	goto	u3000
  5498  00129A                     u3001:
  5499  00129A  EF66  F009         	goto	l3145
  5500  00129E                     u3000:
  5501  00129E                     
  5502                           ; BSR set to: 0
  5503  00129E  90D8               	bcf	status,0,c
  5504  0012A0  3780               	rlcf	___fldiv@rem& (0+255),f,b
  5505  0012A2  3781               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  5506  0012A4  3782               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  5507  0012A6  3783               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  5508  0012A8  90D8               	bcf	status,0,c
  5509  0012AA  3774               	rlcf	___fldiv@b& (0+255),f,b
  5510  0012AC  3775               	rlcf	(___fldiv@b+1)& (0+255),f,b
  5511  0012AE  3776               	rlcf	(___fldiv@b+2)& (0+255),f,b
  5512  0012B0  3777               	rlcf	(___fldiv@b+3)& (0+255),f,b
  5513  0012B2                     
  5514                           ; BSR set to: 0
  5515  0012B2  AF8A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  5516  0012B4  EF5E  F009         	goto	u3011
  5517  0012B8  EF60  F009         	goto	u3010
  5518  0012BC                     u3011:
  5519  0012BC  EF61  F009         	goto	l959
  5520  0012C0                     u3010:
  5521  0012C0                     
  5522                           ; BSR set to: 0
  5523  0012C0  8174               	bsf	___fldiv@b& (0+255),0,b
  5524  0012C2                     l959:
  5525                           
  5526                           ; BSR set to: 0
  5527  0012C2  90D8               	bcf	status,0,c
  5528  0012C4  3787               	rlcf	___fldiv@grs& (0+255),f,b
  5529  0012C6  3788               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  5530  0012C8  3789               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  5531  0012CA  378A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  5532  0012CC                     l3145:
  5533                           
  5534                           ; BSR set to: 0
  5535  0012CC  5178               	movf	___fldiv@a& (0+255),w,b
  5536  0012CE  5D80               	subwf	___fldiv@rem& (0+255),w,b
  5537  0012D0  5179               	movf	(___fldiv@a+1)& (0+255),w,b
  5538  0012D2  5981               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  5539  0012D4  517A               	movf	(___fldiv@a+2)& (0+255),w,b
  5540  0012D6  5982               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  5541  0012D8  517B               	movf	(___fldiv@a+3)& (0+255),w,b
  5542  0012DA  5983               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  5543  0012DC  A0D8               	btfss	status,0,c
  5544  0012DE  EF73  F009         	goto	u3021
  5545  0012E2  EF75  F009         	goto	u3020
  5546  0012E6                     u3021:
  5547  0012E6  EF7E  F009         	goto	l3151
  5548  0012EA                     u3020:
  5549  0012EA                     
  5550                           ; BSR set to: 0
  5551  0012EA  8D8A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  5552  0012EC                     
  5553                           ; BSR set to: 0
  5554  0012EC  5178               	movf	___fldiv@a& (0+255),w,b
  5555  0012EE  5F80               	subwf	___fldiv@rem& (0+255),f,b
  5556  0012F0  5179               	movf	(___fldiv@a+1)& (0+255),w,b
  5557  0012F2  5B81               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  5558  0012F4  517A               	movf	(___fldiv@a+2)& (0+255),w,b
  5559  0012F6  5B82               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  5560  0012F8  517B               	movf	(___fldiv@a+3)& (0+255),w,b
  5561  0012FA  5B83               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  5562  0012FC                     l3151:
  5563                           
  5564                           ; BSR set to: 0
  5565  0012FC  2B8C               	incf	___fldiv@aexp& (0+255),f,b
  5566  0012FE                     l956:
  5567                           
  5568                           ; BSR set to: 0
  5569  0012FE  0E19               	movlw	25
  5570  001300  658C               	cpfsgt	___fldiv@aexp& (0+255),b
  5571  001302  EF85  F009         	goto	u3031
  5572  001306  EF87  F009         	goto	u3030
  5573  00130A                     u3031:
  5574  00130A  EF47  F009         	goto	l3137
  5575  00130E                     u3030:
  5576  00130E                     
  5577                           ; BSR set to: 0
  5578  00130E  5180               	movf	___fldiv@rem& (0+255),w,b
  5579  001310  1181               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  5580  001312  1182               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  5581  001314  1183               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  5582  001316  B4D8               	btfsc	status,2,c
  5583  001318  EF90  F009         	goto	u3041
  5584  00131C  EF92  F009         	goto	u3040
  5585  001320                     u3041:
  5586  001320  EFAA  F009         	goto	l3163
  5587  001324                     u3040:
  5588  001324                     
  5589                           ; BSR set to: 0
  5590  001324  8187               	bsf	___fldiv@grs& (0+255),0,b
  5591  001326  EFAA  F009         	goto	l3163
  5592  00132A                     l3157:
  5593                           
  5594                           ; BSR set to: 0
  5595  00132A  90D8               	bcf	status,0,c
  5596  00132C  3774               	rlcf	___fldiv@b& (0+255),f,b
  5597  00132E  3775               	rlcf	(___fldiv@b+1)& (0+255),f,b
  5598  001330  3776               	rlcf	(___fldiv@b+2)& (0+255),f,b
  5599  001332  3777               	rlcf	(___fldiv@b+3)& (0+255),f,b
  5600  001334                     
  5601                           ; BSR set to: 0
  5602  001334  AF8A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  5603  001336  EF9F  F009         	goto	u3051
  5604  00133A  EFA1  F009         	goto	u3050
  5605  00133E                     u3051:
  5606  00133E  EFA2  F009         	goto	l965
  5607  001342                     u3050:
  5608  001342                     
  5609                           ; BSR set to: 0
  5610  001342  8174               	bsf	___fldiv@b& (0+255),0,b
  5611  001344                     l965:
  5612                           
  5613                           ; BSR set to: 0
  5614  001344  90D8               	bcf	status,0,c
  5615  001346  3787               	rlcf	___fldiv@grs& (0+255),f,b
  5616  001348  3788               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  5617  00134A  3789               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  5618  00134C  378A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  5619  00134E  0785               	decf	___fldiv@new_exp& (0+255),f,b
  5620  001350  A0D8               	btfss	status,0,c
  5621  001352  0786               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  5622  001354                     l3163:
  5623                           
  5624                           ; BSR set to: 0
  5625  001354  AF76               	btfss	(___fldiv@b+2)& (0+255),7,b
  5626  001356  EFAF  F009         	goto	u3061
  5627  00135A  EFB1  F009         	goto	u3060
  5628  00135E                     u3061:
  5629  00135E  EF95  F009         	goto	l3157
  5630  001362                     u3060:
  5631  001362                     
  5632                           ; BSR set to: 0
  5633  001362  0E00               	movlw	0
  5634  001364  6F8C               	movwf	___fldiv@aexp& (0+255),b
  5635  001366                     
  5636                           ; BSR set to: 0
  5637  001366  AF8A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  5638  001368  EFB8  F009         	goto	u3071
  5639  00136C  EFBA  F009         	goto	u3070
  5640  001370                     u3071:
  5641  001370  EFDE  F009         	goto	l967
  5642  001374                     u3070:
  5643  001374                     
  5644                           ; BSR set to: 0
  5645  001374  0EFF               	movlw	255
  5646  001376  1587               	andwf	___fldiv@grs& (0+255),w,b
  5647  001378  6F7C               	movwf	??___fldiv& (0+255),b
  5648  00137A  0EFF               	movlw	255
  5649  00137C  1588               	andwf	(___fldiv@grs+1)& (0+255),w,b
  5650  00137E  6F7D               	movwf	(??___fldiv+1)& (0+255),b
  5651  001380  0EFF               	movlw	255
  5652  001382  1589               	andwf	(___fldiv@grs+2)& (0+255),w,b
  5653  001384  6F7E               	movwf	(??___fldiv+2)& (0+255),b
  5654  001386  0E7F               	movlw	127
  5655  001388  158A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  5656  00138A  6F7F               	movwf	(??___fldiv+3)& (0+255),b
  5657  00138C  517C               	movf	??___fldiv& (0+255),w,b
  5658  00138E  117D               	iorwf	(??___fldiv+1)& (0+255),w,b
  5659  001390  117E               	iorwf	(??___fldiv+2)& (0+255),w,b
  5660  001392  117F               	iorwf	(??___fldiv+3)& (0+255),w,b
  5661  001394  B4D8               	btfsc	status,2,c
  5662  001396  EFCF  F009         	goto	u3081
  5663  00139A  EFD1  F009         	goto	u3080
  5664  00139E                     u3081:
  5665  00139E  EFD5  F009         	goto	l968
  5666  0013A2                     u3080:
  5667  0013A2                     l3171:
  5668                           
  5669                           ; BSR set to: 0
  5670  0013A2  0E01               	movlw	1
  5671  0013A4  6F8C               	movwf	___fldiv@aexp& (0+255),b
  5672  0013A6  EFDE  F009         	goto	l967
  5673  0013AA                     l968:
  5674                           
  5675                           ; BSR set to: 0
  5676  0013AA  A174               	btfss	___fldiv@b& (0+255),0,b
  5677  0013AC  EFDA  F009         	goto	u3091
  5678  0013B0  EFDC  F009         	goto	u3090
  5679  0013B4                     u3091:
  5680  0013B4  EFDE  F009         	goto	l967
  5681  0013B8                     u3090:
  5682  0013B8  EFD1  F009         	goto	l3171
  5683  0013BC                     l967:
  5684                           
  5685                           ; BSR set to: 0
  5686  0013BC  518C               	movf	___fldiv@aexp& (0+255),w,b
  5687  0013BE  B4D8               	btfsc	status,2,c
  5688  0013C0  EFE4  F009         	goto	u3101
  5689  0013C4  EFE6  F009         	goto	u3100
  5690  0013C8                     u3101:
  5691  0013C8  EF0A  F00A         	goto	l3183
  5692  0013CC                     u3100:
  5693  0013CC                     
  5694                           ; BSR set to: 0
  5695  0013CC  0E01               	movlw	1
  5696  0013CE  2774               	addwf	___fldiv@b& (0+255),f,b
  5697  0013D0  0E00               	movlw	0
  5698  0013D2  2375               	addwfc	(___fldiv@b+1)& (0+255),f,b
  5699  0013D4  2376               	addwfc	(___fldiv@b+2)& (0+255),f,b
  5700  0013D6  2377               	addwfc	(___fldiv@b+3)& (0+255),f,b
  5701  0013D8                     
  5702                           ; BSR set to: 0
  5703  0013D8  A177               	btfss	(___fldiv@b+3)& (0+255),0,b
  5704  0013DA  EFF1  F009         	goto	u3111
  5705  0013DE  EFF3  F009         	goto	u3110
  5706  0013E2                     u3111:
  5707  0013E2  EF0A  F00A         	goto	l3183
  5708  0013E6                     u3110:
  5709  0013E6                     
  5710                           ; BSR set to: 0
  5711  0013E6  C074  F07C         	movff	___fldiv@b,??___fldiv
  5712  0013EA  C075  F07D         	movff	___fldiv@b+1,??___fldiv+1
  5713  0013EE  C076  F07E         	movff	___fldiv@b+2,??___fldiv+2
  5714  0013F2  C077  F07F         	movff	___fldiv@b+3,??___fldiv+3
  5715  0013F6  357F               	rlcf	(??___fldiv+3)& (0+255),w,b
  5716  0013F8  337F               	rrcf	(??___fldiv+3)& (0+255),f,b
  5717  0013FA  337E               	rrcf	(??___fldiv+2)& (0+255),f,b
  5718  0013FC  337D               	rrcf	(??___fldiv+1)& (0+255),f,b
  5719  0013FE  337C               	rrcf	??___fldiv& (0+255),f,b
  5720  001400  C07C  F074         	movff	??___fldiv,___fldiv@b
  5721  001404  C07D  F075         	movff	??___fldiv+1,___fldiv@b+1
  5722  001408  C07E  F076         	movff	??___fldiv+2,___fldiv@b+2
  5723  00140C  C07F  F077         	movff	??___fldiv+3,___fldiv@b+3
  5724  001410                     
  5725                           ; BSR set to: 0
  5726  001410  4B85               	infsnz	___fldiv@new_exp& (0+255),f,b
  5727  001412  2B86               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  5728  001414                     l3183:
  5729                           
  5730                           ; BSR set to: 0
  5731  001414  BF86               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  5732  001416  EF15  F00A         	goto	u3121
  5733  00141A  5186               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  5734  00141C  E108               	bnz	u3120
  5735  00141E  2985               	incf	___fldiv@new_exp& (0+255),w,b
  5736  001420  A0D8               	btfss	status,0,c
  5737  001422  EF15  F00A         	goto	u3121
  5738  001426  EF17  F00A         	goto	u3120
  5739  00142A                     u3121:
  5740  00142A  EF22  F00A         	goto	l3187
  5741  00142E                     u3120:
  5742  00142E                     
  5743                           ; BSR set to: 0
  5744  00142E  0E00               	movlw	0
  5745  001430  6F86               	movwf	(___fldiv@new_exp+1)& (0+255),b
  5746  001432  6985               	setf	___fldiv@new_exp& (0+255),b
  5747  001434  0E00               	movlw	0
  5748  001436  6F74               	movwf	___fldiv@b& (0+255),b
  5749  001438  0E00               	movlw	0
  5750  00143A  6F75               	movwf	(___fldiv@b+1)& (0+255),b
  5751  00143C  0E00               	movlw	0
  5752  00143E  6F76               	movwf	(___fldiv@b+2)& (0+255),b
  5753  001440  0E00               	movlw	0
  5754  001442  6F77               	movwf	(___fldiv@b+3)& (0+255),b
  5755  001444                     l3187:
  5756                           
  5757                           ; BSR set to: 0
  5758  001444  BF86               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  5759  001446  EF2F  F00A         	goto	u3130
  5760  00144A  5186               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  5761  00144C  E106               	bnz	u3131
  5762  00144E  0585               	decf	___fldiv@new_exp& (0+255),w,b
  5763  001450  B0D8               	btfsc	status,0,c
  5764  001452  EF2D  F00A         	goto	u3131
  5765  001456  EF2F  F00A         	goto	u3130
  5766  00145A                     u3131:
  5767  00145A  EF3D  F00A         	goto	l3191
  5768  00145E                     u3130:
  5769  00145E                     
  5770                           ; BSR set to: 0
  5771  00145E  0E00               	movlw	0
  5772  001460  6F86               	movwf	(___fldiv@new_exp+1)& (0+255),b
  5773  001462  0E00               	movlw	0
  5774  001464  6F85               	movwf	___fldiv@new_exp& (0+255),b
  5775  001466  0E00               	movlw	0
  5776  001468  6F74               	movwf	___fldiv@b& (0+255),b
  5777  00146A  0E00               	movlw	0
  5778  00146C  6F75               	movwf	(___fldiv@b+1)& (0+255),b
  5779  00146E  0E00               	movlw	0
  5780  001470  6F76               	movwf	(___fldiv@b+2)& (0+255),b
  5781  001472  0E00               	movlw	0
  5782  001474  6F77               	movwf	(___fldiv@b+3)& (0+255),b
  5783  001476  0E00               	movlw	0
  5784  001478  6F84               	movwf	___fldiv@sign& (0+255),b
  5785  00147A                     l3191:
  5786                           
  5787                           ; BSR set to: 0
  5788  00147A  C085  F08B         	movff	___fldiv@new_exp,___fldiv@bexp
  5789  00147E                     
  5790                           ; BSR set to: 0
  5791  00147E  A18B               	btfss	___fldiv@bexp& (0+255),0,b
  5792  001480  EF44  F00A         	goto	u3141
  5793  001484  EF46  F00A         	goto	u3140
  5794  001488                     u3141:
  5795  001488  EF49  F00A         	goto	l3197
  5796  00148C                     u3140:
  5797  00148C                     
  5798                           ; BSR set to: 0
  5799  00148C  8F76               	bsf	(___fldiv@b+2)& (0+255),7,b
  5800  00148E  EF4A  F00A         	goto	l3199
  5801  001492                     l3197:
  5802                           
  5803                           ; BSR set to: 0
  5804  001492  9F76               	bcf	(___fldiv@b+2)& (0+255),7,b
  5805  001494                     l3199:
  5806                           
  5807                           ; BSR set to: 0
  5808  001494  90D8               	bcf	status,0,c
  5809  001496  318B               	rrcf	___fldiv@bexp& (0+255),w,b
  5810  001498  6F77               	movwf	(___fldiv@b+3)& (0+255),b
  5811  00149A  EF00  F009         	goto	l3113
  5812  00149E                     l954:
  5813                           
  5814                           ; BSR set to: 0
  5815  00149E  0012               	return		;funcret
  5816  0014A0                     __end_of___fldiv:
  5817                           	opt callstack 0
  5818                           
  5819 ;; *************** function _configDA *****************
  5820 ;; Defined at:
  5821 ;;		line 33 in file "./Seguidor.h"
  5822 ;; Parameters:    Size  Location     Type
  5823 ;;		None
  5824 ;; Auto vars:     Size  Location     Type
  5825 ;;  i               2   65[BANK0 ] int 
  5826 ;; Return value:  Size  Location     Type
  5827 ;;                  1    wreg      void 
  5828 ;; Registers used:
  5829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5830 ;; Tracked objects:
  5831 ;;		On entry : 0/0
  5832 ;;		On exit  : 0/0
  5833 ;;		Unchanged: 0/0
  5834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5835 ;;      Params:         0       0       0       0
  5836 ;;      Locals:         0       6       0       0
  5837 ;;      Temps:          0       2       0       0
  5838 ;;      Totals:         0       8       0       0
  5839 ;;Total ram usage:        8 bytes
  5840 ;; Hardware stack levels used:    1
  5841 ;; Hardware stack levels required when called:    7
  5842 ;; This function calls:
  5843 ;;		___flge
  5844 ;;		___xxtofl
  5845 ;;		_getAD_AN
  5846 ;; This function is called by:
  5847 ;;		_setPID
  5848 ;; This function uses a non-reentrant model
  5849 ;;
  5850                           
  5851                           	psect	text27
  5852  002006                     __ptext27:
  5853                           	opt callstack 0
  5854  002006                     _configDA:
  5855                           	opt callstack 22
  5856  002006                     
  5857                           ;./Seguidor.h: 35:     int i;;./Seguidor.h: 36:     for (i = 0; i < 7; i++)
  5858  002006  0E00               	movlw	0
  5859  002008  0100               	movlb	0	; () banked
  5860  00200A  6FA2               	movwf	(configDA@i+1)& (0+255),b
  5861  00200C  0E00               	movlw	0
  5862  00200E  6FA1               	movwf	configDA@i& (0+255),b
  5863  002010                     l4671:
  5864                           
  5865                           ; BSR set to: 0
  5866                           ;./Seguidor.h: 37:     {;./Seguidor.h: 38:         sensor[i] = getAD_AN(i);
  5867  002010  C0A1  F095         	movff	configDA@i,getAD_AN@porta
  5868  002014  C0A2  F096         	movff	configDA@i+1,getAD_AN@porta+1
  5869  002018  EC41  F011         	call	_getAD_AN	;wreg free
  5870  00201C  0100               	movlb	0	; () banked
  5871  00201E  C095  F09D         	movff	?_getAD_AN,_configDA$1566
  5872  002022  C096  F09E         	movff	?_getAD_AN+1,_configDA$1566+1
  5873  002026  0E00               	movlw	0
  5874  002028  BF9E               	btfsc	(_configDA$1566+1)& (0+255),7,b
  5875  00202A  0EFF               	movlw	-1
  5876  00202C  6F9F               	movwf	(_configDA$1566+2)& (0+255),b
  5877  00202E  6FA0               	movwf	(_configDA$1566+3)& (0+255),b
  5878  002030                     
  5879                           ; BSR set to: 0
  5880                           ;./Seguidor.h: 37:     {;./Seguidor.h: 38:         sensor[i] = getAD_AN(i);
  5881  002030  C09D  F013         	movff	_configDA$1566,___xxtofl@val
  5882  002034  C09E  F014         	movff	_configDA$1566+1,___xxtofl@val+1
  5883  002038  C09F  F015         	movff	_configDA$1566+2,___xxtofl@val+2
  5884  00203C  C0A0  F016         	movff	_configDA$1566+3,___xxtofl@val+3
  5885  002040  0E01               	movlw	1
  5886  002042  EC5E  F00E         	call	___xxtofl
  5887  002046  0E1C               	movlw	low _sensor
  5888  002048  0100               	movlb	0	; () banked
  5889  00204A  6F9B               	movwf	??_configDA& (0+255),b
  5890  00204C  0E01               	movlw	high _sensor
  5891  00204E  6F9C               	movwf	(??_configDA+1)& (0+255),b
  5892  002050  90D8               	bcf	status,0,c
  5893  002052  35A1               	rlcf	configDA@i& (0+255),w,b
  5894  002054  6ED9               	movwf	fsr2l,c
  5895  002056  35A2               	rlcf	(configDA@i+1)& (0+255),w,b
  5896  002058  6EDA               	movwf	fsr2h,c
  5897  00205A  90D8               	bcf	status,0,c
  5898  00205C  36D9               	rlcf	fsr2l,f,c
  5899  00205E  36DA               	rlcf	fsr2h,f,c
  5900  002060  519B               	movf	??_configDA& (0+255),w,b
  5901  002062  26D9               	addwf	fsr2l,f,c
  5902  002064  519C               	movf	(??_configDA+1)& (0+255),w,b
  5903  002066  22DA               	addwfc	fsr2h,f,c
  5904  002068  C013  FFDE         	movff	?___xxtofl,postinc2
  5905  00206C  C014  FFDE         	movff	?___xxtofl+1,postinc2
  5906  002070  C015  FFDE         	movff	?___xxtofl+2,postinc2
  5907  002074  C016  FFDE         	movff	?___xxtofl+3,postinc2
  5908  002078                     
  5909                           ; BSR set to: 0
  5910                           ;./Seguidor.h: 39:         if (sensor[i] > 850)
  5911  002078  0E00               	movlw	0
  5912  00207A  6E13               	movwf	___flge@ff1^0,c
  5913  00207C  0E80               	movlw	128
  5914  00207E  6E14               	movwf	(___flge@ff1+1)^0,c
  5915  002080  0E54               	movlw	84
  5916  002082  6E15               	movwf	(___flge@ff1+2)^0,c
  5917  002084  0E44               	movlw	68
  5918  002086  6E16               	movwf	(___flge@ff1+3)^0,c
  5919  002088  0E1C               	movlw	low _sensor
  5920  00208A  6F9B               	movwf	??_configDA& (0+255),b
  5921  00208C  0E01               	movlw	high _sensor
  5922  00208E  6F9C               	movwf	(??_configDA+1)& (0+255),b
  5923  002090  90D8               	bcf	status,0,c
  5924  002092  35A1               	rlcf	configDA@i& (0+255),w,b
  5925  002094  6ED9               	movwf	fsr2l,c
  5926  002096  35A2               	rlcf	(configDA@i+1)& (0+255),w,b
  5927  002098  6EDA               	movwf	fsr2h,c
  5928  00209A  90D8               	bcf	status,0,c
  5929  00209C  36D9               	rlcf	fsr2l,f,c
  5930  00209E  36DA               	rlcf	fsr2h,f,c
  5931  0020A0  519B               	movf	??_configDA& (0+255),w,b
  5932  0020A2  26D9               	addwf	fsr2l,f,c
  5933  0020A4  519C               	movf	(??_configDA+1)& (0+255),w,b
  5934  0020A6  22DA               	addwfc	fsr2h,f,c
  5935  0020A8  CFDE F017          	movff	postinc2,___flge@ff2
  5936  0020AC  CFDE F018          	movff	postinc2,___flge@ff2+1
  5937  0020B0  CFDE F019          	movff	postinc2,___flge@ff2+2
  5938  0020B4  CFDE F01A          	movff	postinc2,___flge@ff2+3
  5939  0020B8  EC4F  F012         	call	___flge	;wreg free
  5940  0020BC  B0D8               	btfsc	status,0,c
  5941  0020BE  EF63  F010         	goto	u4991
  5942  0020C2  EF65  F010         	goto	u4990
  5943  0020C6                     u4991:
  5944  0020C6  EF80  F010         	goto	l4679
  5945  0020CA                     u4990:
  5946  0020CA                     
  5947                           ;./Seguidor.h: 40:         {;./Seguidor.h: 41:             leitura[i] = 1;
  5948  0020CA  0E00               	movlw	low _leitura
  5949  0020CC  0100               	movlb	0	; () banked
  5950  0020CE  6F9B               	movwf	??_configDA& (0+255),b
  5951  0020D0  0E01               	movlw	high _leitura
  5952  0020D2  6F9C               	movwf	(??_configDA+1)& (0+255),b
  5953  0020D4  90D8               	bcf	status,0,c
  5954  0020D6  35A1               	rlcf	configDA@i& (0+255),w,b
  5955  0020D8  6ED9               	movwf	fsr2l,c
  5956  0020DA  35A2               	rlcf	(configDA@i+1)& (0+255),w,b
  5957  0020DC  6EDA               	movwf	fsr2h,c
  5958  0020DE  90D8               	bcf	status,0,c
  5959  0020E0  36D9               	rlcf	fsr2l,f,c
  5960  0020E2  36DA               	rlcf	fsr2h,f,c
  5961  0020E4  519B               	movf	??_configDA& (0+255),w,b
  5962  0020E6  26D9               	addwf	fsr2l,f,c
  5963  0020E8  519C               	movf	(??_configDA+1)& (0+255),w,b
  5964  0020EA  22DA               	addwfc	fsr2h,f,c
  5965  0020EC  0E00               	movlw	0
  5966  0020EE  6EDE               	movwf	postinc2,c
  5967  0020F0  0E00               	movlw	0
  5968  0020F2  6EDE               	movwf	postinc2,c
  5969  0020F4  0E80               	movlw	128
  5970  0020F6  6EDE               	movwf	postinc2,c
  5971  0020F8  0E3F               	movlw	63
  5972  0020FA  6EDD               	movwf	postdec2,c
  5973                           
  5974                           ;./Seguidor.h: 42:         } else {
  5975  0020FC  EF99  F010         	goto	l4681
  5976  002100                     l4679:
  5977                           
  5978                           ;./Seguidor.h: 43:             leitura[i] = 0;
  5979  002100  0E00               	movlw	low _leitura
  5980  002102  0100               	movlb	0	; () banked
  5981  002104  6F9B               	movwf	??_configDA& (0+255),b
  5982  002106  0E01               	movlw	high _leitura
  5983  002108  6F9C               	movwf	(??_configDA+1)& (0+255),b
  5984  00210A  90D8               	bcf	status,0,c
  5985  00210C  35A1               	rlcf	configDA@i& (0+255),w,b
  5986  00210E  6ED9               	movwf	fsr2l,c
  5987  002110  35A2               	rlcf	(configDA@i+1)& (0+255),w,b
  5988  002112  6EDA               	movwf	fsr2h,c
  5989  002114  90D8               	bcf	status,0,c
  5990  002116  36D9               	rlcf	fsr2l,f,c
  5991  002118  36DA               	rlcf	fsr2h,f,c
  5992  00211A  519B               	movf	??_configDA& (0+255),w,b
  5993  00211C  26D9               	addwf	fsr2l,f,c
  5994  00211E  519C               	movf	(??_configDA+1)& (0+255),w,b
  5995  002120  22DA               	addwfc	fsr2h,f,c
  5996  002122  0E00               	movlw	0
  5997  002124  6EDE               	movwf	postinc2,c
  5998  002126  0E00               	movlw	0
  5999  002128  6EDE               	movwf	postinc2,c
  6000  00212A  0E00               	movlw	0
  6001  00212C  6EDE               	movwf	postinc2,c
  6002  00212E  0E00               	movlw	0
  6003  002130  6EDD               	movwf	postdec2,c
  6004  002132                     l4681:
  6005                           
  6006                           ; BSR set to: 0
  6007                           ;./Seguidor.h: 45:     }
  6008  002132  4BA1               	infsnz	configDA@i& (0+255),f,b
  6009  002134  2BA2               	incf	(configDA@i+1)& (0+255),f,b
  6010  002136                     
  6011                           ; BSR set to: 0
  6012  002136  BFA2               	btfsc	(configDA@i+1)& (0+255),7,b
  6013  002138  EFA7  F010         	goto	u5001
  6014  00213C  51A2               	movf	(configDA@i+1)& (0+255),w,b
  6015  00213E  E109               	bnz	u5000
  6016  002140  0E07               	movlw	7
  6017  002142  5DA1               	subwf	configDA@i& (0+255),w,b
  6018  002144  A0D8               	btfss	status,0,c
  6019  002146  EFA7  F010         	goto	u5001
  6020  00214A  EFA9  F010         	goto	u5000
  6021  00214E                     u5001:
  6022  00214E  EF08  F010         	goto	l4671
  6023  002152                     u5000:
  6024  002152                     
  6025                           ; BSR set to: 0
  6026  002152  0012               	return		;funcret
  6027  002154                     __end_of_configDA:
  6028                           	opt callstack 0
  6029                           
  6030 ;; *************** function _getAD_AN *****************
  6031 ;; Defined at:
  6032 ;;		line 89 in file "./ADC.h"
  6033 ;; Parameters:    Size  Location     Type
  6034 ;;  porta           2   53[BANK0 ] int 
  6035 ;; Auto vars:     Size  Location     Type
  6036 ;;  ANread          4   55[BANK0 ] float 
  6037 ;; Return value:  Size  Location     Type
  6038 ;;                  2   53[BANK0 ] int 
  6039 ;; Registers used:
  6040 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6041 ;; Tracked objects:
  6042 ;;		On entry : 0/0
  6043 ;;		On exit  : 0/0
  6044 ;;		Unchanged: 0/0
  6045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6046 ;;      Params:         0       2       0       0
  6047 ;;      Locals:         0       4       0       0
  6048 ;;      Temps:          0       0       0       0
  6049 ;;      Totals:         0       6       0       0
  6050 ;;Total ram usage:        6 bytes
  6051 ;; Hardware stack levels used:    1
  6052 ;; Hardware stack levels required when called:    6
  6053 ;; This function calls:
  6054 ;;		___fltol
  6055 ;;		_bitExtract
  6056 ;;		_readAD_AN
  6057 ;; This function is called by:
  6058 ;;		_testeAD
  6059 ;;		_configDA
  6060 ;; This function uses a non-reentrant model
  6061 ;;
  6062                           
  6063                           	psect	text28
  6064  002282                     __ptext28:
  6065                           	opt callstack 0
  6066  002282                     _getAD_AN:
  6067                           	opt callstack 23
  6068  002282                     
  6069                           ;./ADC.h: 91:     ADCON0bits.ACMOD = bitExtract(porta, 2, 0);
  6070  002282  C095  F013         	movff	getAD_AN@porta,bitExtract@numero
  6071  002286  C096  F014         	movff	getAD_AN@porta+1,bitExtract@numero+1
  6072  00228A  0E00               	movlw	0
  6073  00228C  6E16               	movwf	(bitExtract@k+1)^0,c
  6074  00228E  0E02               	movlw	2
  6075  002290  6E15               	movwf	bitExtract@k^0,c
  6076  002292  0E00               	movlw	0
  6077  002294  6E18               	movwf	(bitExtract@p+1)^0,c
  6078  002296  0E00               	movlw	0
  6079  002298  6E17               	movwf	bitExtract@p^0,c
  6080  00229A  EC7C  F017         	call	_bitExtract	;wreg free
  6081  00229E  4613               	rlncf	?_bitExtract^0,f,c
  6082  0022A0  4613               	rlncf	?_bitExtract^0,f,c
  6083  0022A2  50C2               	movf	194,w,c	;volatile
  6084  0022A4  1813               	xorwf	?_bitExtract^0,w,c
  6085  0022A6  0BF3               	andlw	-13
  6086  0022A8  1813               	xorwf	?_bitExtract^0,w,c
  6087  0022AA  6EC2               	movwf	194,c	;volatile
  6088                           
  6089                           ;./ADC.h: 93:     ADCHSbits.GASEL0 = bitExtract(porta, 1, 2);
  6090  0022AC  C095  F013         	movff	getAD_AN@porta,bitExtract@numero
  6091  0022B0  C096  F014         	movff	getAD_AN@porta+1,bitExtract@numero+1
  6092  0022B4  0E00               	movlw	0
  6093  0022B6  6E16               	movwf	(bitExtract@k+1)^0,c
  6094  0022B8  0E01               	movlw	1
  6095  0022BA  6E15               	movwf	bitExtract@k^0,c
  6096  0022BC  0E00               	movlw	0
  6097  0022BE  6E18               	movwf	(bitExtract@p+1)^0,c
  6098  0022C0  0E02               	movlw	2
  6099  0022C2  6E17               	movwf	bitExtract@p^0,c
  6100  0022C4  EC7C  F017         	call	_bitExtract	;wreg free
  6101  0022C8  5099               	movf	153,w,c	;volatile
  6102  0022CA  1813               	xorwf	?_bitExtract^0,w,c
  6103  0022CC  0BFE               	andlw	-2
  6104  0022CE  1813               	xorwf	?_bitExtract^0,w,c
  6105  0022D0  6E99               	movwf	153,c	;volatile
  6106                           
  6107                           ;./ADC.h: 94:     ADCHSbits.GBSEL0 = bitExtract(porta, 1, 2);
  6108  0022D2  C095  F013         	movff	getAD_AN@porta,bitExtract@numero
  6109  0022D6  C096  F014         	movff	getAD_AN@porta+1,bitExtract@numero+1
  6110  0022DA  0E00               	movlw	0
  6111  0022DC  6E16               	movwf	(bitExtract@k+1)^0,c
  6112  0022DE  0E01               	movlw	1
  6113  0022E0  6E15               	movwf	bitExtract@k^0,c
  6114  0022E2  0E00               	movlw	0
  6115  0022E4  6E18               	movwf	(bitExtract@p+1)^0,c
  6116  0022E6  0E02               	movlw	2
  6117  0022E8  6E17               	movwf	bitExtract@p^0,c
  6118  0022EA  EC7C  F017         	call	_bitExtract	;wreg free
  6119  0022EE  3A13               	swapf	?_bitExtract^0,f,c
  6120  0022F0  5099               	movf	153,w,c	;volatile
  6121  0022F2  1813               	xorwf	?_bitExtract^0,w,c
  6122  0022F4  0BEF               	andlw	-17
  6123  0022F6  1813               	xorwf	?_bitExtract^0,w,c
  6124  0022F8  6E99               	movwf	153,c	;volatile
  6125                           
  6126                           ;./ADC.h: 95:     ADCHSbits.GCSEL0 = bitExtract(porta, 1, 2);
  6127  0022FA  C095  F013         	movff	getAD_AN@porta,bitExtract@numero
  6128  0022FE  C096  F014         	movff	getAD_AN@porta+1,bitExtract@numero+1
  6129  002302  0E00               	movlw	0
  6130  002304  6E16               	movwf	(bitExtract@k+1)^0,c
  6131  002306  0E01               	movlw	1
  6132  002308  6E15               	movwf	bitExtract@k^0,c
  6133  00230A  0E00               	movlw	0
  6134  00230C  6E18               	movwf	(bitExtract@p+1)^0,c
  6135  00230E  0E02               	movlw	2
  6136  002310  6E17               	movwf	bitExtract@p^0,c
  6137  002312  EC7C  F017         	call	_bitExtract	;wreg free
  6138  002316  4613               	rlncf	?_bitExtract^0,f,c
  6139  002318  4613               	rlncf	?_bitExtract^0,f,c
  6140  00231A  5099               	movf	153,w,c	;volatile
  6141  00231C  1813               	xorwf	?_bitExtract^0,w,c
  6142  00231E  0BFB               	andlw	-5
  6143  002320  1813               	xorwf	?_bitExtract^0,w,c
  6144  002322  6E99               	movwf	153,c	;volatile
  6145                           
  6146                           ;./ADC.h: 96:     ADCHSbits.GDSEL0 = bitExtract(porta, 1, 2);
  6147  002324  C095  F013         	movff	getAD_AN@porta,bitExtract@numero
  6148  002328  C096  F014         	movff	getAD_AN@porta+1,bitExtract@numero+1
  6149  00232C  0E00               	movlw	0
  6150  00232E  6E16               	movwf	(bitExtract@k+1)^0,c
  6151  002330  0E01               	movlw	1
  6152  002332  6E15               	movwf	bitExtract@k^0,c
  6153  002334  0E00               	movlw	0
  6154  002336  6E18               	movwf	(bitExtract@p+1)^0,c
  6155  002338  0E02               	movlw	2
  6156  00233A  6E17               	movwf	bitExtract@p^0,c
  6157  00233C  EC7C  F017         	call	_bitExtract	;wreg free
  6158  002340  3A13               	swapf	?_bitExtract^0,f,c
  6159  002342  4613               	rlncf	?_bitExtract^0,f,c
  6160  002344  4613               	rlncf	?_bitExtract^0,f,c
  6161  002346  5099               	movf	153,w,c	;volatile
  6162  002348  1813               	xorwf	?_bitExtract^0,w,c
  6163  00234A  0BBF               	andlw	-65
  6164  00234C  1813               	xorwf	?_bitExtract^0,w,c
  6165  00234E  6E99               	movwf	153,c	;volatile
  6166  002350                     
  6167                           ;./ADC.h: 98:     ADCON0bits.ADON = 1;
  6168  002350  80C2               	bsf	194,0,c	;volatile
  6169  002352                     
  6170                           ;./ADC.h: 99:     ADCON0bits.GODONE = 1;
  6171  002352  82C2               	bsf	194,1,c	;volatile
  6172  002354                     l166:
  6173  002354  B2C2               	btfsc	194,1,c	;volatile
  6174  002356  EFAF  F011         	goto	u4331
  6175  00235A  EFB1  F011         	goto	u4330
  6176  00235E                     u4331:
  6177  00235E  EFAA  F011         	goto	l166
  6178  002362                     u4330:
  6179  002362                     
  6180                           ;./ADC.h: 102:     float ANread = readAD_AN();
  6181  002362  ECBF  F016         	call	_readAD_AN	;wreg free
  6182  002366  C03A  F097         	movff	?_readAD_AN,getAD_AN@ANread
  6183  00236A  C03B  F098         	movff	?_readAD_AN+1,getAD_AN@ANread+1
  6184  00236E  C03C  F099         	movff	?_readAD_AN+2,getAD_AN@ANread+2
  6185  002372  C03D  F09A         	movff	?_readAD_AN+3,getAD_AN@ANread+3
  6186  002376                     
  6187                           ;./ADC.h: 103:     ADCON0bits.ADON = 0;
  6188  002376  90C2               	bcf	194,0,c	;volatile
  6189  002378                     
  6190                           ;./ADC.h: 105:     return (int) ANread;
  6191  002378  C097  F08D         	movff	getAD_AN@ANread,___fltol@f1
  6192  00237C  C098  F08E         	movff	getAD_AN@ANread+1,___fltol@f1+1
  6193  002380  C099  F08F         	movff	getAD_AN@ANread+2,___fltol@f1+2
  6194  002384  C09A  F090         	movff	getAD_AN@ANread+3,___fltol@f1+3
  6195  002388  ECCB  F011         	call	___fltol	;wreg free
  6196  00238C  C08D  F095         	movff	?___fltol,?_getAD_AN
  6197  002390  C08E  F096         	movff	?___fltol+1,?_getAD_AN+1
  6198  002394  0012               	return		;funcret
  6199  002396                     __end_of_getAD_AN:
  6200                           	opt callstack 0
  6201                           
  6202 ;; *************** function _readAD_AN *****************
  6203 ;; Defined at:
  6204 ;;		line 69 in file "./ADC.h"
  6205 ;; Parameters:    Size  Location     Type
  6206 ;;		None
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;		None
  6209 ;; Return value:  Size  Location     Type
  6210 ;;                  4   57[COMRAM] float 
  6211 ;; Registers used:
  6212 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6213 ;; Tracked objects:
  6214 ;;		On entry : 0/0
  6215 ;;		On exit  : 0/0
  6216 ;;		Unchanged: 0/0
  6217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6218 ;;      Params:         4       0       0       0
  6219 ;;      Locals:         0       4       0       0
  6220 ;;      Temps:          0       0       0       0
  6221 ;;      Totals:         4       4       0       0
  6222 ;;Total ram usage:        8 bytes
  6223 ;; Hardware stack levels used:    1
  6224 ;; Hardware stack levels required when called:    5
  6225 ;; This function calls:
  6226 ;;		___flmul
  6227 ;;		___xxtofl
  6228 ;; This function is called by:
  6229 ;;		_getAD_AN
  6230 ;; This function uses a non-reentrant model
  6231 ;;
  6232                           
  6233                           	psect	text29
  6234  002D7E                     __ptext29:
  6235                           	opt callstack 0
  6236  002D7E                     _readAD_AN:
  6237                           	opt callstack 23
  6238  002D7E                     
  6239                           ;./ADC.h: 71:     vdig_AN = ADRESH;
  6240  002D7E  CFC4 F04B          	movff	4036,_vdig_AN	;volatile
  6241  002D82  6A4C               	clrf	(_vdig_AN+1)^0,c
  6242  002D84                     
  6243                           ;./ADC.h: 72:     vdig_AN = vdig_AN << 8;
  6244  002D84  504B               	movf	_vdig_AN^0,w,c
  6245  002D86  6E4C               	movwf	(_vdig_AN+1)^0,c
  6246  002D88  6A4B               	clrf	_vdig_AN^0,c
  6247  002D8A                     
  6248                           ;./ADC.h: 73:     vdig_AN += ADRESL;
  6249  002D8A  50C3               	movf	195,w,c	;volatile
  6250  002D8C  264B               	addwf	_vdig_AN^0,f,c
  6251  002D8E  0E00               	movlw	0
  6252  002D90  224C               	addwfc	(_vdig_AN+1)^0,f,c
  6253  002D92                     
  6254                           ;./ADC.h: 75:     vanal_AN = 4.88 * vdig_AN * 0.1;
  6255  002D92  0EF6               	movlw	246
  6256  002D94  6E25               	movwf	___flmul@a^0,c
  6257  002D96  0E28               	movlw	40
  6258  002D98  6E26               	movwf	(___flmul@a+1)^0,c
  6259  002D9A  0E9C               	movlw	156
  6260  002D9C  6E27               	movwf	(___flmul@a+2)^0,c
  6261  002D9E  0E40               	movlw	64
  6262  002DA0  6E28               	movwf	(___flmul@a+3)^0,c
  6263  002DA2  C04B  F013         	movff	_vdig_AN,___xxtofl@val
  6264  002DA6  C04C  F014         	movff	_vdig_AN+1,___xxtofl@val+1
  6265  002DAA  0E00               	movlw	0
  6266  002DAC  BE14               	btfsc	(___xxtofl@val+1)^0,7,c
  6267  002DAE  0EFF               	movlw	-1
  6268  002DB0  6E15               	movwf	(___xxtofl@val+2)^0,c
  6269  002DB2  6E16               	movwf	(___xxtofl@val+3)^0,c
  6270  002DB4  0E01               	movlw	1
  6271  002DB6  EC5E  F00E         	call	___xxtofl
  6272  002DBA  C013  F021         	movff	?___xxtofl,___flmul@b
  6273  002DBE  C014  F022         	movff	?___xxtofl+1,___flmul@b+1
  6274  002DC2  C015  F023         	movff	?___xxtofl+2,___flmul@b+2
  6275  002DC6  C016  F024         	movff	?___xxtofl+3,___flmul@b+3
  6276  002DCA  EC6D  F006         	call	___flmul	;wreg free
  6277  002DCE  C021  F060         	movff	?___flmul,_readAD_AN$1565
  6278  002DD2  C022  F061         	movff	?___flmul+1,_readAD_AN$1565+1
  6279  002DD6  C023  F062         	movff	?___flmul+2,_readAD_AN$1565+2
  6280  002DDA  C024  F063         	movff	?___flmul+3,_readAD_AN$1565+3
  6281  002DDE                     
  6282                           ;./ADC.h: 75:     vanal_AN = 4.88 * vdig_AN * 0.1;
  6283  002DDE  C060  F021         	movff	_readAD_AN$1565,___flmul@b
  6284  002DE2  C061  F022         	movff	_readAD_AN$1565+1,___flmul@b+1
  6285  002DE6  C062  F023         	movff	_readAD_AN$1565+2,___flmul@b+2
  6286  002DEA  C063  F024         	movff	_readAD_AN$1565+3,___flmul@b+3
  6287  002DEE  0ECD               	movlw	205
  6288  002DF0  6E25               	movwf	___flmul@a^0,c
  6289  002DF2  0ECC               	movlw	204
  6290  002DF4  6E26               	movwf	(___flmul@a+1)^0,c
  6291  002DF6  0ECC               	movlw	204
  6292  002DF8  6E27               	movwf	(___flmul@a+2)^0,c
  6293  002DFA  0E3D               	movlw	61
  6294  002DFC  6E28               	movwf	(___flmul@a+3)^0,c
  6295  002DFE  EC6D  F006         	call	___flmul	;wreg free
  6296  002E02  C021  F046         	movff	?___flmul,_vanal_AN
  6297  002E06  C022  F047         	movff	?___flmul+1,_vanal_AN+1
  6298  002E0A  C023  F048         	movff	?___flmul+2,_vanal_AN+2
  6299  002E0E  C024  F049         	movff	?___flmul+3,_vanal_AN+3
  6300  002E12                     
  6301                           ;./ADC.h: 77:     return vanal_AN;
  6302  002E12  C046  F03A         	movff	_vanal_AN,?_readAD_AN
  6303  002E16  C047  F03B         	movff	_vanal_AN+1,?_readAD_AN+1
  6304  002E1A  C048  F03C         	movff	_vanal_AN+2,?_readAD_AN+2
  6305  002E1E  C049  F03D         	movff	_vanal_AN+3,?_readAD_AN+3
  6306  002E22  0012               	return		;funcret
  6307  002E24                     __end_of_readAD_AN:
  6308                           	opt callstack 0
  6309                           
  6310 ;; *************** function ___xxtofl *****************
  6311 ;; Defined at:
  6312 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  6313 ;; Parameters:    Size  Location     Type
  6314 ;;  sign            1    wreg     unsigned char 
  6315 ;;  val             4   18[COMRAM] long 
  6316 ;; Auto vars:     Size  Location     Type
  6317 ;;  sign            1   26[COMRAM] unsigned char 
  6318 ;;  arg             4   28[COMRAM] unsigned long 
  6319 ;;  exp             1   27[COMRAM] unsigned char 
  6320 ;; Return value:  Size  Location     Type
  6321 ;;                  4   18[COMRAM] unsigned char 
  6322 ;; Registers used:
  6323 ;;		wreg, status,2, status,0
  6324 ;; Tracked objects:
  6325 ;;		On entry : 0/0
  6326 ;;		On exit  : 0/0
  6327 ;;		Unchanged: 0/0
  6328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6329 ;;      Params:         4       0       0       0
  6330 ;;      Locals:         6       0       0       0
  6331 ;;      Temps:          4       0       0       0
  6332 ;;      Totals:        14       0       0       0
  6333 ;;Total ram usage:       14 bytes
  6334 ;; Hardware stack levels used:    1
  6335 ;; Hardware stack levels required when called:    4
  6336 ;; This function calls:
  6337 ;;		Nothing
  6338 ;; This function is called by:
  6339 ;;		_readAD_AN
  6340 ;;		_configDA
  6341 ;;		_setPID
  6342 ;; This function uses a non-reentrant model
  6343 ;;
  6344                           
  6345                           	psect	text30
  6346  001CBC                     __ptext30:
  6347                           	opt callstack 0
  6348  001CBC                     ___xxtofl:
  6349                           	opt callstack 23
  6350                           
  6351                           ;incstack = 0
  6352                           ;___xxtofl@sign stored from wreg
  6353  001CBC  6E1B               	movwf	___xxtofl@sign^0,c
  6354  001CBE  501B               	movf	___xxtofl@sign^0,w,c
  6355  001CC0  B4D8               	btfsc	status,2,c
  6356  001CC2  EF65  F00E         	goto	u4201
  6357  001CC6  EF67  F00E         	goto	u4200
  6358  001CCA                     u4201:
  6359  001CCA  EF89  F00E         	goto	l1027
  6360  001CCE                     u4200:
  6361  001CCE  BE16               	btfsc	(___xxtofl@val+3)^0,7,c
  6362  001CD0  EF6E  F00E         	goto	u4210
  6363  001CD4  EF6C  F00E         	goto	u4211
  6364  001CD8                     u4211:
  6365  001CD8  EF89  F00E         	goto	l1027
  6366  001CDC                     u4210:
  6367  001CDC  C013  F017         	movff	___xxtofl@val,??___xxtofl
  6368  001CE0  C014  F018         	movff	___xxtofl@val+1,??___xxtofl+1
  6369  001CE4  C015  F019         	movff	___xxtofl@val+2,??___xxtofl+2
  6370  001CE8  C016  F01A         	movff	___xxtofl@val+3,??___xxtofl+3
  6371  001CEC  1E17               	comf	??___xxtofl^0,f,c
  6372  001CEE  1E18               	comf	(??___xxtofl+1)^0,f,c
  6373  001CF0  1E19               	comf	(??___xxtofl+2)^0,f,c
  6374  001CF2  1E1A               	comf	(??___xxtofl+3)^0,f,c
  6375  001CF4  2A17               	incf	??___xxtofl^0,f,c
  6376  001CF6  0E00               	movlw	0
  6377  001CF8  2218               	addwfc	(??___xxtofl+1)^0,f,c
  6378  001CFA  2219               	addwfc	(??___xxtofl+2)^0,f,c
  6379  001CFC  221A               	addwfc	(??___xxtofl+3)^0,f,c
  6380  001CFE  C017  F01D         	movff	??___xxtofl,___xxtofl@arg
  6381  001D02  C018  F01E         	movff	??___xxtofl+1,___xxtofl@arg+1
  6382  001D06  C019  F01F         	movff	??___xxtofl+2,___xxtofl@arg+2
  6383  001D0A  C01A  F020         	movff	??___xxtofl+3,___xxtofl@arg+3
  6384  001D0E  EF91  F00E         	goto	l4171
  6385  001D12                     l1027:
  6386  001D12  C013  F01D         	movff	___xxtofl@val,___xxtofl@arg
  6387  001D16  C014  F01E         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6388  001D1A  C015  F01F         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6389  001D1E  C016  F020         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6390  001D22                     l4171:
  6391  001D22  5013               	movf	___xxtofl@val^0,w,c
  6392  001D24  1014               	iorwf	(___xxtofl@val+1)^0,w,c
  6393  001D26  1015               	iorwf	(___xxtofl@val+2)^0,w,c
  6394  001D28  1016               	iorwf	(___xxtofl@val+3)^0,w,c
  6395  001D2A  A4D8               	btfss	status,2,c
  6396  001D2C  EF9A  F00E         	goto	u4221
  6397  001D30  EF9C  F00E         	goto	u4220
  6398  001D34                     u4221:
  6399  001D34  EFA6  F00E         	goto	l4177
  6400  001D38                     u4220:
  6401  001D38  0E00               	movlw	0
  6402  001D3A  6E13               	movwf	?___xxtofl^0,c
  6403  001D3C  0E00               	movlw	0
  6404  001D3E  6E14               	movwf	(?___xxtofl+1)^0,c
  6405  001D40  0E00               	movlw	0
  6406  001D42  6E15               	movwf	(?___xxtofl+2)^0,c
  6407  001D44  0E00               	movlw	0
  6408  001D46  6E16               	movwf	(?___xxtofl+3)^0,c
  6409  001D48  EF37  F00F         	goto	l1030
  6410  001D4C                     l4177:
  6411  001D4C  0E96               	movlw	150
  6412  001D4E  6E1C               	movwf	___xxtofl@exp^0,c
  6413  001D50  EFB0  F00E         	goto	l4181
  6414  001D54                     l4179:
  6415  001D54  2A1C               	incf	___xxtofl@exp^0,f,c
  6416  001D56  90D8               	bcf	status,0,c
  6417  001D58  3220               	rrcf	(___xxtofl@arg+3)^0,f,c
  6418  001D5A  321F               	rrcf	(___xxtofl@arg+2)^0,f,c
  6419  001D5C  321E               	rrcf	(___xxtofl@arg+1)^0,f,c
  6420  001D5E  321D               	rrcf	___xxtofl@arg^0,f,c
  6421  001D60                     l4181:
  6422  001D60  0E00               	movlw	0
  6423  001D62  141D               	andwf	___xxtofl@arg^0,w,c
  6424  001D64  6E17               	movwf	??___xxtofl^0,c
  6425  001D66  0E00               	movlw	0
  6426  001D68  141E               	andwf	(___xxtofl@arg+1)^0,w,c
  6427  001D6A  6E18               	movwf	(??___xxtofl+1)^0,c
  6428  001D6C  0E00               	movlw	0
  6429  001D6E  141F               	andwf	(___xxtofl@arg+2)^0,w,c
  6430  001D70  6E19               	movwf	(??___xxtofl+2)^0,c
  6431  001D72  0EFE               	movlw	254
  6432  001D74  1420               	andwf	(___xxtofl@arg+3)^0,w,c
  6433  001D76  6E1A               	movwf	(??___xxtofl+3)^0,c
  6434  001D78  5017               	movf	??___xxtofl^0,w,c
  6435  001D7A  1018               	iorwf	(??___xxtofl+1)^0,w,c
  6436  001D7C  1019               	iorwf	(??___xxtofl+2)^0,w,c
  6437  001D7E  101A               	iorwf	(??___xxtofl+3)^0,w,c
  6438  001D80  A4D8               	btfss	status,2,c
  6439  001D82  EFC5  F00E         	goto	u4231
  6440  001D86  EFC7  F00E         	goto	u4230
  6441  001D8A                     u4231:
  6442  001D8A  EFAA  F00E         	goto	l4179
  6443  001D8E                     u4230:
  6444  001D8E  EFD5  F00E         	goto	l1034
  6445  001D92                     l4183:
  6446  001D92  2A1C               	incf	___xxtofl@exp^0,f,c
  6447  001D94  0E01               	movlw	1
  6448  001D96  261D               	addwf	___xxtofl@arg^0,f,c
  6449  001D98  0E00               	movlw	0
  6450  001D9A  221E               	addwfc	(___xxtofl@arg+1)^0,f,c
  6451  001D9C  221F               	addwfc	(___xxtofl@arg+2)^0,f,c
  6452  001D9E  2220               	addwfc	(___xxtofl@arg+3)^0,f,c
  6453  001DA0  90D8               	bcf	status,0,c
  6454  001DA2  3220               	rrcf	(___xxtofl@arg+3)^0,f,c
  6455  001DA4  321F               	rrcf	(___xxtofl@arg+2)^0,f,c
  6456  001DA6  321E               	rrcf	(___xxtofl@arg+1)^0,f,c
  6457  001DA8  321D               	rrcf	___xxtofl@arg^0,f,c
  6458  001DAA                     l1034:
  6459  001DAA  0E00               	movlw	0
  6460  001DAC  141D               	andwf	___xxtofl@arg^0,w,c
  6461  001DAE  6E17               	movwf	??___xxtofl^0,c
  6462  001DB0  0E00               	movlw	0
  6463  001DB2  141E               	andwf	(___xxtofl@arg+1)^0,w,c
  6464  001DB4  6E18               	movwf	(??___xxtofl+1)^0,c
  6465  001DB6  0E00               	movlw	0
  6466  001DB8  141F               	andwf	(___xxtofl@arg+2)^0,w,c
  6467  001DBA  6E19               	movwf	(??___xxtofl+2)^0,c
  6468  001DBC  0EFF               	movlw	255
  6469  001DBE  1420               	andwf	(___xxtofl@arg+3)^0,w,c
  6470  001DC0  6E1A               	movwf	(??___xxtofl+3)^0,c
  6471  001DC2  5017               	movf	??___xxtofl^0,w,c
  6472  001DC4  1018               	iorwf	(??___xxtofl+1)^0,w,c
  6473  001DC6  1019               	iorwf	(??___xxtofl+2)^0,w,c
  6474  001DC8  101A               	iorwf	(??___xxtofl+3)^0,w,c
  6475  001DCA  A4D8               	btfss	status,2,c
  6476  001DCC  EFEA  F00E         	goto	u4241
  6477  001DD0  EFEC  F00E         	goto	u4240
  6478  001DD4                     u4241:
  6479  001DD4  EFC9  F00E         	goto	l4183
  6480  001DD8                     u4240:
  6481  001DD8  EFF4  F00E         	goto	l4191
  6482  001DDC                     l4189:
  6483  001DDC  061C               	decf	___xxtofl@exp^0,f,c
  6484  001DDE  90D8               	bcf	status,0,c
  6485  001DE0  361D               	rlcf	___xxtofl@arg^0,f,c
  6486  001DE2  361E               	rlcf	(___xxtofl@arg+1)^0,f,c
  6487  001DE4  361F               	rlcf	(___xxtofl@arg+2)^0,f,c
  6488  001DE6  3620               	rlcf	(___xxtofl@arg+3)^0,f,c
  6489  001DE8                     l4191:
  6490  001DE8  BE1F               	btfsc	(___xxtofl@arg+2)^0,7,c
  6491  001DEA  EFF9  F00E         	goto	u4251
  6492  001DEE  EFFB  F00E         	goto	u4250
  6493  001DF2                     u4251:
  6494  001DF2  EF03  F00F         	goto	l1041
  6495  001DF6                     u4250:
  6496  001DF6  0E02               	movlw	2
  6497  001DF8  601C               	cpfslt	___xxtofl@exp^0,c
  6498  001DFA  EF01  F00F         	goto	u4261
  6499  001DFE  EF03  F00F         	goto	u4260
  6500  001E02                     u4261:
  6501  001E02  EFEE  F00E         	goto	l4189
  6502  001E06                     u4260:
  6503  001E06                     l1041:
  6504  001E06  B01C               	btfsc	___xxtofl@exp^0,0,c
  6505  001E08  EF08  F00F         	goto	u4271
  6506  001E0C  EF0A  F00F         	goto	u4270
  6507  001E10                     u4271:
  6508  001E10  EF0B  F00F         	goto	l4197
  6509  001E14                     u4270:
  6510  001E14  9E1F               	bcf	(___xxtofl@arg+2)^0,7,c
  6511  001E16                     l4197:
  6512  001E16  90D8               	bcf	status,0,c
  6513  001E18  321C               	rrcf	___xxtofl@exp^0,f,c
  6514  001E1A  C01C  F017         	movff	___xxtofl@exp,??___xxtofl
  6515  001E1E  6A18               	clrf	(??___xxtofl+1)^0,c
  6516  001E20  6A19               	clrf	(??___xxtofl+2)^0,c
  6517  001E22  6A1A               	clrf	(??___xxtofl+3)^0,c
  6518  001E24  C017  F01A         	movff	??___xxtofl,??___xxtofl+3
  6519  001E28  6A19               	clrf	(??___xxtofl+2)^0,c
  6520  001E2A  6A18               	clrf	(??___xxtofl+1)^0,c
  6521  001E2C  6A17               	clrf	??___xxtofl^0,c
  6522  001E2E  5017               	movf	??___xxtofl^0,w,c
  6523  001E30  121D               	iorwf	___xxtofl@arg^0,f,c
  6524  001E32  5018               	movf	(??___xxtofl+1)^0,w,c
  6525  001E34  121E               	iorwf	(___xxtofl@arg+1)^0,f,c
  6526  001E36  5019               	movf	(??___xxtofl+2)^0,w,c
  6527  001E38  121F               	iorwf	(___xxtofl@arg+2)^0,f,c
  6528  001E3A  501A               	movf	(??___xxtofl+3)^0,w,c
  6529  001E3C  1220               	iorwf	(___xxtofl@arg+3)^0,f,c
  6530  001E3E  501B               	movf	___xxtofl@sign^0,w,c
  6531  001E40  B4D8               	btfsc	status,2,c
  6532  001E42  EF25  F00F         	goto	u4281
  6533  001E46  EF27  F00F         	goto	u4280
  6534  001E4A                     u4281:
  6535  001E4A  EF2F  F00F         	goto	l4207
  6536  001E4E                     u4280:
  6537  001E4E  BE16               	btfsc	(___xxtofl@val+3)^0,7,c
  6538  001E50  EF2E  F00F         	goto	u4290
  6539  001E54  EF2C  F00F         	goto	u4291
  6540  001E58                     u4291:
  6541  001E58  EF2F  F00F         	goto	l4207
  6542  001E5C                     u4290:
  6543  001E5C  8E20               	bsf	(___xxtofl@arg+3)^0,7,c
  6544  001E5E                     l4207:
  6545  001E5E  C01D  F013         	movff	___xxtofl@arg,?___xxtofl
  6546  001E62  C01E  F014         	movff	___xxtofl@arg+1,?___xxtofl+1
  6547  001E66  C01F  F015         	movff	___xxtofl@arg+2,?___xxtofl+2
  6548  001E6A  C020  F016         	movff	___xxtofl@arg+3,?___xxtofl+3
  6549  001E6E                     l1030:
  6550  001E6E  0012               	return		;funcret
  6551  001E70                     __end_of___xxtofl:
  6552                           	opt callstack 0
  6553                           
  6554 ;; *************** function ___flmul *****************
  6555 ;; Defined at:
  6556 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  6557 ;; Parameters:    Size  Location     Type
  6558 ;;  b               4   32[COMRAM] unsigned char 
  6559 ;;  a               4   36[COMRAM] unsigned char 
  6560 ;; Auto vars:     Size  Location     Type
  6561 ;;  prod            4   51[COMRAM] struct .
  6562 ;;  grs             4   46[COMRAM] unsigned long 
  6563 ;;  temp            2   55[COMRAM] struct .
  6564 ;;  bexp            1   50[COMRAM] unsigned char 
  6565 ;;  aexp            1   45[COMRAM] unsigned char 
  6566 ;;  sign            1   44[COMRAM] unsigned char 
  6567 ;; Return value:  Size  Location     Type
  6568 ;;                  4   32[COMRAM] unsigned char 
  6569 ;; Registers used:
  6570 ;;		wreg, status,2, status,0, prodl, prodh
  6571 ;; Tracked objects:
  6572 ;;		On entry : 0/0
  6573 ;;		On exit  : 0/0
  6574 ;;		Unchanged: 0/0
  6575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6576 ;;      Params:         8       0       0       0
  6577 ;;      Locals:        13       0       0       0
  6578 ;;      Temps:          4       0       0       0
  6579 ;;      Totals:        25       0       0       0
  6580 ;;Total ram usage:       25 bytes
  6581 ;; Hardware stack levels used:    1
  6582 ;; Hardware stack levels required when called:    4
  6583 ;; This function calls:
  6584 ;;		Nothing
  6585 ;; This function is called by:
  6586 ;;		_readAD_AN
  6587 ;;		_setPID
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           
  6591                           	psect	text31
  6592  000CDA                     __ptext31:
  6593                           	opt callstack 0
  6594  000CDA                     ___flmul:
  6595                           	opt callstack 23
  6596  000CDA  5024               	movf	(___flmul@b+3)^0,w,c
  6597  000CDC  0B80               	andlw	128
  6598  000CDE  6E2D               	movwf	___flmul@sign^0,c
  6599  000CE0  5024               	movf	(___flmul@b+3)^0,w,c
  6600  000CE2  2424               	addwf	(___flmul@b+3)^0,w,c
  6601  000CE4  6E33               	movwf	___flmul@bexp^0,c
  6602  000CE6  AE23               	btfss	(___flmul@b+2)^0,7,c
  6603  000CE8  EF78  F006         	goto	u4011
  6604  000CEC  EF7A  F006         	goto	u4010
  6605  000CF0                     u4011:
  6606  000CF0  EF7B  F006         	goto	l4041
  6607  000CF4                     u4010:
  6608  000CF4  8033               	bsf	___flmul@bexp^0,0,c
  6609  000CF6                     l4041:
  6610  000CF6  5033               	movf	___flmul@bexp^0,w,c
  6611  000CF8  B4D8               	btfsc	status,2,c
  6612  000CFA  EF81  F006         	goto	u4021
  6613  000CFE  EF83  F006         	goto	u4020
  6614  000D02                     u4021:
  6615  000D02  EF96  F006         	goto	l4049
  6616  000D06                     u4020:
  6617  000D06  2833               	incf	___flmul@bexp^0,w,c
  6618  000D08  A4D8               	btfss	status,2,c
  6619  000D0A  EF89  F006         	goto	u4031
  6620  000D0E  EF8B  F006         	goto	u4030
  6621  000D12                     u4031:
  6622  000D12  EF93  F006         	goto	l4047
  6623  000D16                     u4030:
  6624  000D16  0E00               	movlw	0
  6625  000D18  6E21               	movwf	___flmul@b^0,c
  6626  000D1A  0E00               	movlw	0
  6627  000D1C  6E22               	movwf	(___flmul@b+1)^0,c
  6628  000D1E  0E00               	movlw	0
  6629  000D20  6E23               	movwf	(___flmul@b+2)^0,c
  6630  000D22  0E00               	movlw	0
  6631  000D24  6E24               	movwf	(___flmul@b+3)^0,c
  6632  000D26                     l4047:
  6633  000D26  8E23               	bsf	(___flmul@b+2)^0,7,c
  6634  000D28  EF9E  F006         	goto	l4051
  6635  000D2C                     l4049:
  6636  000D2C  0E00               	movlw	0
  6637  000D2E  6E21               	movwf	___flmul@b^0,c
  6638  000D30  0E00               	movlw	0
  6639  000D32  6E22               	movwf	(___flmul@b+1)^0,c
  6640  000D34  0E00               	movlw	0
  6641  000D36  6E23               	movwf	(___flmul@b+2)^0,c
  6642  000D38  0E00               	movlw	0
  6643  000D3A  6E24               	movwf	(___flmul@b+3)^0,c
  6644  000D3C                     l4051:
  6645  000D3C  5028               	movf	(___flmul@a+3)^0,w,c
  6646  000D3E  0B80               	andlw	128
  6647  000D40  1A2D               	xorwf	___flmul@sign^0,f,c
  6648  000D42  5028               	movf	(___flmul@a+3)^0,w,c
  6649  000D44  2428               	addwf	(___flmul@a+3)^0,w,c
  6650  000D46  6E2E               	movwf	___flmul@aexp^0,c
  6651  000D48  AE27               	btfss	(___flmul@a+2)^0,7,c
  6652  000D4A  EFA9  F006         	goto	u4041
  6653  000D4E  EFAB  F006         	goto	u4040
  6654  000D52                     u4041:
  6655  000D52  EFAC  F006         	goto	l4059
  6656  000D56                     u4040:
  6657  000D56  802E               	bsf	___flmul@aexp^0,0,c
  6658  000D58                     l4059:
  6659  000D58  502E               	movf	___flmul@aexp^0,w,c
  6660  000D5A  B4D8               	btfsc	status,2,c
  6661  000D5C  EFB2  F006         	goto	u4051
  6662  000D60  EFB4  F006         	goto	u4050
  6663  000D64                     u4051:
  6664  000D64  EFC7  F006         	goto	l4067
  6665  000D68                     u4050:
  6666  000D68  282E               	incf	___flmul@aexp^0,w,c
  6667  000D6A  A4D8               	btfss	status,2,c
  6668  000D6C  EFBA  F006         	goto	u4061
  6669  000D70  EFBC  F006         	goto	u4060
  6670  000D74                     u4061:
  6671  000D74  EFC4  F006         	goto	l4065
  6672  000D78                     u4060:
  6673  000D78  0E00               	movlw	0
  6674  000D7A  6E25               	movwf	___flmul@a^0,c
  6675  000D7C  0E00               	movlw	0
  6676  000D7E  6E26               	movwf	(___flmul@a+1)^0,c
  6677  000D80  0E00               	movlw	0
  6678  000D82  6E27               	movwf	(___flmul@a+2)^0,c
  6679  000D84  0E00               	movlw	0
  6680  000D86  6E28               	movwf	(___flmul@a+3)^0,c
  6681  000D88                     l4065:
  6682  000D88  8E27               	bsf	(___flmul@a+2)^0,7,c
  6683  000D8A  EFCF  F006         	goto	l986
  6684  000D8E                     l4067:
  6685  000D8E  0E00               	movlw	0
  6686  000D90  6E25               	movwf	___flmul@a^0,c
  6687  000D92  0E00               	movlw	0
  6688  000D94  6E26               	movwf	(___flmul@a+1)^0,c
  6689  000D96  0E00               	movlw	0
  6690  000D98  6E27               	movwf	(___flmul@a+2)^0,c
  6691  000D9A  0E00               	movlw	0
  6692  000D9C  6E28               	movwf	(___flmul@a+3)^0,c
  6693  000D9E                     l986:
  6694  000D9E  502E               	movf	___flmul@aexp^0,w,c
  6695  000DA0  B4D8               	btfsc	status,2,c
  6696  000DA2  EFD5  F006         	goto	u4071
  6697  000DA6  EFD7  F006         	goto	u4070
  6698  000DAA                     u4071:
  6699  000DAA  EFDF  F006         	goto	l4071
  6700  000DAE                     u4070:
  6701  000DAE  5033               	movf	___flmul@bexp^0,w,c
  6702  000DB0  A4D8               	btfss	status,2,c
  6703  000DB2  EFDD  F006         	goto	u4081
  6704  000DB6  EFDF  F006         	goto	u4080
  6705  000DBA                     u4081:
  6706  000DBA  EFE9  F006         	goto	l4075
  6707  000DBE                     u4080:
  6708  000DBE                     l4071:
  6709  000DBE  0E00               	movlw	0
  6710  000DC0  6E21               	movwf	?___flmul^0,c
  6711  000DC2  0E00               	movlw	0
  6712  000DC4  6E22               	movwf	(?___flmul+1)^0,c
  6713  000DC6  0E00               	movlw	0
  6714  000DC8  6E23               	movwf	(?___flmul+2)^0,c
  6715  000DCA  0E00               	movlw	0
  6716  000DCC  6E24               	movwf	(?___flmul+3)^0,c
  6717  000DCE  EF81  F008         	goto	l990
  6718  000DD2                     l4075:
  6719  000DD2  5027               	movf	(___flmul@a+2)^0,w,c
  6720  000DD4  0221               	mulwf	___flmul@b^0,c
  6721  000DD6  CFF3 F038          	movff	prodl,___flmul@temp
  6722  000DDA  CFF4 F039          	movff	prodh,___flmul@temp+1
  6723  000DDE  5038               	movf	___flmul@temp^0,w,c
  6724  000DE0  6E2F               	movwf	___flmul@grs^0,c
  6725  000DE2  6A30               	clrf	(___flmul@grs+1)^0,c
  6726  000DE4  6A31               	clrf	(___flmul@grs+2)^0,c
  6727  000DE6  6A32               	clrf	(___flmul@grs+3)^0,c
  6728  000DE8  5039               	movf	(___flmul@temp+1)^0,w,c
  6729  000DEA  6E34               	movwf	___flmul@prod^0,c
  6730  000DEC  6A35               	clrf	(___flmul@prod+1)^0,c
  6731  000DEE  6A36               	clrf	(___flmul@prod+2)^0,c
  6732  000DF0  6A37               	clrf	(___flmul@prod+3)^0,c
  6733  000DF2  5026               	movf	(___flmul@a+1)^0,w,c
  6734  000DF4  0222               	mulwf	(___flmul@b+1)^0,c
  6735  000DF6  CFF3 F038          	movff	prodl,___flmul@temp
  6736  000DFA  CFF4 F039          	movff	prodh,___flmul@temp+1
  6737  000DFE  5038               	movf	___flmul@temp^0,w,c
  6738  000E00  262F               	addwf	___flmul@grs^0,f,c
  6739  000E02  0E00               	movlw	0
  6740  000E04  2230               	addwfc	(___flmul@grs+1)^0,f,c
  6741  000E06  2231               	addwfc	(___flmul@grs+2)^0,f,c
  6742  000E08  2232               	addwfc	(___flmul@grs+3)^0,f,c
  6743  000E0A  5039               	movf	(___flmul@temp+1)^0,w,c
  6744  000E0C  2634               	addwf	___flmul@prod^0,f,c
  6745  000E0E  0E00               	movlw	0
  6746  000E10  2235               	addwfc	(___flmul@prod+1)^0,f,c
  6747  000E12  2236               	addwfc	(___flmul@prod+2)^0,f,c
  6748  000E14  2237               	addwfc	(___flmul@prod+3)^0,f,c
  6749  000E16  5025               	movf	___flmul@a^0,w,c
  6750  000E18  0223               	mulwf	(___flmul@b+2)^0,c
  6751  000E1A  CFF3 F038          	movff	prodl,___flmul@temp
  6752  000E1E  CFF4 F039          	movff	prodh,___flmul@temp+1
  6753  000E22  5038               	movf	___flmul@temp^0,w,c
  6754  000E24  262F               	addwf	___flmul@grs^0,f,c
  6755  000E26  0E00               	movlw	0
  6756  000E28  2230               	addwfc	(___flmul@grs+1)^0,f,c
  6757  000E2A  2231               	addwfc	(___flmul@grs+2)^0,f,c
  6758  000E2C  2232               	addwfc	(___flmul@grs+3)^0,f,c
  6759  000E2E  5039               	movf	(___flmul@temp+1)^0,w,c
  6760  000E30  2634               	addwf	___flmul@prod^0,f,c
  6761  000E32  0E00               	movlw	0
  6762  000E34  2235               	addwfc	(___flmul@prod+1)^0,f,c
  6763  000E36  2236               	addwfc	(___flmul@prod+2)^0,f,c
  6764  000E38  2237               	addwfc	(___flmul@prod+3)^0,f,c
  6765  000E3A  C031  F032         	movff	___flmul@grs+2,___flmul@grs+3
  6766  000E3E  C030  F031         	movff	___flmul@grs+1,___flmul@grs+2
  6767  000E42  C02F  F030         	movff	___flmul@grs,___flmul@grs+1
  6768  000E46  6A2F               	clrf	___flmul@grs^0,c
  6769  000E48  5025               	movf	___flmul@a^0,w,c
  6770  000E4A  0222               	mulwf	(___flmul@b+1)^0,c
  6771  000E4C  CFF3 F038          	movff	prodl,___flmul@temp
  6772  000E50  CFF4 F039          	movff	prodh,___flmul@temp+1
  6773  000E54  5038               	movf	___flmul@temp^0,w,c
  6774  000E56  262F               	addwf	___flmul@grs^0,f,c
  6775  000E58  5039               	movf	(___flmul@temp+1)^0,w,c
  6776  000E5A  2230               	addwfc	(___flmul@grs+1)^0,f,c
  6777  000E5C  0E00               	movlw	0
  6778  000E5E  2231               	addwfc	(___flmul@grs+2)^0,f,c
  6779  000E60  0E00               	movlw	0
  6780  000E62  2232               	addwfc	(___flmul@grs+3)^0,f,c
  6781  000E64  5026               	movf	(___flmul@a+1)^0,w,c
  6782  000E66  0221               	mulwf	___flmul@b^0,c
  6783  000E68  CFF3 F038          	movff	prodl,___flmul@temp
  6784  000E6C  CFF4 F039          	movff	prodh,___flmul@temp+1
  6785  000E70  5038               	movf	___flmul@temp^0,w,c
  6786  000E72  262F               	addwf	___flmul@grs^0,f,c
  6787  000E74  5039               	movf	(___flmul@temp+1)^0,w,c
  6788  000E76  2230               	addwfc	(___flmul@grs+1)^0,f,c
  6789  000E78  0E00               	movlw	0
  6790  000E7A  2231               	addwfc	(___flmul@grs+2)^0,f,c
  6791  000E7C  0E00               	movlw	0
  6792  000E7E  2232               	addwfc	(___flmul@grs+3)^0,f,c
  6793  000E80  C031  F032         	movff	___flmul@grs+2,___flmul@grs+3
  6794  000E84  C030  F031         	movff	___flmul@grs+1,___flmul@grs+2
  6795  000E88  C02F  F030         	movff	___flmul@grs,___flmul@grs+1
  6796  000E8C  6A2F               	clrf	___flmul@grs^0,c
  6797  000E8E  5025               	movf	___flmul@a^0,w,c
  6798  000E90  0221               	mulwf	___flmul@b^0,c
  6799  000E92  CFF3 F038          	movff	prodl,___flmul@temp
  6800  000E96  CFF4 F039          	movff	prodh,___flmul@temp+1
  6801  000E9A  5038               	movf	___flmul@temp^0,w,c
  6802  000E9C  262F               	addwf	___flmul@grs^0,f,c
  6803  000E9E  5039               	movf	(___flmul@temp+1)^0,w,c
  6804  000EA0  2230               	addwfc	(___flmul@grs+1)^0,f,c
  6805  000EA2  0E00               	movlw	0
  6806  000EA4  2231               	addwfc	(___flmul@grs+2)^0,f,c
  6807  000EA6  0E00               	movlw	0
  6808  000EA8  2232               	addwfc	(___flmul@grs+3)^0,f,c
  6809  000EAA  5027               	movf	(___flmul@a+2)^0,w,c
  6810  000EAC  0222               	mulwf	(___flmul@b+1)^0,c
  6811  000EAE  CFF3 F038          	movff	prodl,___flmul@temp
  6812  000EB2  CFF4 F039          	movff	prodh,___flmul@temp+1
  6813  000EB6  5038               	movf	___flmul@temp^0,w,c
  6814  000EB8  2634               	addwf	___flmul@prod^0,f,c
  6815  000EBA  5039               	movf	(___flmul@temp+1)^0,w,c
  6816  000EBC  2235               	addwfc	(___flmul@prod+1)^0,f,c
  6817  000EBE  0E00               	movlw	0
  6818  000EC0  2236               	addwfc	(___flmul@prod+2)^0,f,c
  6819  000EC2  0E00               	movlw	0
  6820  000EC4  2237               	addwfc	(___flmul@prod+3)^0,f,c
  6821  000EC6  5026               	movf	(___flmul@a+1)^0,w,c
  6822  000EC8  0223               	mulwf	(___flmul@b+2)^0,c
  6823  000ECA  CFF3 F038          	movff	prodl,___flmul@temp
  6824  000ECE  CFF4 F039          	movff	prodh,___flmul@temp+1
  6825  000ED2  5038               	movf	___flmul@temp^0,w,c
  6826  000ED4  2634               	addwf	___flmul@prod^0,f,c
  6827  000ED6  5039               	movf	(___flmul@temp+1)^0,w,c
  6828  000ED8  2235               	addwfc	(___flmul@prod+1)^0,f,c
  6829  000EDA  0E00               	movlw	0
  6830  000EDC  2236               	addwfc	(___flmul@prod+2)^0,f,c
  6831  000EDE  0E00               	movlw	0
  6832  000EE0  2237               	addwfc	(___flmul@prod+3)^0,f,c
  6833  000EE2  5027               	movf	(___flmul@a+2)^0,w,c
  6834  000EE4  0223               	mulwf	(___flmul@b+2)^0,c
  6835  000EE6  CFF3 F038          	movff	prodl,___flmul@temp
  6836  000EEA  CFF4 F039          	movff	prodh,___flmul@temp+1
  6837  000EEE  5038               	movf	___flmul@temp^0,w,c
  6838  000EF0  6E29               	movwf	??___flmul^0,c
  6839  000EF2  5039               	movf	(___flmul@temp+1)^0,w,c
  6840  000EF4  6E2A               	movwf	(??___flmul+1)^0,c
  6841  000EF6  6A2B               	clrf	(??___flmul+2)^0,c
  6842  000EF8  6A2C               	clrf	(??___flmul+3)^0,c
  6843  000EFA  C02B  F02C         	movff	??___flmul+2,??___flmul+3
  6844  000EFE  C02A  F02B         	movff	??___flmul+1,??___flmul+2
  6845  000F02  C029  F02A         	movff	??___flmul,??___flmul+1
  6846  000F06  6A29               	clrf	??___flmul^0,c
  6847  000F08  5029               	movf	??___flmul^0,w,c
  6848  000F0A  2634               	addwf	___flmul@prod^0,f,c
  6849  000F0C  502A               	movf	(??___flmul+1)^0,w,c
  6850  000F0E  2235               	addwfc	(___flmul@prod+1)^0,f,c
  6851  000F10  502B               	movf	(??___flmul+2)^0,w,c
  6852  000F12  2236               	addwfc	(___flmul@prod+2)^0,f,c
  6853  000F14  502C               	movf	(??___flmul+3)^0,w,c
  6854  000F16  2237               	addwfc	(___flmul@prod+3)^0,f,c
  6855  000F18  C02F  F029         	movff	___flmul@grs,??___flmul
  6856  000F1C  C030  F02A         	movff	___flmul@grs+1,??___flmul+1
  6857  000F20  C031  F02B         	movff	___flmul@grs+2,??___flmul+2
  6858  000F24  C032  F02C         	movff	___flmul@grs+3,??___flmul+3
  6859  000F28  0E19               	movlw	25
  6860  000F2A  EF9C  F007         	goto	u4090
  6861  000F2E                     u4095:
  6862  000F2E  90D8               	bcf	status,0,c
  6863  000F30  322C               	rrcf	(??___flmul+3)^0,f,c
  6864  000F32  322B               	rrcf	(??___flmul+2)^0,f,c
  6865  000F34  322A               	rrcf	(??___flmul+1)^0,f,c
  6866  000F36  3229               	rrcf	??___flmul^0,f,c
  6867  000F38                     u4090:
  6868  000F38  2EE8               	decfsz	wreg,f,c
  6869  000F3A  EF97  F007         	goto	u4095
  6870  000F3E  5029               	movf	??___flmul^0,w,c
  6871  000F40  2634               	addwf	___flmul@prod^0,f,c
  6872  000F42  502A               	movf	(??___flmul+1)^0,w,c
  6873  000F44  2235               	addwfc	(___flmul@prod+1)^0,f,c
  6874  000F46  502B               	movf	(??___flmul+2)^0,w,c
  6875  000F48  2236               	addwfc	(___flmul@prod+2)^0,f,c
  6876  000F4A  502C               	movf	(??___flmul+3)^0,w,c
  6877  000F4C  2237               	addwfc	(___flmul@prod+3)^0,f,c
  6878  000F4E  C031  F032         	movff	___flmul@grs+2,___flmul@grs+3
  6879  000F52  C030  F031         	movff	___flmul@grs+1,___flmul@grs+2
  6880  000F56  C02F  F030         	movff	___flmul@grs,___flmul@grs+1
  6881  000F5A  6A2F               	clrf	___flmul@grs^0,c
  6882  000F5C  502E               	movf	___flmul@aexp^0,w,c
  6883  000F5E  C033  F029         	movff	___flmul@bexp,??___flmul
  6884  000F62  6A2A               	clrf	(??___flmul+1)^0,c
  6885  000F64  2629               	addwf	??___flmul^0,f,c
  6886  000F66  0E00               	movlw	0
  6887  000F68  222A               	addwfc	(??___flmul+1)^0,f,c
  6888  000F6A  0E82               	movlw	130
  6889  000F6C  2429               	addwf	??___flmul^0,w,c
  6890  000F6E  6E38               	movwf	___flmul@temp^0,c
  6891  000F70  0EFF               	movlw	255
  6892  000F72  202A               	addwfc	(??___flmul+1)^0,w,c
  6893  000F74  6E39               	movwf	(___flmul@temp+1)^0,c
  6894  000F76  EFD2  F007         	goto	l4123
  6895  000F7A                     l4117:
  6896  000F7A  90D8               	bcf	status,0,c
  6897  000F7C  3634               	rlcf	___flmul@prod^0,f,c
  6898  000F7E  3635               	rlcf	(___flmul@prod+1)^0,f,c
  6899  000F80  3636               	rlcf	(___flmul@prod+2)^0,f,c
  6900  000F82  3637               	rlcf	(___flmul@prod+3)^0,f,c
  6901  000F84  AE32               	btfss	(___flmul@grs+3)^0,7,c
  6902  000F86  EFC7  F007         	goto	u4101
  6903  000F8A  EFC9  F007         	goto	u4100
  6904  000F8E                     u4101:
  6905  000F8E  EFCA  F007         	goto	l993
  6906  000F92                     u4100:
  6907  000F92  8034               	bsf	___flmul@prod^0,0,c
  6908  000F94                     l993:
  6909  000F94  90D8               	bcf	status,0,c
  6910  000F96  362F               	rlcf	___flmul@grs^0,f,c
  6911  000F98  3630               	rlcf	(___flmul@grs+1)^0,f,c
  6912  000F9A  3631               	rlcf	(___flmul@grs+2)^0,f,c
  6913  000F9C  3632               	rlcf	(___flmul@grs+3)^0,f,c
  6914  000F9E  0638               	decf	___flmul@temp^0,f,c
  6915  000FA0  A0D8               	btfss	status,0,c
  6916  000FA2  0639               	decf	(___flmul@temp+1)^0,f,c
  6917  000FA4                     l4123:
  6918  000FA4  AE36               	btfss	(___flmul@prod+2)^0,7,c
  6919  000FA6  EFD7  F007         	goto	u4111
  6920  000FAA  EFD9  F007         	goto	u4110
  6921  000FAE                     u4111:
  6922  000FAE  EFBD  F007         	goto	l4117
  6923  000FB2                     u4110:
  6924  000FB2  0E00               	movlw	0
  6925  000FB4  6E2E               	movwf	___flmul@aexp^0,c
  6926  000FB6  AE32               	btfss	(___flmul@grs+3)^0,7,c
  6927  000FB8  EFE0  F007         	goto	u4121
  6928  000FBC  EFE2  F007         	goto	u4120
  6929  000FC0                     u4121:
  6930  000FC0  EF06  F008         	goto	l995
  6931  000FC4                     u4120:
  6932  000FC4  0EFF               	movlw	255
  6933  000FC6  142F               	andwf	___flmul@grs^0,w,c
  6934  000FC8  6E29               	movwf	??___flmul^0,c
  6935  000FCA  0EFF               	movlw	255
  6936  000FCC  1430               	andwf	(___flmul@grs+1)^0,w,c
  6937  000FCE  6E2A               	movwf	(??___flmul+1)^0,c
  6938  000FD0  0EFF               	movlw	255
  6939  000FD2  1431               	andwf	(___flmul@grs+2)^0,w,c
  6940  000FD4  6E2B               	movwf	(??___flmul+2)^0,c
  6941  000FD6  0E7F               	movlw	127
  6942  000FD8  1432               	andwf	(___flmul@grs+3)^0,w,c
  6943  000FDA  6E2C               	movwf	(??___flmul+3)^0,c
  6944  000FDC  5029               	movf	??___flmul^0,w,c
  6945  000FDE  102A               	iorwf	(??___flmul+1)^0,w,c
  6946  000FE0  102B               	iorwf	(??___flmul+2)^0,w,c
  6947  000FE2  102C               	iorwf	(??___flmul+3)^0,w,c
  6948  000FE4  B4D8               	btfsc	status,2,c
  6949  000FE6  EFF7  F007         	goto	u4131
  6950  000FEA  EFF9  F007         	goto	u4130
  6951  000FEE                     u4131:
  6952  000FEE  EFFD  F007         	goto	l996
  6953  000FF2                     u4130:
  6954  000FF2                     l4131:
  6955  000FF2  0E01               	movlw	1
  6956  000FF4  6E2E               	movwf	___flmul@aexp^0,c
  6957  000FF6  EF06  F008         	goto	l995
  6958  000FFA                     l996:
  6959  000FFA  A034               	btfss	___flmul@prod^0,0,c
  6960  000FFC  EF02  F008         	goto	u4141
  6961  001000  EF04  F008         	goto	u4140
  6962  001004                     u4141:
  6963  001004  EF06  F008         	goto	l995
  6964  001008                     u4140:
  6965  001008  EFF9  F007         	goto	l4131
  6966  00100C                     l995:
  6967  00100C  502E               	movf	___flmul@aexp^0,w,c
  6968  00100E  B4D8               	btfsc	status,2,c
  6969  001010  EF0C  F008         	goto	u4151
  6970  001014  EF0E  F008         	goto	u4150
  6971  001018                     u4151:
  6972  001018  EF32  F008         	goto	l4143
  6973  00101C                     u4150:
  6974  00101C  0E01               	movlw	1
  6975  00101E  2634               	addwf	___flmul@prod^0,f,c
  6976  001020  0E00               	movlw	0
  6977  001022  2235               	addwfc	(___flmul@prod+1)^0,f,c
  6978  001024  2236               	addwfc	(___flmul@prod+2)^0,f,c
  6979  001026  2237               	addwfc	(___flmul@prod+3)^0,f,c
  6980  001028  A037               	btfss	(___flmul@prod+3)^0,0,c
  6981  00102A  EF19  F008         	goto	u4161
  6982  00102E  EF1B  F008         	goto	u4160
  6983  001032                     u4161:
  6984  001032  EF32  F008         	goto	l4143
  6985  001036                     u4160:
  6986  001036  C034  F029         	movff	___flmul@prod,??___flmul
  6987  00103A  C035  F02A         	movff	___flmul@prod+1,??___flmul+1
  6988  00103E  C036  F02B         	movff	___flmul@prod+2,??___flmul+2
  6989  001042  C037  F02C         	movff	___flmul@prod+3,??___flmul+3
  6990  001046  342C               	rlcf	(??___flmul+3)^0,w,c
  6991  001048  322C               	rrcf	(??___flmul+3)^0,f,c
  6992  00104A  322B               	rrcf	(??___flmul+2)^0,f,c
  6993  00104C  322A               	rrcf	(??___flmul+1)^0,f,c
  6994  00104E  3229               	rrcf	??___flmul^0,f,c
  6995  001050  C029  F034         	movff	??___flmul,___flmul@prod
  6996  001054  C02A  F035         	movff	??___flmul+1,___flmul@prod+1
  6997  001058  C02B  F036         	movff	??___flmul+2,___flmul@prod+2
  6998  00105C  C02C  F037         	movff	??___flmul+3,___flmul@prod+3
  6999  001060  4A38               	infsnz	___flmul@temp^0,f,c
  7000  001062  2A39               	incf	(___flmul@temp+1)^0,f,c
  7001  001064                     l4143:
  7002  001064  BE39               	btfsc	(___flmul@temp+1)^0,7,c
  7003  001066  EF3D  F008         	goto	u4171
  7004  00106A  5039               	movf	(___flmul@temp+1)^0,w,c
  7005  00106C  E108               	bnz	u4170
  7006  00106E  2838               	incf	___flmul@temp^0,w,c
  7007  001070  A0D8               	btfss	status,0,c
  7008  001072  EF3D  F008         	goto	u4171
  7009  001076  EF3F  F008         	goto	u4170
  7010  00107A                     u4171:
  7011  00107A  EF49  F008         	goto	l4147
  7012  00107E                     u4170:
  7013  00107E  0E00               	movlw	0
  7014  001080  6E34               	movwf	___flmul@prod^0,c
  7015  001082  0E00               	movlw	0
  7016  001084  6E35               	movwf	(___flmul@prod+1)^0,c
  7017  001086  0E80               	movlw	128
  7018  001088  6E36               	movwf	(___flmul@prod+2)^0,c
  7019  00108A  0E7F               	movlw	127
  7020  00108C  6E37               	movwf	(___flmul@prod+3)^0,c
  7021  00108E  EF77  F008         	goto	l4159
  7022  001092                     l4147:
  7023  001092  BE39               	btfsc	(___flmul@temp+1)^0,7,c
  7024  001094  EF56  F008         	goto	u4180
  7025  001098  5039               	movf	(___flmul@temp+1)^0,w,c
  7026  00109A  E106               	bnz	u4181
  7027  00109C  0438               	decf	___flmul@temp^0,w,c
  7028  00109E  B0D8               	btfsc	status,0,c
  7029  0010A0  EF54  F008         	goto	u4181
  7030  0010A4  EF56  F008         	goto	u4180
  7031  0010A8                     u4181:
  7032  0010A8  EF62  F008         	goto	l1003
  7033  0010AC                     u4180:
  7034  0010AC  0E00               	movlw	0
  7035  0010AE  6E34               	movwf	___flmul@prod^0,c
  7036  0010B0  0E00               	movlw	0
  7037  0010B2  6E35               	movwf	(___flmul@prod+1)^0,c
  7038  0010B4  0E00               	movlw	0
  7039  0010B6  6E36               	movwf	(___flmul@prod+2)^0,c
  7040  0010B8  0E00               	movlw	0
  7041  0010BA  6E37               	movwf	(___flmul@prod+3)^0,c
  7042  0010BC  0E00               	movlw	0
  7043  0010BE  6E2D               	movwf	___flmul@sign^0,c
  7044  0010C0  EF77  F008         	goto	l4159
  7045  0010C4                     l1003:
  7046  0010C4  C038  F033         	movff	___flmul@temp,___flmul@bexp
  7047  0010C8  0EFF               	movlw	255
  7048  0010CA  1634               	andwf	___flmul@prod^0,f,c
  7049  0010CC  0EFF               	movlw	255
  7050  0010CE  1635               	andwf	(___flmul@prod+1)^0,f,c
  7051  0010D0  0E7F               	movlw	127
  7052  0010D2  1636               	andwf	(___flmul@prod+2)^0,f,c
  7053  0010D4  0E00               	movlw	0
  7054  0010D6  1637               	andwf	(___flmul@prod+3)^0,f,c
  7055  0010D8  A033               	btfss	___flmul@bexp^0,0,c
  7056  0010DA  EF71  F008         	goto	u4191
  7057  0010DE  EF73  F008         	goto	u4190
  7058  0010E2                     u4191:
  7059  0010E2  EF74  F008         	goto	l4157
  7060  0010E6                     u4190:
  7061  0010E6  8E36               	bsf	(___flmul@prod+2)^0,7,c
  7062  0010E8                     l4157:
  7063  0010E8  90D8               	bcf	status,0,c
  7064  0010EA  3033               	rrcf	___flmul@bexp^0,w,c
  7065  0010EC  6E37               	movwf	(___flmul@prod+3)^0,c
  7066  0010EE                     l4159:
  7067  0010EE  502D               	movf	___flmul@sign^0,w,c
  7068  0010F0  1237               	iorwf	(___flmul@prod+3)^0,f,c
  7069  0010F2  C034  F021         	movff	___flmul@prod,?___flmul
  7070  0010F6  C035  F022         	movff	___flmul@prod+1,?___flmul+1
  7071  0010FA  C036  F023         	movff	___flmul@prod+2,?___flmul+2
  7072  0010FE  C037  F024         	movff	___flmul@prod+3,?___flmul+3
  7073  001102                     l990:
  7074  001102  0012               	return		;funcret
  7075  001104                     __end_of___flmul:
  7076                           	opt callstack 0
  7077                           
  7078 ;; *************** function _bitExtract *****************
  7079 ;; Defined at:
  7080 ;;		line 72 in file "./geral.h"
  7081 ;; Parameters:    Size  Location     Type
  7082 ;;  numero          2   18[COMRAM] int 
  7083 ;;  k               2   20[COMRAM] int 
  7084 ;;  p               2   22[COMRAM] int 
  7085 ;; Auto vars:     Size  Location     Type
  7086 ;;		None
  7087 ;; Return value:  Size  Location     Type
  7088 ;;                  2   18[COMRAM] int 
  7089 ;; Registers used:
  7090 ;;		wreg, status,2, status,0
  7091 ;; Tracked objects:
  7092 ;;		On entry : 0/0
  7093 ;;		On exit  : 0/0
  7094 ;;		Unchanged: 0/0
  7095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7096 ;;      Params:         6       0       0       0
  7097 ;;      Locals:         0       0       0       0
  7098 ;;      Temps:          8       0       0       0
  7099 ;;      Totals:        14       0       0       0
  7100 ;;Total ram usage:       14 bytes
  7101 ;; Hardware stack levels used:    1
  7102 ;; Hardware stack levels required when called:    4
  7103 ;; This function calls:
  7104 ;;		Nothing
  7105 ;; This function is called by:
  7106 ;;		_getAD_AN
  7107 ;;		_getAD_ANbit
  7108 ;;		_testeLampadas
  7109 ;; This function uses a non-reentrant model
  7110 ;;
  7111                           
  7112                           	psect	text32
  7113  002EF8                     __ptext32:
  7114                           	opt callstack 0
  7115  002EF8                     _bitExtract:
  7116                           	opt callstack 25
  7117  002EF8                     
  7118                           ;./geral.h: 73:         _delay((unsigned long)((20)*(20000000/4000.0)));
  7119  002EF8  C017  F019         	movff	bitExtract@p,??_bitExtract
  7120  002EFC  C013  F01A         	movff	bitExtract@numero,??_bitExtract+1
  7121  002F00  C014  F01B         	movff	bitExtract@numero+1,??_bitExtract+2
  7122  002F04  2A19               	incf	??_bitExtract^0,f,c
  7123  002F06  EF88  F017         	goto	u4314
  7124  002F0A                     u4315:
  7125  002F0A  341B               	rlcf	(??_bitExtract+2)^0,w,c
  7126  002F0C  321B               	rrcf	(??_bitExtract+2)^0,f,c
  7127  002F0E  321A               	rrcf	(??_bitExtract+1)^0,f,c
  7128  002F10                     u4314:
  7129  002F10  2E19               	decfsz	??_bitExtract^0,f,c
  7130  002F12  EF85  F017         	goto	u4315
  7131  002F16  0EFF               	movlw	255
  7132  002F18  6E1C               	movwf	(??_bitExtract+3)^0,c
  7133  002F1A  0EFF               	movlw	255
  7134  002F1C  6E1D               	movwf	(??_bitExtract+4)^0,c
  7135  002F1E  C015  F01E         	movff	bitExtract@k,??_bitExtract+5
  7136  002F22  0E01               	movlw	1
  7137  002F24  6E1F               	movwf	(??_bitExtract+6)^0,c
  7138  002F26  0E00               	movlw	0
  7139  002F28  6E20               	movwf	(??_bitExtract+7)^0,c
  7140  002F2A  2A1E               	incf	(??_bitExtract+5)^0,f,c
  7141  002F2C  EF9B  F017         	goto	u4324
  7142  002F30                     u4325:
  7143  002F30  90D8               	bcf	status,0,c
  7144  002F32  361F               	rlcf	(??_bitExtract+6)^0,f,c
  7145  002F34  3620               	rlcf	(??_bitExtract+7)^0,f,c
  7146  002F36                     u4324:
  7147  002F36  2E1E               	decfsz	(??_bitExtract+5)^0,f,c
  7148  002F38  EF98  F017         	goto	u4325
  7149  002F3C  501C               	movf	(??_bitExtract+3)^0,w,c
  7150  002F3E  261F               	addwf	(??_bitExtract+6)^0,f,c
  7151  002F40  501D               	movf	(??_bitExtract+4)^0,w,c
  7152  002F42  2220               	addwfc	(??_bitExtract+7)^0,f,c
  7153  002F44  501A               	movf	(??_bitExtract+1)^0,w,c
  7154  002F46  141F               	andwf	(??_bitExtract+6)^0,w,c
  7155  002F48  6E13               	movwf	?_bitExtract^0,c
  7156  002F4A  501B               	movf	(??_bitExtract+2)^0,w,c
  7157  002F4C  1420               	andwf	(??_bitExtract+7)^0,w,c
  7158  002F4E  6E14               	movwf	(?_bitExtract+1)^0,c
  7159  002F50  0012               	return		;funcret
  7160  002F52                     __end_of_bitExtract:
  7161                           	opt callstack 0
  7162                           
  7163 ;; *************** function ___fltol *****************
  7164 ;; Defined at:
  7165 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  7166 ;; Parameters:    Size  Location     Type
  7167 ;;  f1              4   45[BANK0 ] int 
  7168 ;; Auto vars:     Size  Location     Type
  7169 ;;  exp1            1   62[COMRAM] unsigned char 
  7170 ;;  sign1           1   61[COMRAM] unsigned char 
  7171 ;; Return value:  Size  Location     Type
  7172 ;;                  4   45[BANK0 ] long 
  7173 ;; Registers used:
  7174 ;;		wreg, status,2, status,0
  7175 ;; Tracked objects:
  7176 ;;		On entry : 0/0
  7177 ;;		On exit  : 0/0
  7178 ;;		Unchanged: 0/0
  7179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7180 ;;      Params:         0       4       0       0
  7181 ;;      Locals:         2       0       0       0
  7182 ;;      Temps:          0       4       0       0
  7183 ;;      Totals:         2       8       0       0
  7184 ;;Total ram usage:       10 bytes
  7185 ;; Hardware stack levels used:    1
  7186 ;; Hardware stack levels required when called:    4
  7187 ;; This function calls:
  7188 ;;		Nothing
  7189 ;; This function is called by:
  7190 ;;		_getAD_AN
  7191 ;;		_moverMotor
  7192 ;; This function uses a non-reentrant model
  7193 ;;
  7194                           
  7195                           	psect	text33
  7196  002396                     __ptext33:
  7197                           	opt callstack 0
  7198  002396                     ___fltol:
  7199                           	opt callstack 24
  7200  002396  0100               	movlb	0	; () banked
  7201  002398  358F               	rlcf	(___fltol@f1+2)& (0+255),w,b
  7202  00239A  3590               	rlcf	(___fltol@f1+3)& (0+255),w,b
  7203  00239C  6E3F               	movwf	___fltol@exp1^0,c
  7204  00239E  503F               	movf	___fltol@exp1^0,w,c
  7205  0023A0  A4D8               	btfss	status,2,c
  7206  0023A2  EFD5  F011         	goto	u2411
  7207  0023A6  EFD7  F011         	goto	u2410
  7208  0023AA                     u2411:
  7209  0023AA  EFE1  F011         	goto	l2779
  7210  0023AE                     u2410:
  7211  0023AE                     l2775:
  7212                           
  7213                           ; BSR set to: 0
  7214  0023AE  0E00               	movlw	0
  7215  0023B0  6F8D               	movwf	?___fltol& (0+255),b
  7216  0023B2  0E00               	movlw	0
  7217  0023B4  6F8E               	movwf	(?___fltol+1)& (0+255),b
  7218  0023B6  0E00               	movlw	0
  7219  0023B8  6F8F               	movwf	(?___fltol+2)& (0+255),b
  7220  0023BA  0E00               	movlw	0
  7221  0023BC  6F90               	movwf	(?___fltol+3)& (0+255),b
  7222  0023BE  EF4E  F012         	goto	l669
  7223  0023C2                     l2779:
  7224                           
  7225                           ; BSR set to: 0
  7226  0023C2  C08D  F091         	movff	___fltol@f1,??___fltol
  7227  0023C6  C08E  F092         	movff	___fltol@f1+1,??___fltol+1
  7228  0023CA  C08F  F093         	movff	___fltol@f1+2,??___fltol+2
  7229  0023CE  C090  F094         	movff	___fltol@f1+3,??___fltol+3
  7230  0023D2  0E20               	movlw	32
  7231  0023D4  EFF1  F011         	goto	u2420
  7232  0023D8                     u2425:
  7233  0023D8  90D8               	bcf	status,0,c
  7234  0023DA  3394               	rrcf	(??___fltol+3)& (0+255),f,b
  7235  0023DC  3393               	rrcf	(??___fltol+2)& (0+255),f,b
  7236  0023DE  3392               	rrcf	(??___fltol+1)& (0+255),f,b
  7237  0023E0  3391               	rrcf	??___fltol& (0+255),f,b
  7238  0023E2                     u2420:
  7239  0023E2  2EE8               	decfsz	wreg,f,c
  7240  0023E4  EFEC  F011         	goto	u2425
  7241  0023E8  5191               	movf	??___fltol& (0+255),w,b
  7242  0023EA  6E3E               	movwf	___fltol@sign1^0,c
  7243  0023EC                     
  7244                           ; BSR set to: 0
  7245  0023EC  8F8F               	bsf	(___fltol@f1+2)& (0+255),7,b
  7246  0023EE                     
  7247                           ; BSR set to: 0
  7248  0023EE  0EFF               	movlw	255
  7249  0023F0  178D               	andwf	___fltol@f1& (0+255),f,b
  7250  0023F2  0EFF               	movlw	255
  7251  0023F4  178E               	andwf	(___fltol@f1+1)& (0+255),f,b
  7252  0023F6  0EFF               	movlw	255
  7253  0023F8  178F               	andwf	(___fltol@f1+2)& (0+255),f,b
  7254  0023FA  0E00               	movlw	0
  7255  0023FC  1790               	andwf	(___fltol@f1+3)& (0+255),f,b
  7256  0023FE                     
  7257                           ; BSR set to: 0
  7258  0023FE  0E96               	movlw	150
  7259  002400  5E3F               	subwf	___fltol@exp1^0,f,c
  7260  002402                     
  7261                           ; BSR set to: 0
  7262  002402  BE3F               	btfsc	___fltol@exp1^0,7,c
  7263  002404  EF08  F012         	goto	u2430
  7264  002408  EF06  F012         	goto	u2431
  7265  00240C                     u2431:
  7266  00240C  EF1E  F012         	goto	l2799
  7267  002410                     u2430:
  7268  002410                     
  7269                           ; BSR set to: 0
  7270  002410  503F               	movf	___fltol@exp1^0,w,c
  7271  002412  0A80               	xorlw	128
  7272  002414  0F97               	addlw	151
  7273  002416  B0D8               	btfsc	status,0,c
  7274  002418  EF10  F012         	goto	u2441
  7275  00241C  EF12  F012         	goto	u2440
  7276  002420                     u2441:
  7277  002420  EF14  F012         	goto	l2795
  7278  002424                     u2440:
  7279  002424  EFD7  F011         	goto	l2775
  7280  002428                     l2795:
  7281                           
  7282                           ; BSR set to: 0
  7283  002428  90D8               	bcf	status,0,c
  7284  00242A  3390               	rrcf	(___fltol@f1+3)& (0+255),f,b
  7285  00242C  338F               	rrcf	(___fltol@f1+2)& (0+255),f,b
  7286  00242E  338E               	rrcf	(___fltol@f1+1)& (0+255),f,b
  7287  002430  338D               	rrcf	___fltol@f1& (0+255),f,b
  7288  002432                     
  7289                           ; BSR set to: 0
  7290  002432  3E3F               	incfsz	___fltol@exp1^0,f,c
  7291  002434  EF14  F012         	goto	l2795
  7292  002438  EF36  F012         	goto	l2809
  7293  00243C                     l2799:
  7294                           
  7295                           ; BSR set to: 0
  7296  00243C  0E1F               	movlw	31
  7297  00243E  643F               	cpfsgt	___fltol@exp1^0,c
  7298  002440  EF24  F012         	goto	u2451
  7299  002444  EF26  F012         	goto	u2450
  7300  002448                     u2451:
  7301  002448  EF2E  F012         	goto	l2807
  7302  00244C                     u2450:
  7303  00244C  EFD7  F011         	goto	l2775
  7304  002450                     l2805:
  7305                           
  7306                           ; BSR set to: 0
  7307  002450  90D8               	bcf	status,0,c
  7308  002452  378D               	rlcf	___fltol@f1& (0+255),f,b
  7309  002454  378E               	rlcf	(___fltol@f1+1)& (0+255),f,b
  7310  002456  378F               	rlcf	(___fltol@f1+2)& (0+255),f,b
  7311  002458  3790               	rlcf	(___fltol@f1+3)& (0+255),f,b
  7312  00245A  063F               	decf	___fltol@exp1^0,f,c
  7313  00245C                     l2807:
  7314                           
  7315                           ; BSR set to: 0
  7316  00245C  503F               	movf	___fltol@exp1^0,w,c
  7317  00245E  A4D8               	btfss	status,2,c
  7318  002460  EF34  F012         	goto	u2461
  7319  002464  EF36  F012         	goto	u2460
  7320  002468                     u2461:
  7321  002468  EF28  F012         	goto	l2805
  7322  00246C                     u2460:
  7323  00246C                     l2809:
  7324                           
  7325                           ; BSR set to: 0
  7326  00246C  503E               	movf	___fltol@sign1^0,w,c
  7327  00246E  B4D8               	btfsc	status,2,c
  7328  002470  EF3C  F012         	goto	u2471
  7329  002474  EF3E  F012         	goto	u2470
  7330  002478                     u2471:
  7331  002478  EF46  F012         	goto	l2813
  7332  00247C                     u2470:
  7333  00247C                     
  7334                           ; BSR set to: 0
  7335  00247C  1F90               	comf	(___fltol@f1+3)& (0+255),f,b
  7336  00247E  1F8F               	comf	(___fltol@f1+2)& (0+255),f,b
  7337  002480  1F8E               	comf	(___fltol@f1+1)& (0+255),f,b
  7338  002482  6D8D               	negf	___fltol@f1& (0+255),b
  7339  002484  0E00               	movlw	0
  7340  002486  238E               	addwfc	(___fltol@f1+1)& (0+255),f,b
  7341  002488  238F               	addwfc	(___fltol@f1+2)& (0+255),f,b
  7342  00248A  2390               	addwfc	(___fltol@f1+3)& (0+255),f,b
  7343  00248C                     l2813:
  7344                           
  7345                           ; BSR set to: 0
  7346  00248C  C08D  F08D         	movff	___fltol@f1,?___fltol
  7347  002490  C08E  F08E         	movff	___fltol@f1+1,?___fltol+1
  7348  002494  C08F  F08F         	movff	___fltol@f1+2,?___fltol+2
  7349  002498  C090  F090         	movff	___fltol@f1+3,?___fltol+3
  7350  00249C                     l669:
  7351                           
  7352                           ; BSR set to: 0
  7353  00249C  0012               	return		;funcret
  7354  00249E                     __end_of___fltol:
  7355                           	opt callstack 0
  7356                           
  7357 ;; *************** function ___flge *****************
  7358 ;; Defined at:
  7359 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  7360 ;; Parameters:    Size  Location     Type
  7361 ;;  ff1             4   18[COMRAM] long 
  7362 ;;  ff2             4   22[COMRAM] long 
  7363 ;; Auto vars:     Size  Location     Type
  7364 ;;		None
  7365 ;; Return value:  Size  Location     Type
  7366 ;;		None               void
  7367 ;; Registers used:
  7368 ;;		wreg, status,2, status,0
  7369 ;; Tracked objects:
  7370 ;;		On entry : 0/0
  7371 ;;		On exit  : 0/0
  7372 ;;		Unchanged: 0/0
  7373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7374 ;;      Params:         8       0       0       0
  7375 ;;      Locals:         0       0       0       0
  7376 ;;      Temps:          4       0       0       0
  7377 ;;      Totals:        12       0       0       0
  7378 ;;Total ram usage:       12 bytes
  7379 ;; Hardware stack levels used:    1
  7380 ;; Hardware stack levels required when called:    4
  7381 ;; This function calls:
  7382 ;;		Nothing
  7383 ;; This function is called by:
  7384 ;;		_configDA
  7385 ;; This function uses a non-reentrant model
  7386 ;;
  7387                           
  7388                           	psect	text34
  7389  00249E                     __ptext34:
  7390                           	opt callstack 0
  7391  00249E                     ___flge:
  7392                           	opt callstack 24
  7393  00249E  0E00               	movlw	0
  7394  0024A0  1413               	andwf	___flge@ff1^0,w,c
  7395  0024A2  6E1B               	movwf	??___flge^0,c
  7396  0024A4  0E00               	movlw	0
  7397  0024A6  1414               	andwf	(___flge@ff1+1)^0,w,c
  7398  0024A8  6E1C               	movwf	(??___flge+1)^0,c
  7399  0024AA  0E80               	movlw	128
  7400  0024AC  1415               	andwf	(___flge@ff1+2)^0,w,c
  7401  0024AE  6E1D               	movwf	(??___flge+2)^0,c
  7402  0024B0  0E7F               	movlw	127
  7403  0024B2  1416               	andwf	(___flge@ff1+3)^0,w,c
  7404  0024B4  6E1E               	movwf	(??___flge+3)^0,c
  7405  0024B6  501B               	movf	??___flge^0,w,c
  7406  0024B8  101C               	iorwf	(??___flge+1)^0,w,c
  7407  0024BA  101D               	iorwf	(??___flge+2)^0,w,c
  7408  0024BC  101E               	iorwf	(??___flge+3)^0,w,c
  7409  0024BE  A4D8               	btfss	status,2,c
  7410  0024C0  EF64  F012         	goto	u3301
  7411  0024C4  EF66  F012         	goto	u3300
  7412  0024C8                     u3301:
  7413  0024C8  EF6E  F012         	goto	l3307
  7414  0024CC                     u3300:
  7415  0024CC  0E00               	movlw	0
  7416  0024CE  6E13               	movwf	___flge@ff1^0,c
  7417  0024D0  0E00               	movlw	0
  7418  0024D2  6E14               	movwf	(___flge@ff1+1)^0,c
  7419  0024D4  0E00               	movlw	0
  7420  0024D6  6E15               	movwf	(___flge@ff1+2)^0,c
  7421  0024D8  0E00               	movlw	0
  7422  0024DA  6E16               	movwf	(___flge@ff1+3)^0,c
  7423  0024DC                     l3307:
  7424  0024DC  0E00               	movlw	0
  7425  0024DE  1417               	andwf	___flge@ff2^0,w,c
  7426  0024E0  6E1B               	movwf	??___flge^0,c
  7427  0024E2  0E00               	movlw	0
  7428  0024E4  1418               	andwf	(___flge@ff2+1)^0,w,c
  7429  0024E6  6E1C               	movwf	(??___flge+1)^0,c
  7430  0024E8  0E80               	movlw	128
  7431  0024EA  1419               	andwf	(___flge@ff2+2)^0,w,c
  7432  0024EC  6E1D               	movwf	(??___flge+2)^0,c
  7433  0024EE  0E7F               	movlw	127
  7434  0024F0  141A               	andwf	(___flge@ff2+3)^0,w,c
  7435  0024F2  6E1E               	movwf	(??___flge+3)^0,c
  7436  0024F4  501B               	movf	??___flge^0,w,c
  7437  0024F6  101C               	iorwf	(??___flge+1)^0,w,c
  7438  0024F8  101D               	iorwf	(??___flge+2)^0,w,c
  7439  0024FA  101E               	iorwf	(??___flge+3)^0,w,c
  7440  0024FC  A4D8               	btfss	status,2,c
  7441  0024FE  EF83  F012         	goto	u3311
  7442  002502  EF85  F012         	goto	u3310
  7443  002506                     u3311:
  7444  002506  EF8D  F012         	goto	l3311
  7445  00250A                     u3310:
  7446  00250A  0E00               	movlw	0
  7447  00250C  6E17               	movwf	___flge@ff2^0,c
  7448  00250E  0E00               	movlw	0
  7449  002510  6E18               	movwf	(___flge@ff2+1)^0,c
  7450  002512  0E00               	movlw	0
  7451  002514  6E19               	movwf	(___flge@ff2+2)^0,c
  7452  002516  0E00               	movlw	0
  7453  002518  6E1A               	movwf	(___flge@ff2+3)^0,c
  7454  00251A                     l3311:
  7455  00251A  AE16               	btfss	(___flge@ff1+3)^0,7,c
  7456  00251C  EF92  F012         	goto	u3321
  7457  002520  EF94  F012         	goto	u3320
  7458  002524                     u3321:
  7459  002524  EF9D  F012         	goto	l3315
  7460  002528                     u3320:
  7461  002528  6C13               	negf	___flge@ff1^0,c
  7462  00252A  1E14               	comf	(___flge@ff1+1)^0,f,c
  7463  00252C  B0D8               	btfsc	status,0,c
  7464  00252E  2A14               	incf	(___flge@ff1+1)^0,f,c
  7465  002530  1E15               	comf	(___flge@ff1+2)^0,f,c
  7466  002532  B0D8               	btfsc	status,0,c
  7467  002534  2A15               	incf	(___flge@ff1+2)^0,f,c
  7468  002536  0E80               	movlw	128
  7469  002538  5616               	subfwb	(___flge@ff1+3)^0,f,c
  7470  00253A                     l3315:
  7471  00253A  AE1A               	btfss	(___flge@ff2+3)^0,7,c
  7472  00253C  EFA2  F012         	goto	u3331
  7473  002540  EFA4  F012         	goto	u3330
  7474  002544                     u3331:
  7475  002544  EFAD  F012         	goto	l637
  7476  002548                     u3330:
  7477  002548  6C17               	negf	___flge@ff2^0,c
  7478  00254A  1E18               	comf	(___flge@ff2+1)^0,f,c
  7479  00254C  B0D8               	btfsc	status,0,c
  7480  00254E  2A18               	incf	(___flge@ff2+1)^0,f,c
  7481  002550  1E19               	comf	(___flge@ff2+2)^0,f,c
  7482  002552  B0D8               	btfsc	status,0,c
  7483  002554  2A19               	incf	(___flge@ff2+2)^0,f,c
  7484  002556  0E80               	movlw	128
  7485  002558  561A               	subfwb	(___flge@ff2+3)^0,f,c
  7486  00255A                     l637:
  7487  00255A  0E00               	movlw	0
  7488  00255C  1A13               	xorwf	___flge@ff1^0,f,c
  7489  00255E  0E00               	movlw	0
  7490  002560  1A14               	xorwf	(___flge@ff1+1)^0,f,c
  7491  002562  0E00               	movlw	0
  7492  002564  1A15               	xorwf	(___flge@ff1+2)^0,f,c
  7493  002566  0E80               	movlw	128
  7494  002568  1A16               	xorwf	(___flge@ff1+3)^0,f,c
  7495  00256A  0E00               	movlw	0
  7496  00256C  1A17               	xorwf	___flge@ff2^0,f,c
  7497  00256E  0E00               	movlw	0
  7498  002570  1A18               	xorwf	(___flge@ff2+1)^0,f,c
  7499  002572  0E00               	movlw	0
  7500  002574  1A19               	xorwf	(___flge@ff2+2)^0,f,c
  7501  002576  0E80               	movlw	128
  7502  002578  1A1A               	xorwf	(___flge@ff2+3)^0,f,c
  7503  00257A  5017               	movf	___flge@ff2^0,w,c
  7504  00257C  5C13               	subwf	___flge@ff1^0,w,c
  7505  00257E  5018               	movf	(___flge@ff2+1)^0,w,c
  7506  002580  5814               	subwfb	(___flge@ff1+1)^0,w,c
  7507  002582  5019               	movf	(___flge@ff2+2)^0,w,c
  7508  002584  5815               	subwfb	(___flge@ff1+2)^0,w,c
  7509  002586  501A               	movf	(___flge@ff2+3)^0,w,c
  7510  002588  5816               	subwfb	(___flge@ff1+3)^0,w,c
  7511  00258A  B0D8               	btfsc	status,0,c
  7512  00258C  EFCA  F012         	goto	u3341
  7513  002590  EFCC  F012         	goto	u3340
  7514  002594                     u3341:
  7515  002594  EFCF  F012         	goto	l3321
  7516  002598                     u3340:
  7517  002598  90D8               	bcf	status,0,c
  7518  00259A  EFD0  F012         	goto	l642
  7519  00259E                     l3321:
  7520  00259E  80D8               	bsf	status,0,c
  7521  0025A0                     l642:
  7522  0025A0  0012               	return		;funcret
  7523  0025A2                     __end_of___flge:
  7524                           	opt callstack 0
  7525                           
  7526 ;; *************** function ___flsub *****************
  7527 ;; Defined at:
  7528 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  7529 ;; Parameters:    Size  Location     Type
  7530 ;;  b               4   12[BANK0 ] long 
  7531 ;;  a               4   16[BANK0 ] long 
  7532 ;; Auto vars:     Size  Location     Type
  7533 ;;		None
  7534 ;; Return value:  Size  Location     Type
  7535 ;;                  4   12[BANK0 ] long 
  7536 ;; Registers used:
  7537 ;;		wreg, status,2, status,0, cstack
  7538 ;; Tracked objects:
  7539 ;;		On entry : 0/0
  7540 ;;		On exit  : 0/0
  7541 ;;		Unchanged: 0/0
  7542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7543 ;;      Params:         0       8       0       0
  7544 ;;      Locals:         0       0       0       0
  7545 ;;      Temps:          0       0       0       0
  7546 ;;      Totals:         0       8       0       0
  7547 ;;Total ram usage:        8 bytes
  7548 ;; Hardware stack levels used:    1
  7549 ;; Hardware stack levels required when called:    5
  7550 ;; This function calls:
  7551 ;;		___fladd
  7552 ;; This function is called by:
  7553 ;;		_setPID
  7554 ;; This function uses a non-reentrant model
  7555 ;;
  7556                           
  7557                           	psect	text35
  7558  002FA4                     __ptext35:
  7559                           	opt callstack 0
  7560  002FA4                     ___flsub:
  7561                           	opt callstack 24
  7562  002FA4  0E00               	movlw	0
  7563  002FA6  0100               	movlb	0	; () banked
  7564  002FA8  1B70               	xorwf	___flsub@a& (0+255),f,b
  7565  002FAA  0E00               	movlw	0
  7566  002FAC  1B71               	xorwf	(___flsub@a+1)& (0+255),f,b
  7567  002FAE  0E00               	movlw	0
  7568  002FB0  1B72               	xorwf	(___flsub@a+2)& (0+255),f,b
  7569  002FB2  0E80               	movlw	128
  7570  002FB4  1B73               	xorwf	(___flsub@a+3)& (0+255),f,b
  7571  002FB6                     
  7572                           ; BSR set to: 0
  7573  002FB6  C06C  F060         	movff	___flsub@b,___fladd@b
  7574  002FBA  C06D  F061         	movff	___flsub@b+1,___fladd@b+1
  7575  002FBE  C06E  F062         	movff	___flsub@b+2,___fladd@b+2
  7576  002FC2  C06F  F063         	movff	___flsub@b+3,___fladd@b+3
  7577  002FC6  C070  F064         	movff	___flsub@a,___fladd@a
  7578  002FCA  C071  F065         	movff	___flsub@a+1,___fladd@a+1
  7579  002FCE  C072  F066         	movff	___flsub@a+2,___fladd@a+2
  7580  002FD2  C073  F067         	movff	___flsub@a+3,___fladd@a+3
  7581  002FD6  ECD3  F001         	call	___fladd	;wreg free
  7582  002FDA  C060  F06C         	movff	?___fladd,?___flsub
  7583  002FDE  C061  F06D         	movff	?___fladd+1,?___flsub+1
  7584  002FE2  C062  F06E         	movff	?___fladd+2,?___flsub+2
  7585  002FE6  C063  F06F         	movff	?___fladd+3,?___flsub+3
  7586  002FEA  0012               	return		;funcret
  7587  002FEC                     __end_of___flsub:
  7588                           	opt callstack 0
  7589                           
  7590 ;; *************** function ___fladd *****************
  7591 ;; Defined at:
  7592 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  7593 ;; Parameters:    Size  Location     Type
  7594 ;;  b               4    0[BANK0 ] long 
  7595 ;;  a               4    4[BANK0 ] long 
  7596 ;; Auto vars:     Size  Location     Type
  7597 ;;  grs             1   11[BANK0 ] unsigned char 
  7598 ;;  bexp            1   10[BANK0 ] unsigned char 
  7599 ;;  aexp            1    9[BANK0 ] unsigned char 
  7600 ;;  signs           1    8[BANK0 ] unsigned char 
  7601 ;; Return value:  Size  Location     Type
  7602 ;;                  4    0[BANK0 ] unsigned char 
  7603 ;; Registers used:
  7604 ;;		wreg, status,2, status,0
  7605 ;; Tracked objects:
  7606 ;;		On entry : 0/0
  7607 ;;		On exit  : 0/0
  7608 ;;		Unchanged: 0/0
  7609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7610 ;;      Params:         0       8       0       0
  7611 ;;      Locals:         0       4       0       0
  7612 ;;      Temps:          4       0       0       0
  7613 ;;      Totals:         4      12       0       0
  7614 ;;Total ram usage:       16 bytes
  7615 ;; Hardware stack levels used:    1
  7616 ;; Hardware stack levels required when called:    4
  7617 ;; This function calls:
  7618 ;;		Nothing
  7619 ;; This function is called by:
  7620 ;;		_posicao
  7621 ;;		_setPID
  7622 ;;		___flsub
  7623 ;; This function uses a non-reentrant model
  7624 ;;
  7625                           
  7626                           	psect	text36
  7627  0003A6                     __ptext36:
  7628                           	opt callstack 0
  7629  0003A6                     ___fladd:
  7630                           	opt callstack 24
  7631  0003A6  0100               	movlb	0	; () banked
  7632  0003A8  5163               	movf	(___fladd@b+3)& (0+255),w,b
  7633  0003AA  0B80               	andlw	128
  7634  0003AC  6F68               	movwf	___fladd@signs& (0+255),b
  7635  0003AE  5163               	movf	(___fladd@b+3)& (0+255),w,b
  7636  0003B0  2563               	addwf	(___fladd@b+3)& (0+255),w,b
  7637  0003B2  6F6A               	movwf	___fladd@bexp& (0+255),b
  7638  0003B4                     
  7639                           ; BSR set to: 0
  7640  0003B4  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
  7641  0003B6  EFDF  F001         	goto	u4381
  7642  0003BA  EFE1  F001         	goto	u4380
  7643  0003BE                     u4381:
  7644  0003BE  EFE2  F001         	goto	l4311
  7645  0003C2                     u4380:
  7646  0003C2                     
  7647                           ; BSR set to: 0
  7648  0003C2  816A               	bsf	___fladd@bexp& (0+255),0,b
  7649  0003C4                     l4311:
  7650                           
  7651                           ; BSR set to: 0
  7652  0003C4  516A               	movf	___fladd@bexp& (0+255),w,b
  7653  0003C6  B4D8               	btfsc	status,2,c
  7654  0003C8  EFE8  F001         	goto	u4391
  7655  0003CC  EFEA  F001         	goto	u4390
  7656  0003D0                     u4391:
  7657  0003D0  EFFF  F001         	goto	l4321
  7658  0003D4                     u4390:
  7659  0003D4                     
  7660                           ; BSR set to: 0
  7661  0003D4  296A               	incf	___fladd@bexp& (0+255),w,b
  7662  0003D6  A4D8               	btfss	status,2,c
  7663  0003D8  EFF0  F001         	goto	u4401
  7664  0003DC  EFF2  F001         	goto	u4400
  7665  0003E0                     u4401:
  7666  0003E0  EFFA  F001         	goto	l4317
  7667  0003E4                     u4400:
  7668  0003E4                     
  7669                           ; BSR set to: 0
  7670  0003E4  0E00               	movlw	0
  7671  0003E6  6F60               	movwf	___fladd@b& (0+255),b
  7672  0003E8  0E00               	movlw	0
  7673  0003EA  6F61               	movwf	(___fladd@b+1)& (0+255),b
  7674  0003EC  0E00               	movlw	0
  7675  0003EE  6F62               	movwf	(___fladd@b+2)& (0+255),b
  7676  0003F0  0E00               	movlw	0
  7677  0003F2  6F63               	movwf	(___fladd@b+3)& (0+255),b
  7678  0003F4                     l4317:
  7679                           
  7680                           ; BSR set to: 0
  7681  0003F4  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  7682  0003F6                     
  7683                           ; BSR set to: 0
  7684  0003F6  0E00               	movlw	0
  7685  0003F8  6F63               	movwf	(___fladd@b+3)& (0+255),b
  7686  0003FA  EF07  F002         	goto	l4323
  7687  0003FE                     l4321:
  7688                           
  7689                           ; BSR set to: 0
  7690  0003FE  0E00               	movlw	0
  7691  000400  6F60               	movwf	___fladd@b& (0+255),b
  7692  000402  0E00               	movlw	0
  7693  000404  6F61               	movwf	(___fladd@b+1)& (0+255),b
  7694  000406  0E00               	movlw	0
  7695  000408  6F62               	movwf	(___fladd@b+2)& (0+255),b
  7696  00040A  0E00               	movlw	0
  7697  00040C  6F63               	movwf	(___fladd@b+3)& (0+255),b
  7698  00040E                     l4323:
  7699                           
  7700                           ; BSR set to: 0
  7701  00040E  5167               	movf	(___fladd@a+3)& (0+255),w,b
  7702  000410  0B80               	andlw	128
  7703  000412  6F69               	movwf	___fladd@aexp& (0+255),b
  7704  000414                     
  7705                           ; BSR set to: 0
  7706  000414  5168               	movf	___fladd@signs& (0+255),w,b
  7707  000416  1969               	xorwf	___fladd@aexp& (0+255),w,b
  7708  000418  B4D8               	btfsc	status,2,c
  7709  00041A  EF11  F002         	goto	u4411
  7710  00041E  EF13  F002         	goto	u4410
  7711  000422                     u4411:
  7712  000422  EF14  F002         	goto	l4329
  7713  000426                     u4410:
  7714  000426                     
  7715                           ; BSR set to: 0
  7716  000426  8D68               	bsf	___fladd@signs& (0+255),6,b
  7717  000428                     l4329:
  7718                           
  7719                           ; BSR set to: 0
  7720  000428  5167               	movf	(___fladd@a+3)& (0+255),w,b
  7721  00042A  2567               	addwf	(___fladd@a+3)& (0+255),w,b
  7722  00042C  6F69               	movwf	___fladd@aexp& (0+255),b
  7723  00042E                     
  7724                           ; BSR set to: 0
  7725  00042E  AF66               	btfss	(___fladd@a+2)& (0+255),7,b
  7726  000430  EF1C  F002         	goto	u4421
  7727  000434  EF1E  F002         	goto	u4420
  7728  000438                     u4421:
  7729  000438  EF1F  F002         	goto	l4335
  7730  00043C                     u4420:
  7731  00043C                     
  7732                           ; BSR set to: 0
  7733  00043C  8169               	bsf	___fladd@aexp& (0+255),0,b
  7734  00043E                     l4335:
  7735                           
  7736                           ; BSR set to: 0
  7737  00043E  5169               	movf	___fladd@aexp& (0+255),w,b
  7738  000440  B4D8               	btfsc	status,2,c
  7739  000442  EF25  F002         	goto	u4431
  7740  000446  EF27  F002         	goto	u4430
  7741  00044A                     u4431:
  7742  00044A  EF3C  F002         	goto	l4345
  7743  00044E                     u4430:
  7744  00044E                     
  7745                           ; BSR set to: 0
  7746  00044E  2969               	incf	___fladd@aexp& (0+255),w,b
  7747  000450  A4D8               	btfss	status,2,c
  7748  000452  EF2D  F002         	goto	u4441
  7749  000456  EF2F  F002         	goto	u4440
  7750  00045A                     u4441:
  7751  00045A  EF37  F002         	goto	l4341
  7752  00045E                     u4440:
  7753  00045E                     
  7754                           ; BSR set to: 0
  7755  00045E  0E00               	movlw	0
  7756  000460  6F64               	movwf	___fladd@a& (0+255),b
  7757  000462  0E00               	movlw	0
  7758  000464  6F65               	movwf	(___fladd@a+1)& (0+255),b
  7759  000466  0E00               	movlw	0
  7760  000468  6F66               	movwf	(___fladd@a+2)& (0+255),b
  7761  00046A  0E00               	movlw	0
  7762  00046C  6F67               	movwf	(___fladd@a+3)& (0+255),b
  7763  00046E                     l4341:
  7764                           
  7765                           ; BSR set to: 0
  7766  00046E  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
  7767  000470                     
  7768                           ; BSR set to: 0
  7769  000470  0E00               	movlw	0
  7770  000472  6F67               	movwf	(___fladd@a+3)& (0+255),b
  7771  000474  EF44  F002         	goto	l4347
  7772  000478                     l4345:
  7773                           
  7774                           ; BSR set to: 0
  7775  000478  0E00               	movlw	0
  7776  00047A  6F64               	movwf	___fladd@a& (0+255),b
  7777  00047C  0E00               	movlw	0
  7778  00047E  6F65               	movwf	(___fladd@a+1)& (0+255),b
  7779  000480  0E00               	movlw	0
  7780  000482  6F66               	movwf	(___fladd@a+2)& (0+255),b
  7781  000484  0E00               	movlw	0
  7782  000486  6F67               	movwf	(___fladd@a+3)& (0+255),b
  7783  000488                     l4347:
  7784                           
  7785                           ; BSR set to: 0
  7786  000488  516A               	movf	___fladd@bexp& (0+255),w,b
  7787  00048A  5D69               	subwf	___fladd@aexp& (0+255),w,b
  7788  00048C  B0D8               	btfsc	status,0,c
  7789  00048E  EF4B  F002         	goto	u4451
  7790  000492  EF4D  F002         	goto	u4450
  7791  000496                     u4451:
  7792  000496  EF74  F002         	goto	l4383
  7793  00049A                     u4450:
  7794  00049A                     
  7795                           ; BSR set to: 0
  7796  00049A  AD68               	btfss	___fladd@signs& (0+255),6,b
  7797  00049C  EF52  F002         	goto	u4461
  7798  0004A0  EF54  F002         	goto	u4460
  7799  0004A4                     u4461:
  7800  0004A4  EF56  F002         	goto	l4353
  7801  0004A8                     u4460:
  7802  0004A8                     
  7803                           ; BSR set to: 0
  7804  0004A8  0E80               	movlw	128
  7805  0004AA  1B68               	xorwf	___fladd@signs& (0+255),f,b
  7806  0004AC                     l4353:
  7807                           
  7808                           ; BSR set to: 0
  7809  0004AC  C06A  F06B         	movff	___fladd@bexp,___fladd@grs
  7810  0004B0                     
  7811                           ; BSR set to: 0
  7812  0004B0  C069  F06A         	movff	___fladd@aexp,___fladd@bexp
  7813  0004B4                     
  7814                           ; BSR set to: 0
  7815  0004B4  C06B  F069         	movff	___fladd@grs,___fladd@aexp
  7816  0004B8                     
  7817                           ; BSR set to: 0
  7818  0004B8  C060  F06B         	movff	___fladd@b,___fladd@grs
  7819  0004BC                     
  7820                           ; BSR set to: 0
  7821  0004BC  C064  F060         	movff	___fladd@a,___fladd@b
  7822  0004C0                     
  7823                           ; BSR set to: 0
  7824  0004C0  C06B  F064         	movff	___fladd@grs,___fladd@a
  7825  0004C4                     
  7826                           ; BSR set to: 0
  7827  0004C4  C061  F06B         	movff	___fladd@b+1,___fladd@grs
  7828  0004C8                     
  7829                           ; BSR set to: 0
  7830  0004C8  C065  F061         	movff	___fladd@a+1,___fladd@b+1
  7831  0004CC                     
  7832                           ; BSR set to: 0
  7833  0004CC  C06B  F065         	movff	___fladd@grs,___fladd@a+1
  7834  0004D0                     
  7835                           ; BSR set to: 0
  7836  0004D0  C062  F06B         	movff	___fladd@b+2,___fladd@grs
  7837  0004D4                     
  7838                           ; BSR set to: 0
  7839  0004D4  C066  F062         	movff	___fladd@a+2,___fladd@b+2
  7840  0004D8                     
  7841                           ; BSR set to: 0
  7842  0004D8  C06B  F066         	movff	___fladd@grs,___fladd@a+2
  7843  0004DC                     
  7844                           ; BSR set to: 0
  7845  0004DC  C063  F06B         	movff	___fladd@b+3,___fladd@grs
  7846  0004E0                     
  7847                           ; BSR set to: 0
  7848  0004E0  C067  F063         	movff	___fladd@a+3,___fladd@b+3
  7849  0004E4                     
  7850                           ; BSR set to: 0
  7851  0004E4  C06B  F067         	movff	___fladd@grs,___fladd@a+3
  7852  0004E8                     l4383:
  7853                           
  7854                           ; BSR set to: 0
  7855  0004E8  0E00               	movlw	0
  7856  0004EA  6F6B               	movwf	___fladd@grs& (0+255),b
  7857  0004EC                     
  7858                           ; BSR set to: 0
  7859  0004EC  516A               	movf	___fladd@bexp& (0+255),w,b
  7860  0004EE  C069  F03A         	movff	___fladd@aexp,??___fladd
  7861  0004F2  6A3B               	clrf	(??___fladd+1)^0,c
  7862  0004F4  5E3A               	subwf	??___fladd^0,f,c
  7863  0004F6  0E00               	movlw	0
  7864  0004F8  5A3B               	subwfb	(??___fladd+1)^0,f,c
  7865  0004FA  BE3B               	btfsc	(??___fladd+1)^0,7,c
  7866  0004FC  EF89  F002         	goto	u4471
  7867  000500  503B               	movf	(??___fladd+1)^0,w,c
  7868  000502  E109               	bnz	u4470
  7869  000504  0E1A               	movlw	26
  7870  000506  5C3A               	subwf	??___fladd^0,w,c
  7871  000508  A0D8               	btfss	status,0,c
  7872  00050A  EF89  F002         	goto	u4471
  7873  00050E  EF8B  F002         	goto	u4470
  7874  000512                     u4471:
  7875  000512  EFC2  F002         	goto	l901
  7876  000516                     u4470:
  7877  000516                     
  7878                           ; BSR set to: 0
  7879  000516  5160               	movf	___fladd@b& (0+255),w,b
  7880  000518  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  7881  00051A  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  7882  00051C  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  7883  00051E  A4D8               	btfss	status,2,c
  7884  000520  EF94  F002         	goto	u4481
  7885  000524  EF97  F002         	goto	u4480
  7886  000528                     u4481:
  7887  000528  0E01               	movlw	1
  7888  00052A  EF98  F002         	goto	u4490
  7889  00052E                     u4480:
  7890  00052E  0E00               	movlw	0
  7891  000530                     u4490:
  7892  000530  6F6B               	movwf	___fladd@grs& (0+255),b
  7893  000532                     
  7894                           ; BSR set to: 0
  7895  000532  0E00               	movlw	0
  7896  000534  6F60               	movwf	___fladd@b& (0+255),b
  7897  000536  0E00               	movlw	0
  7898  000538  6F61               	movwf	(___fladd@b+1)& (0+255),b
  7899  00053A  0E00               	movlw	0
  7900  00053C  6F62               	movwf	(___fladd@b+2)& (0+255),b
  7901  00053E  0E00               	movlw	0
  7902  000540  6F63               	movwf	(___fladd@b+3)& (0+255),b
  7903  000542                     
  7904                           ; BSR set to: 0
  7905  000542  C069  F06A         	movff	___fladd@aexp,___fladd@bexp
  7906  000546  EFCB  F002         	goto	l900
  7907  00054A                     l902:
  7908                           
  7909                           ; BSR set to: 0
  7910  00054A  A16B               	btfss	___fladd@grs& (0+255),0,b
  7911  00054C  EFAA  F002         	goto	u4501
  7912  000550  EFAC  F002         	goto	u4500
  7913  000554                     u4501:
  7914  000554  EFB2  F002         	goto	l4395
  7915  000558                     u4500:
  7916  000558                     
  7917                           ; BSR set to: 0
  7918  000558  90D8               	bcf	status,0,c
  7919  00055A  316B               	rrcf	___fladd@grs& (0+255),w,b
  7920  00055C  0901               	iorlw	1
  7921  00055E  6F6B               	movwf	___fladd@grs& (0+255),b
  7922  000560  EFB4  F002         	goto	l4397
  7923  000564                     l4395:
  7924                           
  7925                           ; BSR set to: 0
  7926  000564  90D8               	bcf	status,0,c
  7927  000566  336B               	rrcf	___fladd@grs& (0+255),f,b
  7928  000568                     l4397:
  7929                           
  7930                           ; BSR set to: 0
  7931  000568  A160               	btfss	___fladd@b& (0+255),0,b
  7932  00056A  EFB9  F002         	goto	u4511
  7933  00056E  EFBB  F002         	goto	u4510
  7934  000572                     u4511:
  7935  000572  EFBC  F002         	goto	l4401
  7936  000576                     u4510:
  7937  000576                     
  7938                           ; BSR set to: 0
  7939  000576  8F6B               	bsf	___fladd@grs& (0+255),7,b
  7940  000578                     l4401:
  7941                           
  7942                           ; BSR set to: 0
  7943  000578  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  7944  00057A  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  7945  00057C  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  7946  00057E  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  7947  000580  3360               	rrcf	___fladd@b& (0+255),f,b
  7948  000582                     
  7949                           ; BSR set to: 0
  7950  000582  2B6A               	incf	___fladd@bexp& (0+255),f,b
  7951  000584                     l901:
  7952                           
  7953                           ; BSR set to: 0
  7954  000584  5169               	movf	___fladd@aexp& (0+255),w,b
  7955  000586  5D6A               	subwf	___fladd@bexp& (0+255),w,b
  7956  000588  A0D8               	btfss	status,0,c
  7957  00058A  EFC9  F002         	goto	u4521
  7958  00058E  EFCB  F002         	goto	u4520
  7959  000592                     u4521:
  7960  000592  EFA5  F002         	goto	l902
  7961  000596                     u4520:
  7962  000596                     l900:
  7963                           
  7964                           ; BSR set to: 0
  7965  000596  BD68               	btfsc	___fladd@signs& (0+255),6,b
  7966  000598  EFD0  F002         	goto	u4531
  7967  00059C  EFD2  F002         	goto	u4530
  7968  0005A0                     u4531:
  7969  0005A0  EF12  F003         	goto	l4429
  7970  0005A4                     u4530:
  7971  0005A4                     
  7972                           ; BSR set to: 0
  7973  0005A4  516A               	movf	___fladd@bexp& (0+255),w,b
  7974  0005A6  A4D8               	btfss	status,2,c
  7975  0005A8  EFD8  F002         	goto	u4541
  7976  0005AC  EFDA  F002         	goto	u4540
  7977  0005B0                     u4541:
  7978  0005B0  EFE4  F002         	goto	l4411
  7979  0005B4                     u4540:
  7980  0005B4                     
  7981                           ; BSR set to: 0
  7982  0005B4  0E00               	movlw	0
  7983  0005B6  6F60               	movwf	?___fladd& (0+255),b
  7984  0005B8  0E00               	movlw	0
  7985  0005BA  6F61               	movwf	(?___fladd+1)& (0+255),b
  7986  0005BC  0E00               	movlw	0
  7987  0005BE  6F62               	movwf	(?___fladd+2)& (0+255),b
  7988  0005C0  0E00               	movlw	0
  7989  0005C2  6F63               	movwf	(?___fladd+3)& (0+255),b
  7990  0005C4  EF33  F004         	goto	l909
  7991  0005C8                     l4411:
  7992                           
  7993                           ; BSR set to: 0
  7994  0005C8  5164               	movf	___fladd@a& (0+255),w,b
  7995  0005CA  2760               	addwf	___fladd@b& (0+255),f,b
  7996  0005CC  5165               	movf	(___fladd@a+1)& (0+255),w,b
  7997  0005CE  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  7998  0005D0  5166               	movf	(___fladd@a+2)& (0+255),w,b
  7999  0005D2  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  8000  0005D4  5167               	movf	(___fladd@a+3)& (0+255),w,b
  8001  0005D6  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  8002  0005D8                     
  8003                           ; BSR set to: 0
  8004  0005D8  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  8005  0005DA  EFF1  F002         	goto	u4551
  8006  0005DE  EFF3  F002         	goto	u4550
  8007  0005E2                     u4551:
  8008  0005E2  EF9F  F003         	goto	l4465
  8009  0005E6                     u4550:
  8010  0005E6                     
  8011                           ; BSR set to: 0
  8012  0005E6  A16B               	btfss	___fladd@grs& (0+255),0,b
  8013  0005E8  EFF8  F002         	goto	u4561
  8014  0005EC  EFFA  F002         	goto	u4560
  8015  0005F0                     u4561:
  8016  0005F0  EF00  F003         	goto	l4419
  8017  0005F4                     u4560:
  8018  0005F4                     
  8019                           ; BSR set to: 0
  8020  0005F4  90D8               	bcf	status,0,c
  8021  0005F6  316B               	rrcf	___fladd@grs& (0+255),w,b
  8022  0005F8  0901               	iorlw	1
  8023  0005FA  6F6B               	movwf	___fladd@grs& (0+255),b
  8024  0005FC  EF02  F003         	goto	l4421
  8025  000600                     l4419:
  8026                           
  8027                           ; BSR set to: 0
  8028  000600  90D8               	bcf	status,0,c
  8029  000602  336B               	rrcf	___fladd@grs& (0+255),f,b
  8030  000604                     l4421:
  8031                           
  8032                           ; BSR set to: 0
  8033  000604  A160               	btfss	___fladd@b& (0+255),0,b
  8034  000606  EF07  F003         	goto	u4571
  8035  00060A  EF09  F003         	goto	u4570
  8036  00060E                     u4571:
  8037  00060E  EF0A  F003         	goto	l4425
  8038  000612                     u4570:
  8039  000612                     
  8040                           ; BSR set to: 0
  8041  000612  8F6B               	bsf	___fladd@grs& (0+255),7,b
  8042  000614                     l4425:
  8043                           
  8044                           ; BSR set to: 0
  8045  000614  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  8046  000616  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  8047  000618  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  8048  00061A  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  8049  00061C  3360               	rrcf	___fladd@b& (0+255),f,b
  8050  00061E                     
  8051                           ; BSR set to: 0
  8052  00061E  2B6A               	incf	___fladd@bexp& (0+255),f,b
  8053  000620  EF9F  F003         	goto	l4465
  8054  000624                     l4429:
  8055                           
  8056                           ; BSR set to: 0
  8057  000624  5164               	movf	___fladd@a& (0+255),w,b
  8058  000626  5D60               	subwf	___fladd@b& (0+255),w,b
  8059  000628  5165               	movf	(___fladd@a+1)& (0+255),w,b
  8060  00062A  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
  8061  00062C  5166               	movf	(___fladd@a+2)& (0+255),w,b
  8062  00062E  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
  8063  000630  5163               	movf	(___fladd@b+3)& (0+255),w,b
  8064  000632  0A80               	xorlw	128
  8065  000634  6E3A               	movwf	??___fladd^0,c
  8066  000636  5167               	movf	(___fladd@a+3)& (0+255),w,b
  8067  000638  0A80               	xorlw	128
  8068  00063A  583A               	subwfb	??___fladd^0,w,c
  8069  00063C  B0D8               	btfsc	status,0,c
  8070  00063E  EF23  F003         	goto	u4581
  8071  000642  EF25  F003         	goto	u4580
  8072  000646                     u4581:
  8073  000646  EF50  F003         	goto	l4439
  8074  00064A                     u4580:
  8075  00064A                     
  8076                           ; BSR set to: 0
  8077  00064A  5160               	movf	___fladd@b& (0+255),w,b
  8078  00064C  5D64               	subwf	___fladd@a& (0+255),w,b
  8079  00064E  6E3A               	movwf	??___fladd^0,c
  8080  000650  5161               	movf	(___fladd@b+1)& (0+255),w,b
  8081  000652  5965               	subwfb	(___fladd@a+1)& (0+255),w,b
  8082  000654  6E3B               	movwf	(??___fladd+1)^0,c
  8083  000656  5162               	movf	(___fladd@b+2)& (0+255),w,b
  8084  000658  5966               	subwfb	(___fladd@a+2)& (0+255),w,b
  8085  00065A  6E3C               	movwf	(??___fladd+2)^0,c
  8086  00065C  5163               	movf	(___fladd@b+3)& (0+255),w,b
  8087  00065E  5967               	subwfb	(___fladd@a+3)& (0+255),w,b
  8088  000660  6E3D               	movwf	(??___fladd+3)^0,c
  8089  000662  0EFF               	movlw	255
  8090  000664  243A               	addwf	??___fladd^0,w,c
  8091  000666  6F60               	movwf	___fladd@b& (0+255),b
  8092  000668  0EFF               	movlw	255
  8093  00066A  203B               	addwfc	(??___fladd+1)^0,w,c
  8094  00066C  6F61               	movwf	(___fladd@b+1)& (0+255),b
  8095  00066E  0EFF               	movlw	255
  8096  000670  203C               	addwfc	(??___fladd+2)^0,w,c
  8097  000672  6F62               	movwf	(___fladd@b+2)& (0+255),b
  8098  000674  0EFF               	movlw	255
  8099  000676  203D               	addwfc	(??___fladd+3)^0,w,c
  8100  000678  6F63               	movwf	(___fladd@b+3)& (0+255),b
  8101  00067A  0E80               	movlw	128
  8102  00067C  1B68               	xorwf	___fladd@signs& (0+255),f,b
  8103  00067E                     
  8104                           ; BSR set to: 0
  8105  00067E  6D6B               	negf	___fladd@grs& (0+255),b
  8106  000680                     
  8107                           ; BSR set to: 0
  8108  000680  516B               	movf	___fladd@grs& (0+255),w,b
  8109  000682  A4D8               	btfss	status,2,c
  8110  000684  EF46  F003         	goto	u4591
  8111  000688  EF48  F003         	goto	u4590
  8112  00068C                     u4591:
  8113  00068C  EF58  F003         	goto	l917
  8114  000690                     u4590:
  8115  000690                     
  8116                           ; BSR set to: 0
  8117  000690  0E01               	movlw	1
  8118  000692  2760               	addwf	___fladd@b& (0+255),f,b
  8119  000694  0E00               	movlw	0
  8120  000696  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  8121  000698  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  8122  00069A  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  8123  00069C  EF58  F003         	goto	l917
  8124  0006A0                     l4439:
  8125                           
  8126                           ; BSR set to: 0
  8127  0006A0  5164               	movf	___fladd@a& (0+255),w,b
  8128  0006A2  5F60               	subwf	___fladd@b& (0+255),f,b
  8129  0006A4  5165               	movf	(___fladd@a+1)& (0+255),w,b
  8130  0006A6  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
  8131  0006A8  5166               	movf	(___fladd@a+2)& (0+255),w,b
  8132  0006AA  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
  8133  0006AC  5167               	movf	(___fladd@a+3)& (0+255),w,b
  8134  0006AE  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
  8135  0006B0                     l917:
  8136                           
  8137                           ; BSR set to: 0
  8138  0006B0  5160               	movf	___fladd@b& (0+255),w,b
  8139  0006B2  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  8140  0006B4  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  8141  0006B6  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  8142  0006B8  A4D8               	btfss	status,2,c
  8143  0006BA  EF61  F003         	goto	u4601
  8144  0006BE  EF63  F003         	goto	u4600
  8145  0006C2                     u4601:
  8146  0006C2  EF98  F003         	goto	l4463
  8147  0006C6                     u4600:
  8148  0006C6                     
  8149                           ; BSR set to: 0
  8150  0006C6  516B               	movf	___fladd@grs& (0+255),w,b
  8151  0006C8  A4D8               	btfss	status,2,c
  8152  0006CA  EF69  F003         	goto	u4611
  8153  0006CE  EF6B  F003         	goto	u4610
  8154  0006D2                     u4611:
  8155  0006D2  EF98  F003         	goto	l4463
  8156  0006D6                     u4610:
  8157  0006D6                     
  8158                           ; BSR set to: 0
  8159  0006D6  0E00               	movlw	0
  8160  0006D8  6F60               	movwf	?___fladd& (0+255),b
  8161  0006DA  0E00               	movlw	0
  8162  0006DC  6F61               	movwf	(?___fladd+1)& (0+255),b
  8163  0006DE  0E00               	movlw	0
  8164  0006E0  6F62               	movwf	(?___fladd+2)& (0+255),b
  8165  0006E2  0E00               	movlw	0
  8166  0006E4  6F63               	movwf	(?___fladd+3)& (0+255),b
  8167  0006E6  EF33  F004         	goto	l909
  8168  0006EA                     l4447:
  8169                           
  8170                           ; BSR set to: 0
  8171  0006EA  90D8               	bcf	status,0,c
  8172  0006EC  3760               	rlcf	___fladd@b& (0+255),f,b
  8173  0006EE  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
  8174  0006F0  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
  8175  0006F2  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
  8176  0006F4                     
  8177                           ; BSR set to: 0
  8178  0006F4  AF6B               	btfss	___fladd@grs& (0+255),7,b
  8179  0006F6  EF7F  F003         	goto	u4621
  8180  0006FA  EF81  F003         	goto	u4620
  8181  0006FE                     u4621:
  8182  0006FE  EF82  F003         	goto	l4453
  8183  000702                     u4620:
  8184  000702                     
  8185                           ; BSR set to: 0
  8186  000702  8160               	bsf	___fladd@b& (0+255),0,b
  8187  000704                     l4453:
  8188                           
  8189                           ; BSR set to: 0
  8190  000704  A16B               	btfss	___fladd@grs& (0+255),0,b
  8191  000706  EF87  F003         	goto	u4631
  8192  00070A  EF89  F003         	goto	u4630
  8193  00070E                     u4631:
  8194  00070E  EF8D  F003         	goto	l4457
  8195  000712                     u4630:
  8196  000712                     
  8197                           ; BSR set to: 0
  8198  000712  80D8               	bsf	status,0,c
  8199  000714  376B               	rlcf	___fladd@grs& (0+255),f,b
  8200  000716  EF8F  F003         	goto	l4459
  8201  00071A                     l4457:
  8202                           
  8203                           ; BSR set to: 0
  8204  00071A  90D8               	bcf	status,0,c
  8205  00071C  376B               	rlcf	___fladd@grs& (0+255),f,b
  8206  00071E                     l4459:
  8207                           
  8208                           ; BSR set to: 0
  8209  00071E  516A               	movf	___fladd@bexp& (0+255),w,b
  8210  000720  B4D8               	btfsc	status,2,c
  8211  000722  EF95  F003         	goto	u4641
  8212  000726  EF97  F003         	goto	u4640
  8213  00072A                     u4641:
  8214  00072A  EF98  F003         	goto	l4463
  8215  00072E                     u4640:
  8216  00072E                     
  8217                           ; BSR set to: 0
  8218  00072E  076A               	decf	___fladd@bexp& (0+255),f,b
  8219  000730                     l4463:
  8220                           
  8221                           ; BSR set to: 0
  8222  000730  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
  8223  000732  EF9D  F003         	goto	u4651
  8224  000736  EF9F  F003         	goto	u4650
  8225  00073A                     u4651:
  8226  00073A  EF75  F003         	goto	l4447
  8227  00073E                     u4650:
  8228  00073E                     l4465:
  8229                           
  8230                           ; BSR set to: 0
  8231  00073E  0E00               	movlw	0
  8232  000740  6F69               	movwf	___fladd@aexp& (0+255),b
  8233  000742                     
  8234                           ; BSR set to: 0
  8235  000742  AF6B               	btfss	___fladd@grs& (0+255),7,b
  8236  000744  EFA6  F003         	goto	u4661
  8237  000748  EFA8  F003         	goto	u4660
  8238  00074C                     u4661:
  8239  00074C  EFC0  F003         	goto	l926
  8240  000750                     u4660:
  8241  000750                     
  8242                           ; BSR set to: 0
  8243  000750  C06B  F03A         	movff	___fladd@grs,??___fladd
  8244  000754  0E7F               	movlw	127
  8245  000756  163A               	andwf	??___fladd^0,f,c
  8246  000758  B4D8               	btfsc	status,2,c
  8247  00075A  EFB1  F003         	goto	u4671
  8248  00075E  EFB3  F003         	goto	u4670
  8249  000762                     u4671:
  8250  000762  EFB7  F003         	goto	l927
  8251  000766                     u4670:
  8252  000766                     l4471:
  8253                           
  8254                           ; BSR set to: 0
  8255  000766  0E01               	movlw	1
  8256  000768  6F69               	movwf	___fladd@aexp& (0+255),b
  8257  00076A  EFC0  F003         	goto	l926
  8258  00076E                     l927:
  8259                           
  8260                           ; BSR set to: 0
  8261  00076E  A160               	btfss	___fladd@b& (0+255),0,b
  8262  000770  EFBC  F003         	goto	u4681
  8263  000774  EFBE  F003         	goto	u4680
  8264  000778                     u4681:
  8265  000778  EFC0  F003         	goto	l926
  8266  00077C                     u4680:
  8267  00077C  EFB3  F003         	goto	l4471
  8268  000780                     l926:
  8269                           
  8270                           ; BSR set to: 0
  8271  000780  5169               	movf	___fladd@aexp& (0+255),w,b
  8272  000782  B4D8               	btfsc	status,2,c
  8273  000784  EFC6  F003         	goto	u4691
  8274  000788  EFC8  F003         	goto	u4690
  8275  00078C                     u4691:
  8276  00078C  EFF3  F003         	goto	l4483
  8277  000790                     u4690:
  8278  000790                     
  8279                           ; BSR set to: 0
  8280  000790  0E01               	movlw	1
  8281  000792  2760               	addwf	___fladd@b& (0+255),f,b
  8282  000794  0E00               	movlw	0
  8283  000796  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  8284  000798  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  8285  00079A  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  8286  00079C                     
  8287                           ; BSR set to: 0
  8288  00079C  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  8289  00079E  EFD3  F003         	goto	u4701
  8290  0007A2  EFD5  F003         	goto	u4700
  8291  0007A6                     u4701:
  8292  0007A6  EFF3  F003         	goto	l4483
  8293  0007AA                     u4700:
  8294  0007AA                     
  8295                           ; BSR set to: 0
  8296  0007AA  C060  F03A         	movff	___fladd@b,??___fladd
  8297  0007AE  C061  F03B         	movff	___fladd@b+1,??___fladd+1
  8298  0007B2  C062  F03C         	movff	___fladd@b+2,??___fladd+2
  8299  0007B6  C063  F03D         	movff	___fladd@b+3,??___fladd+3
  8300  0007BA  343D               	rlcf	(??___fladd+3)^0,w,c
  8301  0007BC  323D               	rrcf	(??___fladd+3)^0,f,c
  8302  0007BE  323C               	rrcf	(??___fladd+2)^0,f,c
  8303  0007C0  323B               	rrcf	(??___fladd+1)^0,f,c
  8304  0007C2  323A               	rrcf	??___fladd^0,f,c
  8305  0007C4  C03A  F060         	movff	??___fladd,___fladd@b
  8306  0007C8  C03B  F061         	movff	??___fladd+1,___fladd@b+1
  8307  0007CC  C03C  F062         	movff	??___fladd+2,___fladd@b+2
  8308  0007D0  C03D  F063         	movff	??___fladd+3,___fladd@b+3
  8309  0007D4  296A               	incf	___fladd@bexp& (0+255),w,b
  8310  0007D6  B4D8               	btfsc	status,2,c
  8311  0007D8  EFF0  F003         	goto	u4711
  8312  0007DC  EFF2  F003         	goto	u4710
  8313  0007E0                     u4711:
  8314  0007E0  EFF3  F003         	goto	l4483
  8315  0007E4                     u4710:
  8316  0007E4                     
  8317                           ; BSR set to: 0
  8318  0007E4  2B6A               	incf	___fladd@bexp& (0+255),f,b
  8319  0007E6                     l4483:
  8320                           
  8321                           ; BSR set to: 0
  8322  0007E6  296A               	incf	___fladd@bexp& (0+255),w,b
  8323  0007E8  B4D8               	btfsc	status,2,c
  8324  0007EA  EFF9  F003         	goto	u4721
  8325  0007EE  EFFB  F003         	goto	u4720
  8326  0007F2                     u4721:
  8327  0007F2  EF03  F004         	goto	l4487
  8328  0007F6                     u4720:
  8329  0007F6                     
  8330                           ; BSR set to: 0
  8331  0007F6  516A               	movf	___fladd@bexp& (0+255),w,b
  8332  0007F8  A4D8               	btfss	status,2,c
  8333  0007FA  EF01  F004         	goto	u4731
  8334  0007FE  EF03  F004         	goto	u4730
  8335  000802                     u4731:
  8336  000802  EF15  F004         	goto	l4491
  8337  000806                     u4730:
  8338  000806                     l4487:
  8339                           
  8340                           ; BSR set to: 0
  8341  000806  0E00               	movlw	0
  8342  000808  6F60               	movwf	___fladd@b& (0+255),b
  8343  00080A  0E00               	movlw	0
  8344  00080C  6F61               	movwf	(___fladd@b+1)& (0+255),b
  8345  00080E  0E00               	movlw	0
  8346  000810  6F62               	movwf	(___fladd@b+2)& (0+255),b
  8347  000812  0E00               	movlw	0
  8348  000814  6F63               	movwf	(___fladd@b+3)& (0+255),b
  8349  000816  516A               	movf	___fladd@bexp& (0+255),w,b
  8350  000818  A4D8               	btfss	status,2,c
  8351  00081A  EF11  F004         	goto	u4741
  8352  00081E  EF13  F004         	goto	u4740
  8353  000822                     u4741:
  8354  000822  EF15  F004         	goto	l4491
  8355  000826                     u4740:
  8356  000826                     
  8357                           ; BSR set to: 0
  8358  000826  0E00               	movlw	0
  8359  000828  6F68               	movwf	___fladd@signs& (0+255),b
  8360  00082A                     l4491:
  8361                           
  8362                           ; BSR set to: 0
  8363  00082A  A16A               	btfss	___fladd@bexp& (0+255),0,b
  8364  00082C  EF1A  F004         	goto	u4751
  8365  000830  EF1C  F004         	goto	u4750
  8366  000834                     u4751:
  8367  000834  EF1F  F004         	goto	l4495
  8368  000838                     u4750:
  8369  000838                     
  8370                           ; BSR set to: 0
  8371  000838  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  8372  00083A  EF20  F004         	goto	l4497
  8373  00083E                     l4495:
  8374                           
  8375                           ; BSR set to: 0
  8376  00083E  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
  8377  000840                     l4497:
  8378                           
  8379                           ; BSR set to: 0
  8380  000840  90D8               	bcf	status,0,c
  8381  000842  316A               	rrcf	___fladd@bexp& (0+255),w,b
  8382  000844  6F63               	movwf	(___fladd@b+3)& (0+255),b
  8383  000846                     
  8384                           ; BSR set to: 0
  8385  000846  AF68               	btfss	___fladd@signs& (0+255),7,b
  8386  000848  EF28  F004         	goto	u4761
  8387  00084C  EF2A  F004         	goto	u4760
  8388  000850                     u4761:
  8389  000850  EF2B  F004         	goto	l4503
  8390  000854                     u4760:
  8391  000854                     
  8392                           ; BSR set to: 0
  8393  000854  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
  8394  000856                     l4503:
  8395                           
  8396                           ; BSR set to: 0
  8397  000856  C060  F060         	movff	___fladd@b,?___fladd
  8398  00085A  C061  F061         	movff	___fladd@b+1,?___fladd+1
  8399  00085E  C062  F062         	movff	___fladd@b+2,?___fladd+2
  8400  000862  C063  F063         	movff	___fladd@b+3,?___fladd+3
  8401  000866                     l909:
  8402                           
  8403                           ; BSR set to: 0
  8404  000866  0012               	return		;funcret
  8405  000868                     __end_of___fladd:
  8406                           	opt callstack 0
  8407                           
  8408 ;; *************** function _initTimer0 *****************
  8409 ;; Defined at:
  8410 ;;		line 10 in file "./Timer0.h"
  8411 ;; Parameters:    Size  Location     Type
  8412 ;;  tempoInicial    2   18[COMRAM] int 
  8413 ;; Auto vars:     Size  Location     Type
  8414 ;;		None
  8415 ;; Return value:  Size  Location     Type
  8416 ;;                  1    wreg      void 
  8417 ;; Registers used:
  8418 ;;		wreg, status,2
  8419 ;; Tracked objects:
  8420 ;;		On entry : 0/0
  8421 ;;		On exit  : 0/0
  8422 ;;		Unchanged: 0/0
  8423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8424 ;;      Params:         2       0       0       0
  8425 ;;      Locals:         0       0       0       0
  8426 ;;      Temps:          0       0       0       0
  8427 ;;      Totals:         2       0       0       0
  8428 ;;Total ram usage:        2 bytes
  8429 ;; Hardware stack levels used:    1
  8430 ;; Hardware stack levels required when called:    4
  8431 ;; This function calls:
  8432 ;;		Nothing
  8433 ;; This function is called by:
  8434 ;;		_main
  8435 ;; This function uses a non-reentrant model
  8436 ;;
  8437                           
  8438                           	psect	text37
  8439  003260                     __ptext37:
  8440                           	opt callstack 0
  8441  003260                     _initTimer0:
  8442                           	opt callstack 26
  8443  003260                     
  8444                           ;./Timer0.h: 13:     T0CON = 0b11010100;
  8445  003260  0ED4               	movlw	212
  8446  003262  6ED5               	movwf	213,c	;volatile
  8447  003264                     
  8448                           ;./Timer0.h: 14:     TMR0L = tempoInicial;
  8449  003264  C013  FFD6         	movff	initTimer0@tempoInicial,4054	;volatile
  8450  003268  0012               	return		;funcret
  8451  00326A                     __end_of_initTimer0:
  8452                           	opt callstack 0
  8453                           
  8454 ;; *************** function _configUSART *****************
  8455 ;; Defined at:
  8456 ;;		line 9 in file "./bluetooth.h"
  8457 ;; Parameters:    Size  Location     Type
  8458 ;;		None
  8459 ;; Auto vars:     Size  Location     Type
  8460 ;;		None
  8461 ;; Return value:  Size  Location     Type
  8462 ;;                  1    wreg      void 
  8463 ;; Registers used:
  8464 ;;		wreg, status,2
  8465 ;; Tracked objects:
  8466 ;;		On entry : 0/0
  8467 ;;		On exit  : 0/0
  8468 ;;		Unchanged: 0/0
  8469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8470 ;;      Params:         0       0       0       0
  8471 ;;      Locals:         0       0       0       0
  8472 ;;      Temps:          0       0       0       0
  8473 ;;      Totals:         0       0       0       0
  8474 ;;Total ram usage:        0 bytes
  8475 ;; Hardware stack levels used:    1
  8476 ;; Hardware stack levels required when called:    4
  8477 ;; This function calls:
  8478 ;;		Nothing
  8479 ;; This function is called by:
  8480 ;;		_main
  8481 ;; This function uses a non-reentrant model
  8482 ;;
  8483                           
  8484                           	psect	text38
  8485  00320A                     __ptext38:
  8486                           	opt callstack 0
  8487  00320A                     _configUSART:
  8488                           	opt callstack 26
  8489  00320A                     
  8490                           ;./bluetooth.h: 10:     SPBRG = 0x81;
  8491  00320A  0E81               	movlw	129
  8492  00320C  6EAF               	movwf	175,c	;volatile
  8493  00320E                     
  8494                           ;./bluetooth.h: 22:     TXSTAbits.BRGH = 1;
  8495  00320E  84AC               	bsf	172,2,c	;volatile
  8496  003210                     
  8497                           ;./bluetooth.h: 24:     TXSTAbits.SYNC = 0;
  8498  003210  98AC               	bcf	172,4,c	;volatile
  8499  003212                     
  8500                           ;./bluetooth.h: 25:     TXSTAbits.TX9 = 0;
  8501  003212  9CAC               	bcf	172,6,c	;volatile
  8502  003214                     
  8503                           ;./bluetooth.h: 26:     TXSTAbits.TXEN = 1;
  8504  003214  8AAC               	bsf	172,5,c	;volatile
  8505  003216                     
  8506                           ;./bluetooth.h: 27:     PIE1bits.TXIE = 0;
  8507  003216  989D               	bcf	157,4,c	;volatile
  8508  003218                     
  8509                           ;./bluetooth.h: 29:     RCSTAbits.SPEN = 1;
  8510  003218  8EAB               	bsf	171,7,c	;volatile
  8511  00321A                     
  8512                           ;./bluetooth.h: 30:     RCSTAbits.RX9 = 0;
  8513  00321A  9CAB               	bcf	171,6,c	;volatile
  8514  00321C                     
  8515                           ;./bluetooth.h: 31:     RCSTAbits.CREN = 1;
  8516  00321C  88AB               	bsf	171,4,c	;volatile
  8517  00321E                     
  8518                           ;./bluetooth.h: 32:     TRISCbits.TRISC6 = 0;
  8519  00321E  9C94               	bcf	148,6,c	;volatile
  8520  003220                     
  8521                           ;./bluetooth.h: 33:     TRISCbits.TRISC7 = 1;
  8522  003220  8E94               	bsf	148,7,c	;volatile
  8523  003222                     
  8524                           ;./bluetooth.h: 35:     PIR1bits.RCIF = 0;
  8525  003222  9A9E               	bcf	158,5,c	;volatile
  8526  003224                     
  8527                           ;./bluetooth.h: 36:     PIE1bits.RCIE = 1;
  8528  003224  8A9D               	bsf	157,5,c	;volatile
  8529  003226  0012               	return		;funcret
  8530  003228                     __end_of_configUSART:
  8531                           	opt callstack 0
  8532                           
  8533 ;; *************** function _configPWM *****************
  8534 ;; Defined at:
  8535 ;;		line 9 in file "./PWM.h"
  8536 ;; Parameters:    Size  Location     Type
  8537 ;;		None
  8538 ;; Auto vars:     Size  Location     Type
  8539 ;;		None
  8540 ;; Return value:  Size  Location     Type
  8541 ;;                  1    wreg      void 
  8542 ;; Registers used:
  8543 ;;		wreg, status,2
  8544 ;; Tracked objects:
  8545 ;;		On entry : 0/0
  8546 ;;		On exit  : 0/0
  8547 ;;		Unchanged: 0/0
  8548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8549 ;;      Params:         0       0       0       0
  8550 ;;      Locals:         0       0       0       0
  8551 ;;      Temps:          0       0       0       0
  8552 ;;      Totals:         0       0       0       0
  8553 ;;Total ram usage:        0 bytes
  8554 ;; Hardware stack levels used:    1
  8555 ;; Hardware stack levels required when called:    4
  8556 ;; This function calls:
  8557 ;;		Nothing
  8558 ;; This function is called by:
  8559 ;;		_main
  8560 ;; This function uses a non-reentrant model
  8561 ;;
  8562                           
  8563                           	psect	text39
  8564  0031A4                     __ptext39:
  8565                           	opt callstack 0
  8566  0031A4                     _configPWM:
  8567                           	opt callstack 26
  8568  0031A4                     
  8569                           ;./PWM.h: 11:     PTCON0 = 0b00000000;
  8570  0031A4  0E00               	movlw	0
  8571  0031A6  6E7F               	movwf	127,c	;volatile
  8572                           
  8573                           ;./PWM.h: 12:     PTCON1 = 0b10000000;
  8574  0031A8  0E80               	movlw	128
  8575  0031AA  6E7E               	movwf	126,c	;volatile
  8576                           
  8577                           ;./PWM.h: 13:     PWMCON0 = 0b01011111;
  8578  0031AC  0E5F               	movlw	95
  8579  0031AE  6E6F               	movwf	111,c	;volatile
  8580                           
  8581                           ;./PWM.h: 14:     PWMCON1 = 0b00000001;
  8582  0031B0  0E01               	movlw	1
  8583  0031B2  6E6E               	movwf	110,c	;volatile
  8584                           
  8585                           ;./PWM.h: 15:     DTCON = 0b00010000;
  8586  0031B4  0E10               	movlw	16
  8587  0031B6  6E6D               	movwf	109,c	;volatile
  8588  0031B8                     
  8589                           ;./PWM.h: 16:     OVDCOND = 0b11111111;
  8590  0031B8  686B               	setf	107,c	;volatile
  8591                           
  8592                           ;./PWM.h: 17:     OVDCONS = 0b00000000;
  8593  0031BA  0E00               	movlw	0
  8594  0031BC  6E6A               	movwf	106,c	;volatile
  8595                           
  8596                           ;./PWM.h: 18:     PTPERL = 0b10010110;
  8597  0031BE  0E96               	movlw	150
  8598  0031C0  6E7B               	movwf	123,c	;volatile
  8599                           
  8600                           ;./PWM.h: 19:     PTPERH = 0b00000000;
  8601  0031C2  0E00               	movlw	0
  8602  0031C4  6E7A               	movwf	122,c	;volatile
  8603  0031C6  0012               	return		;funcret
  8604  0031C8                     __end_of_configPWM:
  8605                           	opt callstack 0
  8606                           
  8607 ;; *************** function _configBits *****************
  8608 ;; Defined at:
  8609 ;;		line 11 in file "./geral.h"
  8610 ;; Parameters:    Size  Location     Type
  8611 ;;		None
  8612 ;; Auto vars:     Size  Location     Type
  8613 ;;		None
  8614 ;; Return value:  Size  Location     Type
  8615 ;;                  1    wreg      void 
  8616 ;; Registers used:
  8617 ;;		None
  8618 ;; Tracked objects:
  8619 ;;		On entry : 0/0
  8620 ;;		On exit  : 0/0
  8621 ;;		Unchanged: 0/0
  8622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8623 ;;      Params:         0       0       0       0
  8624 ;;      Locals:         0       0       0       0
  8625 ;;      Temps:          0       0       0       0
  8626 ;;      Totals:         0       0       0       0
  8627 ;;Total ram usage:        0 bytes
  8628 ;; Hardware stack levels used:    1
  8629 ;; Hardware stack levels required when called:    4
  8630 ;; This function calls:
  8631 ;;		Nothing
  8632 ;; This function is called by:
  8633 ;;		_main
  8634 ;; This function uses a non-reentrant model
  8635 ;;
  8636                           
  8637                           	psect	text40
  8638  003290                     __ptext40:
  8639                           	opt callstack 0
  8640  003290                     _configBits:
  8641                           	opt callstack 26
  8642  003290  0012               	return		;funcret
  8643  003292                     __end_of_configBits:
  8644                           	opt callstack 0
  8645                           
  8646 ;; *************** function _configAD *****************
  8647 ;; Defined at:
  8648 ;;		line 8 in file "./ADC.h"
  8649 ;; Parameters:    Size  Location     Type
  8650 ;;		None
  8651 ;; Auto vars:     Size  Location     Type
  8652 ;;		None
  8653 ;; Return value:  Size  Location     Type
  8654 ;;                  1    wreg      void 
  8655 ;; Registers used:
  8656 ;;		wreg, status,2
  8657 ;; Tracked objects:
  8658 ;;		On entry : 0/0
  8659 ;;		On exit  : 0/0
  8660 ;;		Unchanged: 0/0
  8661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8662 ;;      Params:         0       0       0       0
  8663 ;;      Locals:         0       0       0       0
  8664 ;;      Temps:          0       0       0       0
  8665 ;;      Totals:         0       0       0       0
  8666 ;;Total ram usage:        0 bytes
  8667 ;; Hardware stack levels used:    1
  8668 ;; Hardware stack levels required when called:    4
  8669 ;; This function calls:
  8670 ;;		Nothing
  8671 ;; This function is called by:
  8672 ;;		_main
  8673 ;; This function uses a non-reentrant model
  8674 ;;
  8675                           
  8676                           	psect	text41
  8677  0031C8                     __ptext41:
  8678                           	opt callstack 0
  8679  0031C8                     _configAD:
  8680                           	opt callstack 26
  8681  0031C8                     
  8682                           ;./ADC.h: 10:     ADCON1bits.VCFG0 = 0;
  8683  0031C8  9CC1               	bcf	193,6,c	;volatile
  8684                           
  8685                           ;./ADC.h: 11:     ADCON1bits.VCFG1 = 0;
  8686  0031CA  9EC1               	bcf	193,7,c	;volatile
  8687                           
  8688                           ;./ADC.h: 15:     ADCON0bits.ACONV = 0;
  8689  0031CC  9AC2               	bcf	194,5,c	;volatile
  8690                           
  8691                           ;./ADC.h: 16:     ADCON0bits.ACSCH = 0;
  8692  0031CE  98C2               	bcf	194,4,c	;volatile
  8693  0031D0                     
  8694                           ;./ADC.h: 18:     ADCON0bits.ACMOD = 0b00;
  8695  0031D0  0EF3               	movlw	-13
  8696  0031D2  16C2               	andwf	194,f,c	;volatile
  8697  0031D4                     
  8698                           ;./ADC.h: 20:     ADCON2bits.ADFM = 1;
  8699  0031D4  8EC0               	bsf	192,7,c	;volatile
  8700                           
  8701                           ;./ADC.h: 22:     ADCON2bits.ACQT = 0b0110;
  8702  0031D6  50C0               	movf	192,w,c	;volatile
  8703  0031D8  0B87               	andlw	-121
  8704  0031DA  0930               	iorlw	48
  8705  0031DC  6EC0               	movwf	192,c	;volatile
  8706                           
  8707                           ;./ADC.h: 23:     ADCON2bits.ADCS = 0b101;
  8708  0031DE  50C0               	movf	192,w,c	;volatile
  8709  0031E0  0BF8               	andlw	-8
  8710  0031E2  0905               	iorlw	5
  8711  0031E4  6EC0               	movwf	192,c	;volatile
  8712                           
  8713                           ;./ADC.h: 29:     ADCON3 = 0b00000000;
  8714  0031E6  0E00               	movlw	0
  8715  0031E8  6E9A               	movwf	154,c	;volatile
  8716  0031EA  0012               	return		;funcret
  8717  0031EC                     __end_of_configAD:
  8718                           	opt callstack 0
  8719                           
  8720 ;; *************** function _UARTReadChar *****************
  8721 ;; Defined at:
  8722 ;;		line 43 in file "./bluetooth.h"
  8723 ;; Parameters:    Size  Location     Type
  8724 ;;		None
  8725 ;; Auto vars:     Size  Location     Type
  8726 ;;  ler             1   18[COMRAM] unsigned char 
  8727 ;; Return value:  Size  Location     Type
  8728 ;;                  1    wreg      unsigned char 
  8729 ;; Registers used:
  8730 ;;		wreg, status,2
  8731 ;; Tracked objects:
  8732 ;;		On entry : 0/0
  8733 ;;		On exit  : 0/0
  8734 ;;		Unchanged: 0/0
  8735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8736 ;;      Params:         0       0       0       0
  8737 ;;      Locals:         1       0       0       0
  8738 ;;      Temps:          0       0       0       0
  8739 ;;      Totals:         1       0       0       0
  8740 ;;Total ram usage:        1 bytes
  8741 ;; Hardware stack levels used:    1
  8742 ;; Hardware stack levels required when called:    4
  8743 ;; This function calls:
  8744 ;;		Nothing
  8745 ;; This function is called by:
  8746 ;;		_main
  8747 ;; This function uses a non-reentrant model
  8748 ;;
  8749                           
  8750                           	psect	text42
  8751  00327C                     __ptext42:
  8752                           	opt callstack 0
  8753  00327C                     _UARTReadChar:
  8754                           	opt callstack 26
  8755  00327C                     
  8756                           ;./bluetooth.h: 44:     char ler = RCREG;
  8757  00327C  CFAE F013          	movff	4014,UARTReadChar@ler	;volatile
  8758  003280                     
  8759                           ;./bluetooth.h: 45:     return ler;
  8760  003280  5013               	movf	UARTReadChar@ler^0,w,c
  8761  003282  0012               	return		;funcret
  8762  003284                     __end_of_UARTReadChar:
  8763                           	opt callstack 0
  8764                           
  8765 ;; *************** function _ISR *****************
  8766 ;; Defined at:
  8767 ;;		line 26 in file "main.c"
  8768 ;; Parameters:    Size  Location     Type
  8769 ;;		None
  8770 ;; Auto vars:     Size  Location     Type
  8771 ;;		None
  8772 ;; Return value:  Size  Location     Type
  8773 ;;                  1    wreg      void 
  8774 ;; Registers used:
  8775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8776 ;; Tracked objects:
  8777 ;;		On entry : 0/0
  8778 ;;		On exit  : 0/0
  8779 ;;		Unchanged: 0/0
  8780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8781 ;;      Params:         0       0       0       0
  8782 ;;      Locals:         0       0       0       0
  8783 ;;      Temps:          8       0       0       0
  8784 ;;      Totals:         8       0       0       0
  8785 ;;Total ram usage:        8 bytes
  8786 ;; Hardware stack levels used:    1
  8787 ;; Hardware stack levels required when called:    3
  8788 ;; This function calls:
  8789 ;;		_ligaTimer0
  8790 ;;		_setComando
  8791 ;;		i2_UARTReadChar
  8792 ;;		i2_UARTSendString
  8793 ;;		i2_setDutyPWM0
  8794 ;;		i2_setDutyPWM2
  8795 ;;		i2_setDutyPWM4
  8796 ;;		i2_setDutyPWM6
  8797 ;; This function is called by:
  8798 ;;		Interrupt level 2
  8799 ;; This function uses a non-reentrant model
  8800 ;;
  8801                           
  8802                           	psect	intcode
  8803  000008                     __pintcode:
  8804                           	opt callstack 0
  8805  000008                     _ISR:
  8806                           	opt callstack 22
  8807                           
  8808                           ;incstack = 0
  8809  000008  824D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8810  00000A  CFE9 F00B          	movff	fsr0l,??_ISR
  8811  00000E  CFEA F00C          	movff	fsr0h,??_ISR+1
  8812  000012  CFF3 F00D          	movff	prodl,??_ISR+2
  8813  000016  CFF4 F00E          	movff	prodh,??_ISR+3
  8814  00001A  CFF6 F00F          	movff	tblptrl,??_ISR+4
  8815  00001E  CFF7 F010          	movff	tblptrh,??_ISR+5
  8816  000022  CFF8 F011          	movff	tblptru,??_ISR+6
  8817  000026  CFF5 F012          	movff	tablat,??_ISR+7
  8818  00002A                     
  8819                           ;main.c: 28:     if (PIR1bits.RCIF) {
  8820  00002A  AA9E               	btfss	158,5,c	;volatile
  8821  00002C  EF1A  F000         	goto	i2u536_41
  8822  000030  EF1C  F000         	goto	i2u536_40
  8823  000034                     i2u536_41:
  8824  000034  EF02  F001         	goto	i2l5093
  8825  000038                     i2u536_40:
  8826  000038                     
  8827                           ;main.c: 30:         if (RCSTAbits.FERR || RCSTAbits.OERR) {
  8828  000038  B4AB               	btfsc	171,2,c	;volatile
  8829  00003A  EF21  F000         	goto	i2u537_41
  8830  00003E  EF23  F000         	goto	i2u537_40
  8831  000042                     i2u537_41:
  8832  000042  EF2A  F000         	goto	i2l344
  8833  000046                     i2u537_40:
  8834  000046  A2AB               	btfss	171,1,c	;volatile
  8835  000048  EF28  F000         	goto	i2u538_41
  8836  00004C  EF2A  F000         	goto	i2u538_40
  8837  000050                     i2u538_41:
  8838  000050  EF2D  F000         	goto	i2l5029
  8839  000054                     i2u538_40:
  8840  000054                     i2l344:
  8841                           
  8842                           ;main.c: 31:             RCSTAbits.OERR = 1;
  8843  000054  82AB               	bsf	171,1,c	;volatile
  8844                           
  8845                           ;main.c: 32:             RCSTAbits.CREN = 0;
  8846  000056  98AB               	bcf	171,4,c	;volatile
  8847                           
  8848                           ;main.c: 33:             RCSTAbits.CREN = 1;
  8849  000058  88AB               	bsf	171,4,c	;volatile
  8850  00005A                     i2l5029:
  8851                           
  8852                           ;main.c: 36:         recebidoChar = UARTReadChar();
  8853  00005A  EC42  F019         	call	i2_UARTReadChar	;wreg free
  8854  00005E  6E4A               	movwf	_recebidoChar^0,c
  8855  000060                     
  8856                           ;main.c: 38:         if (RCREG == '1') {
  8857  000060  0E31               	movlw	49
  8858  000062  18AE               	xorwf	174,w,c	;volatile
  8859  000064  A4D8               	btfss	status,2,c
  8860  000066  EF37  F000         	goto	i2u539_41
  8861  00006A  EF39  F000         	goto	i2u539_40
  8862  00006E                     i2u539_41:
  8863  00006E  EF45  F000         	goto	i2l5037
  8864  000072                     i2u539_40:
  8865  000072                     
  8866                           ;main.c: 39:             ligaTimer0();
  8867  000072  EC46  F019         	call	_ligaTimer0	;wreg free
  8868  000076                     
  8869                           ;main.c: 40:             UARTSendString("Timer0 on", 16);
  8870  000076  0E4F               	movlw	low STR_44
  8871  000078  6E02               	movwf	i2UARTSendString@str^0,c
  8872  00007A  0E03               	movlw	high STR_44
  8873  00007C  6E03               	movwf	(i2UARTSendString@str+1)^0,c
  8874  00007E  0E00               	movlw	0
  8875  000080  6E05               	movwf	(i2UARTSendString@max_length+1)^0,c
  8876  000082  0E10               	movlw	16
  8877  000084  6E04               	movwf	i2UARTSendString@max_length^0,c
  8878  000086  EC12  F016         	call	i2_UARTSendString	;wreg free
  8879  00008A                     i2l5037:
  8880                           
  8881                           ;main.c: 43:         if (RCREG == 'a') {
  8882  00008A  0E61               	movlw	97
  8883  00008C  18AE               	xorwf	174,w,c	;volatile
  8884  00008E  A4D8               	btfss	status,2,c
  8885  000090  EF4C  F000         	goto	i2u540_41
  8886  000094  EF4E  F000         	goto	i2u540_40
  8887  000098                     i2u540_41:
  8888  000098  EF5E  F000         	goto	i2l5043
  8889  00009C                     i2u540_40:
  8890  00009C                     
  8891                           ;main.c: 44:             setComando("testeMotores");
  8892  00009C  0E2C               	movlw	low STR_45
  8893  00009E  6E01               	movwf	setComando@c^0,c
  8894  0000A0  0E03               	movlw	high STR_45
  8895  0000A2  6E02               	movwf	(setComando@c+1)^0,c
  8896  0000A4  EC35  F019         	call	_setComando	;wreg free
  8897  0000A8                     
  8898                           ;main.c: 45:             UARTSendString(comando, 16);
  8899  0000A8  C0FE  F002         	movff	_comando,i2UARTSendString@str
  8900  0000AC  C0FF  F003         	movff	_comando+1,i2UARTSendString@str+1
  8901  0000B0  0E00               	movlw	0
  8902  0000B2  6E05               	movwf	(i2UARTSendString@max_length+1)^0,c
  8903  0000B4  0E10               	movlw	16
  8904  0000B6  6E04               	movwf	i2UARTSendString@max_length^0,c
  8905  0000B8  EC12  F016         	call	i2_UARTSendString	;wreg free
  8906  0000BC                     i2l5043:
  8907                           
  8908                           ;main.c: 48:         if (RCREG == 'b') {
  8909  0000BC  0E62               	movlw	98
  8910  0000BE  18AE               	xorwf	174,w,c	;volatile
  8911  0000C0  A4D8               	btfss	status,2,c
  8912  0000C2  EF65  F000         	goto	i2u541_41
  8913  0000C6  EF67  F000         	goto	i2u541_40
  8914  0000CA                     i2u541_41:
  8915  0000CA  EF77  F000         	goto	i2l5049
  8916  0000CE                     i2u541_40:
  8917  0000CE                     
  8918                           ;main.c: 49:             setComando("testeLampadas");
  8919  0000CE  0E1E               	movlw	low STR_46
  8920  0000D0  6E01               	movwf	setComando@c^0,c
  8921  0000D2  0E03               	movlw	high STR_46
  8922  0000D4  6E02               	movwf	(setComando@c+1)^0,c
  8923  0000D6  EC35  F019         	call	_setComando	;wreg free
  8924  0000DA                     
  8925                           ;main.c: 50:             UARTSendString(comando, 16);
  8926  0000DA  C0FE  F002         	movff	_comando,i2UARTSendString@str
  8927  0000DE  C0FF  F003         	movff	_comando+1,i2UARTSendString@str+1
  8928  0000E2  0E00               	movlw	0
  8929  0000E4  6E05               	movwf	(i2UARTSendString@max_length+1)^0,c
  8930  0000E6  0E10               	movlw	16
  8931  0000E8  6E04               	movwf	i2UARTSendString@max_length^0,c
  8932  0000EA  EC12  F016         	call	i2_UARTSendString	;wreg free
  8933  0000EE                     i2l5049:
  8934                           
  8935                           ;main.c: 53:         if (RCREG == 'c') {
  8936  0000EE  0E63               	movlw	99
  8937  0000F0  18AE               	xorwf	174,w,c	;volatile
  8938  0000F2  A4D8               	btfss	status,2,c
  8939  0000F4  EF7E  F000         	goto	i2u542_41
  8940  0000F8  EF80  F000         	goto	i2u542_40
  8941  0000FC                     i2u542_41:
  8942  0000FC  EF90  F000         	goto	i2l5055
  8943  000100                     i2u542_40:
  8944  000100                     
  8945                           ;main.c: 54:             setComando("AD");
  8946  000100  0E9D               	movlw	low STR_47
  8947  000102  6E01               	movwf	setComando@c^0,c
  8948  000104  0E03               	movlw	high STR_47
  8949  000106  6E02               	movwf	(setComando@c+1)^0,c
  8950  000108  EC35  F019         	call	_setComando	;wreg free
  8951  00010C                     
  8952                           ;main.c: 55:             UARTSendString(comando, 16);
  8953  00010C  C0FE  F002         	movff	_comando,i2UARTSendString@str
  8954  000110  C0FF  F003         	movff	_comando+1,i2UARTSendString@str+1
  8955  000114  0E00               	movlw	0
  8956  000116  6E05               	movwf	(i2UARTSendString@max_length+1)^0,c
  8957  000118  0E10               	movlw	16
  8958  00011A  6E04               	movwf	i2UARTSendString@max_length^0,c
  8959  00011C  EC12  F016         	call	i2_UARTSendString	;wreg free
  8960  000120                     i2l5055:
  8961                           
  8962                           ;main.c: 58:         if (RCREG == 'd') {
  8963  000120  0E64               	movlw	100
  8964  000122  18AE               	xorwf	174,w,c	;volatile
  8965  000124  A4D8               	btfss	status,2,c
  8966  000126  EF97  F000         	goto	i2u543_41
  8967  00012A  EF99  F000         	goto	i2u543_40
  8968  00012E                     i2u543_41:
  8969  00012E  EFA9  F000         	goto	i2l5061
  8970  000132                     i2u543_40:
  8971  000132                     
  8972                           ;main.c: 59:             setComando("PID");
  8973  000132  0E99               	movlw	low STR_48
  8974  000134  6E01               	movwf	setComando@c^0,c
  8975  000136  0E03               	movlw	high STR_48
  8976  000138  6E02               	movwf	(setComando@c+1)^0,c
  8977  00013A  EC35  F019         	call	_setComando	;wreg free
  8978  00013E                     
  8979                           ;main.c: 60:             UARTSendString(comando, 16);
  8980  00013E  C0FE  F002         	movff	_comando,i2UARTSendString@str
  8981  000142  C0FF  F003         	movff	_comando+1,i2UARTSendString@str+1
  8982  000146  0E00               	movlw	0
  8983  000148  6E05               	movwf	(i2UARTSendString@max_length+1)^0,c
  8984  00014A  0E10               	movlw	16
  8985  00014C  6E04               	movwf	i2UARTSendString@max_length^0,c
  8986  00014E  EC12  F016         	call	i2_UARTSendString	;wreg free
  8987  000152                     i2l5061:
  8988                           
  8989                           ;main.c: 62:         if (RCREG == 'f') {
  8990  000152  0E66               	movlw	102
  8991  000154  18AE               	xorwf	174,w,c	;volatile
  8992  000156  A4D8               	btfss	status,2,c
  8993  000158  EFB0  F000         	goto	i2u544_41
  8994  00015C  EFB2  F000         	goto	i2u544_40
  8995  000160                     i2u544_41:
  8996  000160  EFC2  F000         	goto	i2l5067
  8997  000164                     i2u544_40:
  8998  000164                     
  8999                           ;main.c: 63:             setComando("testeADbit");
  9000  000164  0E44               	movlw	low STR_49
  9001  000166  6E01               	movwf	setComando@c^0,c
  9002  000168  0E03               	movlw	high STR_49
  9003  00016A  6E02               	movwf	(setComando@c+1)^0,c
  9004  00016C  EC35  F019         	call	_setComando	;wreg free
  9005  000170                     
  9006                           ;main.c: 64:             UARTSendString(comando, 16);
  9007  000170  C0FE  F002         	movff	_comando,i2UARTSendString@str
  9008  000174  C0FF  F003         	movff	_comando+1,i2UARTSendString@str+1
  9009  000178  0E00               	movlw	0
  9010  00017A  6E05               	movwf	(i2UARTSendString@max_length+1)^0,c
  9011  00017C  0E10               	movlw	16
  9012  00017E  6E04               	movwf	i2UARTSendString@max_length^0,c
  9013  000180  EC12  F016         	call	i2_UARTSendString	;wreg free
  9014  000184                     i2l5067:
  9015                           
  9016                           ;main.c: 67:         if (RCREG == 'p') {
  9017  000184  0E70               	movlw	112
  9018  000186  18AE               	xorwf	174,w,c	;volatile
  9019  000188  A4D8               	btfss	status,2,c
  9020  00018A  EFC9  F000         	goto	i2u545_41
  9021  00018E  EFCB  F000         	goto	i2u545_40
  9022  000192                     i2u545_41:
  9023  000192  EF01  F001         	goto	i2l5091
  9024  000196                     i2u545_40:
  9025  000196                     
  9026                           ;main.c: 68:             setComando("idle");
  9027  000196  0E94               	movlw	low STR_3
  9028  000198  6E01               	movwf	setComando@c^0,c
  9029  00019A  0E03               	movlw	high STR_3
  9030  00019C  6E02               	movwf	(setComando@c+1)^0,c
  9031  00019E  EC35  F019         	call	_setComando	;wreg free
  9032  0001A2                     
  9033                           ;main.c: 69:             UARTSendString("IDLE", 16);
  9034  0001A2  0E8F               	movlw	low STR_51
  9035  0001A4  6E02               	movwf	i2UARTSendString@str^0,c
  9036  0001A6  0E03               	movlw	high STR_51
  9037  0001A8  6E03               	movwf	(i2UARTSendString@str+1)^0,c
  9038  0001AA  0E00               	movlw	0
  9039  0001AC  6E05               	movwf	(i2UARTSendString@max_length+1)^0,c
  9040  0001AE  0E10               	movlw	16
  9041  0001B0  6E04               	movwf	i2UARTSendString@max_length^0,c
  9042  0001B2  EC12  F016         	call	i2_UARTSendString	;wreg free
  9043  0001B6                     
  9044                           ;main.c: 70:             setDutyPWM0(0);
  9045  0001B6  0E00               	movlw	0
  9046  0001B8  6E08               	movwf	(i2setDutyPWM0@porcVelo+1)^0,c
  9047  0001BA  0E00               	movlw	0
  9048  0001BC  6E07               	movwf	i2setDutyPWM0@porcVelo^0,c
  9049  0001BE  ECAC  F018         	call	i2_setDutyPWM0	;wreg free
  9050  0001C2                     
  9051                           ;main.c: 71:             setDutyPWM2(0);
  9052  0001C2  0E00               	movlw	0
  9053  0001C4  6E08               	movwf	(i2setDutyPWM2@porcVelo+1)^0,c
  9054  0001C6  0E00               	movlw	0
  9055  0001C8  6E07               	movwf	i2setDutyPWM2@porcVelo^0,c
  9056  0001CA  EC99  F018         	call	i2_setDutyPWM2	;wreg free
  9057  0001CE                     
  9058                           ;main.c: 72:             setDutyPWM4(0);
  9059  0001CE  0E00               	movlw	0
  9060  0001D0  6E08               	movwf	(i2setDutyPWM4@porcVelo+1)^0,c
  9061  0001D2  0E00               	movlw	0
  9062  0001D4  6E07               	movwf	i2setDutyPWM4@porcVelo^0,c
  9063  0001D6  EC86  F018         	call	i2_setDutyPWM4	;wreg free
  9064  0001DA                     
  9065                           ;main.c: 73:             setDutyPWM6(0);
  9066  0001DA  0E00               	movlw	0
  9067  0001DC  6E08               	movwf	(i2setDutyPWM6@porcVelo+1)^0,c
  9068  0001DE  0E00               	movlw	0
  9069  0001E0  6E07               	movwf	i2setDutyPWM6@porcVelo^0,c
  9070  0001E2  EC73  F018         	call	i2_setDutyPWM6	;wreg free
  9071  0001E6                     
  9072                           ;main.c: 75:             RC0 = 1;
  9073  0001E6  8082               	bsf	3970,0,c	;volatile
  9074  0001E8                     
  9075                           ;main.c: 76:             RC1 = 1;
  9076  0001E8  8282               	bsf	3970,1,c	;volatile
  9077  0001EA                     
  9078                           ;main.c: 77:             RC2 = 1;
  9079  0001EA  8482               	bsf	3970,2,c	;volatile
  9080  0001EC                     
  9081                           ;main.c: 78:             RC3 = 1;
  9082  0001EC  8682               	bsf	3970,3,c	;volatile
  9083  0001EE                     
  9084                           ;main.c: 79:             UARTSendString(comando, 16);
  9085  0001EE  C0FE  F002         	movff	_comando,i2UARTSendString@str
  9086  0001F2  C0FF  F003         	movff	_comando+1,i2UARTSendString@str+1
  9087  0001F6  0E00               	movlw	0
  9088  0001F8  6E05               	movwf	(i2UARTSendString@max_length+1)^0,c
  9089  0001FA  0E10               	movlw	16
  9090  0001FC  6E04               	movwf	i2UARTSendString@max_length^0,c
  9091  0001FE  EC12  F016         	call	i2_UARTSendString	;wreg free
  9092  000202                     i2l5091:
  9093                           
  9094                           ;main.c: 81:         PIR1bits.RCIF = 0;
  9095  000202  9A9E               	bcf	158,5,c	;volatile
  9096  000204                     i2l5093:
  9097                           
  9098                           ;main.c: 84:     if (TMR0IF) {
  9099  000204  A4F2               	btfss	4082,2,c	;volatile
  9100  000206  EF07  F001         	goto	i2u546_41
  9101  00020A  EF09  F001         	goto	i2u546_40
  9102  00020E                     i2u546_41:
  9103  00020E  EF13  F001         	goto	i2l353
  9104  000212                     i2u546_40:
  9105  000212                     
  9106                           ;main.c: 85:         TMR0L = 99;
  9107  000212  0E63               	movlw	99
  9108  000214  6ED6               	movwf	214,c	;volatile
  9109  000216                     
  9110                           ;main.c: 86:         millis++;
  9111  000216  0E01               	movlw	1
  9112  000218  0100               	movlb	0	; () banked
  9113  00021A  27F0               	addwf	_millis& (0+255),f,b
  9114  00021C  0E00               	movlw	0
  9115  00021E  23F1               	addwfc	(_millis+1)& (0+255),f,b
  9116  000220  23F2               	addwfc	(_millis+2)& (0+255),f,b
  9117  000222  23F3               	addwfc	(_millis+3)& (0+255),f,b
  9118  000224                     
  9119                           ; BSR set to: 0
  9120                           ;main.c: 87:         TMR0IF = 0;
  9121  000224  94F2               	bcf	4082,2,c	;volatile
  9122  000226                     i2l353:
  9123  000226  C012  FFF5         	movff	??_ISR+7,tablat
  9124  00022A  C011  FFF8         	movff	??_ISR+6,tblptru
  9125  00022E  C010  FFF7         	movff	??_ISR+5,tblptrh
  9126  000232  C00F  FFF6         	movff	??_ISR+4,tblptrl
  9127  000236  C00E  FFF4         	movff	??_ISR+3,prodh
  9128  00023A  C00D  FFF3         	movff	??_ISR+2,prodl
  9129  00023E  C00C  FFEA         	movff	??_ISR+1,fsr0h
  9130  000242  C00B  FFE9         	movff	??_ISR,fsr0l
  9131  000246  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9132  000248  0011               	retfie		f
  9133  00024A                     __end_of_ISR:
  9134                           	opt callstack 0
  9135                           
  9136 ;; *************** function i2_setDutyPWM6 *****************
  9137 ;; Defined at:
  9138 ;;		line 41 in file "./PWM.h"
  9139 ;; Parameters:    Size  Location     Type
  9140 ;;  porcVelo        2    6[COMRAM] unsigned int 
  9141 ;; Auto vars:     Size  Location     Type
  9142 ;;  setDutyPWM6     2    8[COMRAM] unsigned int 
  9143 ;; Return value:  Size  Location     Type
  9144 ;;                  1    wreg      void 
  9145 ;; Registers used:
  9146 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9147 ;; Tracked objects:
  9148 ;;		On entry : 0/0
  9149 ;;		On exit  : 0/0
  9150 ;;		Unchanged: 0/0
  9151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9152 ;;      Params:         2       0       0       0
  9153 ;;      Locals:         2       0       0       0
  9154 ;;      Temps:          0       0       0       0
  9155 ;;      Totals:         4       0       0       0
  9156 ;;Total ram usage:        4 bytes
  9157 ;; Hardware stack levels used:    1
  9158 ;; Hardware stack levels required when called:    1
  9159 ;; This function calls:
  9160 ;;		i2___wmul
  9161 ;; This function is called by:
  9162 ;;		_ISR
  9163 ;; This function uses a non-reentrant model
  9164 ;;
  9165                           
  9166                           	psect	text44
  9167  0030E6                     __ptext44:
  9168                           	opt callstack 0
  9169  0030E6                     i2_setDutyPWM6:
  9170                           	opt callstack 23
  9171  0030E6                     
  9172                           ;./PWM.h: 42:     unsigned int velo = porcVelo*6;
  9173  0030E6  C007  F001         	movff	i2setDutyPWM6@porcVelo,i2___wmul@multiplier
  9174  0030EA  C008  F002         	movff	i2setDutyPWM6@porcVelo+1,i2___wmul@multiplier+1
  9175  0030EE  0E00               	movlw	0
  9176  0030F0  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9177  0030F2  0E06               	movlw	6
  9178  0030F4  6E03               	movwf	i2___wmul@multiplicand^0,c
  9179  0030F6  ECBF  F018         	call	i2___wmul	;wreg free
  9180  0030FA  C001  F009         	movff	?i2___wmul,i2setDutyPWM6@velo
  9181  0030FE  C002  F00A         	movff	?i2___wmul+1,i2setDutyPWM6@velo+1
  9182  003102                     
  9183                           ;./PWM.h: 43:     PDC3L = velo & 0b11111111;
  9184  003102  C009  FF73         	movff	i2setDutyPWM6@velo,3955	;volatile
  9185  003106                     
  9186                           ;./PWM.h: 44:     PDC3H = (velo >> 8) & 0b11111111;
  9187  003106  500A               	movf	(i2setDutyPWM6@velo+1)^0,w,c
  9188  003108  6E72               	movwf	114,c	;volatile
  9189  00310A  0012               	return		;funcret
  9190  00310C                     __end_ofi2_setDutyPWM6:
  9191                           	opt callstack 0
  9192                           
  9193 ;; *************** function i2_setDutyPWM4 *****************
  9194 ;; Defined at:
  9195 ;;		line 35 in file "./PWM.h"
  9196 ;; Parameters:    Size  Location     Type
  9197 ;;  porcVelo        2    6[COMRAM] unsigned int 
  9198 ;; Auto vars:     Size  Location     Type
  9199 ;;  setDutyPWM4     2    8[COMRAM] unsigned int 
  9200 ;; Return value:  Size  Location     Type
  9201 ;;                  1    wreg      void 
  9202 ;; Registers used:
  9203 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9204 ;; Tracked objects:
  9205 ;;		On entry : 0/0
  9206 ;;		On exit  : 0/0
  9207 ;;		Unchanged: 0/0
  9208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9209 ;;      Params:         2       0       0       0
  9210 ;;      Locals:         2       0       0       0
  9211 ;;      Temps:          0       0       0       0
  9212 ;;      Totals:         4       0       0       0
  9213 ;;Total ram usage:        4 bytes
  9214 ;; Hardware stack levels used:    1
  9215 ;; Hardware stack levels required when called:    1
  9216 ;; This function calls:
  9217 ;;		i2___wmul
  9218 ;; This function is called by:
  9219 ;;		_ISR
  9220 ;; This function uses a non-reentrant model
  9221 ;;
  9222                           
  9223                           	psect	text45
  9224  00310C                     __ptext45:
  9225                           	opt callstack 0
  9226  00310C                     i2_setDutyPWM4:
  9227                           	opt callstack 23
  9228  00310C                     
  9229                           ;./PWM.h: 36:     unsigned int velo = porcVelo*6;
  9230  00310C  C007  F001         	movff	i2setDutyPWM4@porcVelo,i2___wmul@multiplier
  9231  003110  C008  F002         	movff	i2setDutyPWM4@porcVelo+1,i2___wmul@multiplier+1
  9232  003114  0E00               	movlw	0
  9233  003116  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9234  003118  0E06               	movlw	6
  9235  00311A  6E03               	movwf	i2___wmul@multiplicand^0,c
  9236  00311C  ECBF  F018         	call	i2___wmul	;wreg free
  9237  003120  C001  F009         	movff	?i2___wmul,i2setDutyPWM4@velo
  9238  003124  C002  F00A         	movff	?i2___wmul+1,i2setDutyPWM4@velo+1
  9239  003128                     
  9240                           ;./PWM.h: 37:     PDC2L = velo & 0b11111111;
  9241  003128  C009  FF75         	movff	i2setDutyPWM4@velo,3957	;volatile
  9242  00312C                     
  9243                           ;./PWM.h: 38:     PDC2H = (velo >> 8) & 0b11111111;
  9244  00312C  500A               	movf	(i2setDutyPWM4@velo+1)^0,w,c
  9245  00312E  6E74               	movwf	116,c	;volatile
  9246  003130  0012               	return		;funcret
  9247  003132                     __end_ofi2_setDutyPWM4:
  9248                           	opt callstack 0
  9249                           
  9250 ;; *************** function i2_setDutyPWM2 *****************
  9251 ;; Defined at:
  9252 ;;		line 29 in file "./PWM.h"
  9253 ;; Parameters:    Size  Location     Type
  9254 ;;  porcVelo        2    6[COMRAM] unsigned int 
  9255 ;; Auto vars:     Size  Location     Type
  9256 ;;  setDutyPWM2     2    8[COMRAM] unsigned int 
  9257 ;; Return value:  Size  Location     Type
  9258 ;;                  1    wreg      void 
  9259 ;; Registers used:
  9260 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9261 ;; Tracked objects:
  9262 ;;		On entry : 0/0
  9263 ;;		On exit  : 0/0
  9264 ;;		Unchanged: 0/0
  9265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9266 ;;      Params:         2       0       0       0
  9267 ;;      Locals:         2       0       0       0
  9268 ;;      Temps:          0       0       0       0
  9269 ;;      Totals:         4       0       0       0
  9270 ;;Total ram usage:        4 bytes
  9271 ;; Hardware stack levels used:    1
  9272 ;; Hardware stack levels required when called:    1
  9273 ;; This function calls:
  9274 ;;		i2___wmul
  9275 ;; This function is called by:
  9276 ;;		_ISR
  9277 ;; This function uses a non-reentrant model
  9278 ;;
  9279                           
  9280                           	psect	text46
  9281  003132                     __ptext46:
  9282                           	opt callstack 0
  9283  003132                     i2_setDutyPWM2:
  9284                           	opt callstack 23
  9285  003132                     
  9286                           ;./PWM.h: 30:     unsigned int velo = porcVelo*6;
  9287  003132  C007  F001         	movff	i2setDutyPWM2@porcVelo,i2___wmul@multiplier
  9288  003136  C008  F002         	movff	i2setDutyPWM2@porcVelo+1,i2___wmul@multiplier+1
  9289  00313A  0E00               	movlw	0
  9290  00313C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9291  00313E  0E06               	movlw	6
  9292  003140  6E03               	movwf	i2___wmul@multiplicand^0,c
  9293  003142  ECBF  F018         	call	i2___wmul	;wreg free
  9294  003146  C001  F009         	movff	?i2___wmul,i2setDutyPWM2@velo
  9295  00314A  C002  F00A         	movff	?i2___wmul+1,i2setDutyPWM2@velo+1
  9296  00314E                     
  9297                           ;./PWM.h: 31:     PDC1L = velo & 0b11111111;
  9298  00314E  C009  FF77         	movff	i2setDutyPWM2@velo,3959	;volatile
  9299  003152                     
  9300                           ;./PWM.h: 32:     PDC1H = (velo >> 8) & 0b11111111;
  9301  003152  500A               	movf	(i2setDutyPWM2@velo+1)^0,w,c
  9302  003154  6E76               	movwf	118,c	;volatile
  9303  003156  0012               	return		;funcret
  9304  003158                     __end_ofi2_setDutyPWM2:
  9305                           	opt callstack 0
  9306                           
  9307 ;; *************** function i2_setDutyPWM0 *****************
  9308 ;; Defined at:
  9309 ;;		line 23 in file "./PWM.h"
  9310 ;; Parameters:    Size  Location     Type
  9311 ;;  porcVelo        2    6[COMRAM] unsigned int 
  9312 ;; Auto vars:     Size  Location     Type
  9313 ;;  setDutyPWM0     2    8[COMRAM] unsigned int 
  9314 ;; Return value:  Size  Location     Type
  9315 ;;                  1    wreg      void 
  9316 ;; Registers used:
  9317 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9318 ;; Tracked objects:
  9319 ;;		On entry : 0/0
  9320 ;;		On exit  : 0/0
  9321 ;;		Unchanged: 0/0
  9322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9323 ;;      Params:         2       0       0       0
  9324 ;;      Locals:         2       0       0       0
  9325 ;;      Temps:          0       0       0       0
  9326 ;;      Totals:         4       0       0       0
  9327 ;;Total ram usage:        4 bytes
  9328 ;; Hardware stack levels used:    1
  9329 ;; Hardware stack levels required when called:    1
  9330 ;; This function calls:
  9331 ;;		i2___wmul
  9332 ;; This function is called by:
  9333 ;;		_ISR
  9334 ;; This function uses a non-reentrant model
  9335 ;;
  9336                           
  9337                           	psect	text47
  9338  003158                     __ptext47:
  9339                           	opt callstack 0
  9340  003158                     i2_setDutyPWM0:
  9341                           	opt callstack 23
  9342  003158                     
  9343                           ;./PWM.h: 24:     unsigned int velo = porcVelo*6;
  9344  003158  C007  F001         	movff	i2setDutyPWM0@porcVelo,i2___wmul@multiplier
  9345  00315C  C008  F002         	movff	i2setDutyPWM0@porcVelo+1,i2___wmul@multiplier+1
  9346  003160  0E00               	movlw	0
  9347  003162  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9348  003164  0E06               	movlw	6
  9349  003166  6E03               	movwf	i2___wmul@multiplicand^0,c
  9350  003168  ECBF  F018         	call	i2___wmul	;wreg free
  9351  00316C  C001  F009         	movff	?i2___wmul,i2setDutyPWM0@velo
  9352  003170  C002  F00A         	movff	?i2___wmul+1,i2setDutyPWM0@velo+1
  9353  003174                     
  9354                           ;./PWM.h: 25:     PDC0L = velo & 0b11111111;
  9355  003174  C009  FF79         	movff	i2setDutyPWM0@velo,3961	;volatile
  9356  003178                     
  9357                           ;./PWM.h: 26:     PDC0H = (velo >> 8) & 0b11111111;
  9358  003178  500A               	movf	(i2setDutyPWM0@velo+1)^0,w,c
  9359  00317A  6E78               	movwf	120,c	;volatile
  9360  00317C  0012               	return		;funcret
  9361  00317E                     __end_ofi2_setDutyPWM0:
  9362                           	opt callstack 0
  9363                           
  9364 ;; *************** function i2___wmul *****************
  9365 ;; Defined at:
  9366 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  9367 ;; Parameters:    Size  Location     Type
  9368 ;;  multiplier      2    0[COMRAM] unsigned int 
  9369 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9370 ;; Auto vars:     Size  Location     Type
  9371 ;;  __wmul          2    4[COMRAM] unsigned int 
  9372 ;; Return value:  Size  Location     Type
  9373 ;;                  2    0[COMRAM] unsigned int 
  9374 ;; Registers used:
  9375 ;;		wreg, status,2, status,0, prodl, prodh
  9376 ;; Tracked objects:
  9377 ;;		On entry : 0/0
  9378 ;;		On exit  : 0/0
  9379 ;;		Unchanged: 0/0
  9380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9381 ;;      Params:         4       0       0       0
  9382 ;;      Locals:         2       0       0       0
  9383 ;;      Temps:          0       0       0       0
  9384 ;;      Totals:         6       0       0       0
  9385 ;;Total ram usage:        6 bytes
  9386 ;; Hardware stack levels used:    1
  9387 ;; This function calls:
  9388 ;;		Nothing
  9389 ;; This function is called by:
  9390 ;;		i2_setDutyPWM0
  9391 ;;		i2_setDutyPWM2
  9392 ;;		i2_setDutyPWM4
  9393 ;;		i2_setDutyPWM6
  9394 ;; This function uses a non-reentrant model
  9395 ;;
  9396                           
  9397                           	psect	text48
  9398  00317E                     __ptext48:
  9399                           	opt callstack 0
  9400  00317E                     i2___wmul:
  9401                           	opt callstack 23
  9402  00317E  5001               	movf	i2___wmul@multiplier^0,w,c
  9403  003180  0203               	mulwf	i2___wmul@multiplicand^0,c
  9404  003182  CFF3 F005          	movff	prodl,i2___wmul@product
  9405  003186  CFF4 F006          	movff	prodh,i2___wmul@product+1
  9406  00318A  5001               	movf	i2___wmul@multiplier^0,w,c
  9407  00318C  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  9408  00318E  50F3               	movf	243,w,c
  9409  003190  2606               	addwf	(i2___wmul@product+1)^0,f,c
  9410  003192  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  9411  003194  0203               	mulwf	i2___wmul@multiplicand^0,c
  9412  003196  50F3               	movf	243,w,c
  9413  003198  2606               	addwf	(i2___wmul@product+1)^0,f,c
  9414  00319A  C005  F001         	movff	i2___wmul@product,?i2___wmul
  9415  00319E  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  9416  0031A2  0012               	return		;funcret
  9417  0031A4                     __end_ofi2___wmul:
  9418                           	opt callstack 0
  9419                           
  9420 ;; *************** function i2_UARTSendString *****************
  9421 ;; Defined at:
  9422 ;;		line 57 in file "./bluetooth.h"
  9423 ;; Parameters:    Size  Location     Type
  9424 ;;  str             2    1[COMRAM] PTR unsigned char 
  9425 ;;		 -> STR_68(5), STR_67(5), STR_52(2), STR_51(5), 
  9426 ;;		 -> STR_50(5), STR_49(11), STR_48(4), STR_47(3), 
  9427 ;;		 -> STR_46(14), STR_45(13), STR_44(10), STR_43(2), 
  9428 ;;		 -> STR_42(11), STR_41(2), STR_40(2), testeADbit@string(2), 
  9429 ;;		 -> STR_39(2), STR_38(11), STR_37(2), STR_36(6), 
  9430 ;;		 -> STR_35(2), STR_34(6), STR_33(2), STR_32(6), 
  9431 ;;		 -> STR_31(2), STR_30(6), STR_29(2), STR_28(6), 
  9432 ;;		 -> STR_27(2), STR_26(6), STR_25(2), STR_24(6), 
  9433 ;;		 -> STR_23(2), STR_22(6), STR_5(15), STR_2(14), 
  9434 ;;		 -> valorConvUARTbit@string(5), valorConvUART@string(5), STR_1(1), 
  9435 ;;  max_length      2    3[COMRAM] const int 
  9436 ;; Auto vars:     Size  Location     Type
  9437 ;;  UARTSendStri    2    7[COMRAM] int 
  9438 ;; Return value:  Size  Location     Type
  9439 ;;                  1    wreg      void 
  9440 ;; Registers used:
  9441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9442 ;; Tracked objects:
  9443 ;;		On entry : 0/0
  9444 ;;		On exit  : 0/0
  9445 ;;		Unchanged: 0/0
  9446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9447 ;;      Params:         4       0       0       0
  9448 ;;      Locals:         2       0       0       0
  9449 ;;      Temps:          2       0       0       0
  9450 ;;      Totals:         8       0       0       0
  9451 ;;Total ram usage:        8 bytes
  9452 ;; Hardware stack levels used:    1
  9453 ;; Hardware stack levels required when called:    2
  9454 ;; This function calls:
  9455 ;;		i2_UARTSendChar
  9456 ;;		i2_UARTWriteTest
  9457 ;; This function is called by:
  9458 ;;		_ISR
  9459 ;; This function uses a non-reentrant model
  9460 ;;
  9461                           
  9462                           	psect	text49
  9463  002C24                     __ptext49:
  9464                           	opt callstack 0
  9465  002C24                     i2_UARTSendString:
  9466                           	opt callstack 22
  9467  002C24                     
  9468                           ;./bluetooth.h: 58:     int i = 0;
  9469  002C24  0E00               	movlw	0
  9470  002C26  6E09               	movwf	(i2UARTSendString@i+1)^0,c
  9471  002C28  0E00               	movlw	0
  9472  002C2A  6E08               	movwf	i2UARTSendString@i^0,c
  9473                           
  9474                           ;./bluetooth.h: 60:     for (i = 0; i < max_length; i++) {
  9475  002C2C  0E00               	movlw	0
  9476  002C2E  6E09               	movwf	(i2UARTSendString@i+1)^0,c
  9477  002C30  0E00               	movlw	0
  9478  002C32  6E08               	movwf	i2UARTSendString@i^0,c
  9479  002C34                     i2l5007:
  9480  002C34  5004               	movf	i2UARTSendString@max_length^0,w,c
  9481  002C36  5C08               	subwf	i2UARTSendString@i^0,w,c
  9482  002C38  5009               	movf	(i2UARTSendString@i+1)^0,w,c
  9483  002C3A  0A80               	xorlw	128
  9484  002C3C  6E06               	movwf	??i2_UARTSendString^0,c
  9485  002C3E  5005               	movf	(i2UARTSendString@max_length+1)^0,w,c
  9486  002C40  0A80               	xorlw	128
  9487  002C42  5806               	subwfb	??i2_UARTSendString^0,w,c
  9488  002C44  A0D8               	btfss	status,0,c
  9489  002C46  EF27  F016         	goto	i2u532_41
  9490  002C4A  EF29  F016         	goto	i2u532_40
  9491  002C4E                     i2u532_41:
  9492  002C4E  EF2B  F016         	goto	i2l5011
  9493  002C52                     i2u532_40:
  9494  002C52  EF69  F016         	goto	i2l140
  9495  002C56                     i2l5011:
  9496                           
  9497                           ;./bluetooth.h: 62:         if (str[i] == '\0') break;
  9498  002C56  5008               	movf	i2UARTSendString@i^0,w,c
  9499  002C58  2402               	addwf	i2UARTSendString@str^0,w,c
  9500  002C5A  6E06               	movwf	??i2_UARTSendString^0,c
  9501  002C5C  5009               	movf	(i2UARTSendString@i+1)^0,w,c
  9502  002C5E  2003               	addwfc	(i2UARTSendString@str+1)^0,w,c
  9503  002C60  6E07               	movwf	(??i2_UARTSendString+1)^0,c
  9504  002C62  C006  FFF6         	movff	??i2_UARTSendString,tblptrl
  9505  002C66  C007  FFF7         	movff	??i2_UARTSendString+1,tblptrh
  9506  002C6A  6AF8               	clrf	tblptru,c
  9507  002C6C  0E02               	movlw	(high __ramtop+-1)
  9508  002C6E  64F7               	cpfsgt	tblptrh,c
  9509  002C70  D003               	bra	i2u533_47
  9510  002C72  0008               	tblrd		*
  9511  002C74  50F5               	movf	tablat,w,c
  9512  002C76  D005               	bra	i2u533_40
  9513  002C78                     i2u533_47:
  9514  002C78  CFF6 FFE9          	movff	tblptrl,fsr0l
  9515  002C7C  CFF7 FFEA          	movff	tblptrh,fsr0h
  9516  002C80  50EF               	movf	indf0,w,c
  9517  002C82                     i2u533_40:
  9518  002C82  0900               	iorlw	0
  9519  002C84  A4D8               	btfss	status,2,c
  9520  002C86  EF47  F016         	goto	i2u534_41
  9521  002C8A  EF49  F016         	goto	i2u534_40
  9522  002C8E                     i2u534_41:
  9523  002C8E  EF4B  F016         	goto	i2l5015
  9524  002C92                     i2u534_40:
  9525  002C92  EF69  F016         	goto	i2l140
  9526  002C96                     i2l5015:
  9527                           
  9528                           ;./bluetooth.h: 63:         UARTSendChar(str[i]);
  9529  002C96  5008               	movf	i2UARTSendString@i^0,w,c
  9530  002C98  2402               	addwf	i2UARTSendString@str^0,w,c
  9531  002C9A  6E06               	movwf	??i2_UARTSendString^0,c
  9532  002C9C  5009               	movf	(i2UARTSendString@i+1)^0,w,c
  9533  002C9E  2003               	addwfc	(i2UARTSendString@str+1)^0,w,c
  9534  002CA0  6E07               	movwf	(??i2_UARTSendString+1)^0,c
  9535  002CA2  C006  FFF6         	movff	??i2_UARTSendString,tblptrl
  9536  002CA6  C007  FFF7         	movff	??i2_UARTSendString+1,tblptrh
  9537  002CAA  6AF8               	clrf	tblptru,c
  9538  002CAC  0E02               	movlw	(high __ramtop+-1)
  9539  002CAE  64F7               	cpfsgt	tblptrh,c
  9540  002CB0  D003               	bra	i2u535_47
  9541  002CB2  0008               	tblrd		*
  9542  002CB4  50F5               	movf	tablat,w,c
  9543  002CB6  D005               	bra	i2u535_40
  9544  002CB8                     i2u535_47:
  9545  002CB8  CFF6 FFE9          	movff	tblptrl,fsr0l
  9546  002CBC  CFF7 FFEA          	movff	tblptrh,fsr0h
  9547  002CC0  50EF               	movf	indf0,w,c
  9548  002CC2                     i2u535_40:
  9549  002CC2  EC2A  F019         	call	i2_UARTSendChar
  9550  002CC6                     
  9551                           ;./bluetooth.h: 64:         UARTWriteTest();
  9552  002CC6  EC1C  F019         	call	i2_UARTWriteTest	;wreg free
  9553  002CCA                     
  9554                           ;./bluetooth.h: 66:     }
  9555  002CCA  4A08               	infsnz	i2UARTSendString@i^0,f,c
  9556  002CCC  2A09               	incf	(i2UARTSendString@i+1)^0,f,c
  9557  002CCE  EF1A  F016         	goto	i2l5007
  9558  002CD2                     i2l140:
  9559  002CD2  0012               	return		;funcret
  9560  002CD4                     __end_ofi2_UARTSendString:
  9561                           	opt callstack 0
  9562                           
  9563 ;; *************** function i2_UARTSendChar *****************
  9564 ;; Defined at:
  9565 ;;		line 52 in file "./bluetooth.h"
  9566 ;; Parameters:    Size  Location     Type
  9567 ;;  c               1    wreg     unsigned char 
  9568 ;; Auto vars:     Size  Location     Type
  9569 ;;  c               1    0[COMRAM] unsigned char 
  9570 ;; Return value:  Size  Location     Type
  9571 ;;                  1    wreg      void 
  9572 ;; Registers used:
  9573 ;;		wreg, cstack
  9574 ;; Tracked objects:
  9575 ;;		On entry : 0/0
  9576 ;;		On exit  : 0/0
  9577 ;;		Unchanged: 0/0
  9578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9579 ;;      Params:         0       0       0       0
  9580 ;;      Locals:         1       0       0       0
  9581 ;;      Temps:          0       0       0       0
  9582 ;;      Totals:         1       0       0       0
  9583 ;;Total ram usage:        1 bytes
  9584 ;; Hardware stack levels used:    1
  9585 ;; Hardware stack levels required when called:    1
  9586 ;; This function calls:
  9587 ;;		i2_UARTWriteTest
  9588 ;; This function is called by:
  9589 ;;		i2_UARTSendString
  9590 ;; This function uses a non-reentrant model
  9591 ;;
  9592                           
  9593                           	psect	text50
  9594  003254                     __ptext50:
  9595                           	opt callstack 0
  9596  003254                     i2_UARTSendChar:
  9597                           	opt callstack 22
  9598                           
  9599                           ;incstack = 0
  9600                           ;i2UARTSendChar@c stored from wreg
  9601  003254  6E01               	movwf	i2UARTSendChar@c^0,c
  9602  003256                     
  9603                           ;./bluetooth.h: 53:     TXREG = c;
  9604  003256  C001  FFAD         	movff	i2UARTSendChar@c,4013	;volatile
  9605  00325A                     
  9606                           ;./bluetooth.h: 54:     UARTWriteTest();
  9607  00325A  EC1C  F019         	call	i2_UARTWriteTest	;wreg free
  9608  00325E  0012               	return		;funcret
  9609  003260                     __end_ofi2_UARTSendChar:
  9610                           	opt callstack 0
  9611                           
  9612 ;; *************** function i2_UARTWriteTest *****************
  9613 ;; Defined at:
  9614 ;;		line 48 in file "./bluetooth.h"
  9615 ;; Parameters:    Size  Location     Type
  9616 ;;		None
  9617 ;; Auto vars:     Size  Location     Type
  9618 ;;		None
  9619 ;; Return value:  Size  Location     Type
  9620 ;;                  1    wreg      void 
  9621 ;; Registers used:
  9622 ;;		None
  9623 ;; Tracked objects:
  9624 ;;		On entry : 0/0
  9625 ;;		On exit  : 0/0
  9626 ;;		Unchanged: 0/0
  9627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9628 ;;      Params:         0       0       0       0
  9629 ;;      Locals:         0       0       0       0
  9630 ;;      Temps:          0       0       0       0
  9631 ;;      Totals:         0       0       0       0
  9632 ;;Total ram usage:        0 bytes
  9633 ;; Hardware stack levels used:    1
  9634 ;; This function calls:
  9635 ;;		Nothing
  9636 ;; This function is called by:
  9637 ;;		i2_UARTSendChar
  9638 ;;		i2_UARTSendString
  9639 ;; This function uses a non-reentrant model
  9640 ;;
  9641                           
  9642                           	psect	text51
  9643  003238                     __ptext51:
  9644                           	opt callstack 0
  9645  003238                     i2_UARTWriteTest:
  9646                           	opt callstack 23
  9647  003238                     i2l128:
  9648  003238  A2AC               	btfss	4012,1,c	;volatile
  9649  00323A  EF21  F019         	goto	i2u489_41
  9650  00323E  EF23  F019         	goto	i2u489_40
  9651  003242                     i2u489_41:
  9652  003242  EF1C  F019         	goto	i2l128
  9653  003246                     i2u489_40:
  9654  003246  0012               	return		;funcret
  9655  003248                     __end_ofi2_UARTWriteTest:
  9656                           	opt callstack 0
  9657                           
  9658 ;; *************** function i2_UARTReadChar *****************
  9659 ;; Defined at:
  9660 ;;		line 43 in file "./bluetooth.h"
  9661 ;; Parameters:    Size  Location     Type
  9662 ;;		None
  9663 ;; Auto vars:     Size  Location     Type
  9664 ;;  UARTReadChar    1    0[COMRAM] unsigned char 
  9665 ;; Return value:  Size  Location     Type
  9666 ;;                  1    wreg      unsigned char 
  9667 ;; Registers used:
  9668 ;;		wreg, status,2
  9669 ;; Tracked objects:
  9670 ;;		On entry : 0/0
  9671 ;;		On exit  : 0/0
  9672 ;;		Unchanged: 0/0
  9673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9674 ;;      Params:         0       0       0       0
  9675 ;;      Locals:         1       0       0       0
  9676 ;;      Temps:          0       0       0       0
  9677 ;;      Totals:         1       0       0       0
  9678 ;;Total ram usage:        1 bytes
  9679 ;; Hardware stack levels used:    1
  9680 ;; This function calls:
  9681 ;;		Nothing
  9682 ;; This function is called by:
  9683 ;;		_ISR
  9684 ;; This function uses a non-reentrant model
  9685 ;;
  9686                           
  9687                           	psect	text52
  9688  003284                     __ptext52:
  9689                           	opt callstack 0
  9690  003284                     i2_UARTReadChar:
  9691                           	opt callstack 24
  9692  003284                     
  9693                           ;./bluetooth.h: 44:     char ler = RCREG;
  9694  003284  CFAE F001          	movff	4014,i2UARTReadChar@ler	;volatile
  9695  003288                     
  9696                           ;./bluetooth.h: 45:     return ler;
  9697  003288  5001               	movf	i2UARTReadChar@ler^0,w,c
  9698  00328A  0012               	return		;funcret
  9699  00328C                     __end_ofi2_UARTReadChar:
  9700                           	opt callstack 0
  9701                           
  9702 ;; *************** function _setComando *****************
  9703 ;; Defined at:
  9704 ;;		line 39 in file "./bluetooth.h"
  9705 ;; Parameters:    Size  Location     Type
  9706 ;;  c               2    0[COMRAM] PTR unsigned char 
  9707 ;;		 -> STR_50(5), STR_49(11), STR_48(4), STR_47(3), 
  9708 ;;		 -> STR_46(14), STR_45(13), 
  9709 ;; Auto vars:     Size  Location     Type
  9710 ;;		None
  9711 ;; Return value:  Size  Location     Type
  9712 ;;                  1    wreg      void 
  9713 ;; Registers used:
  9714 ;;		wreg, status,2, status,0
  9715 ;; Tracked objects:
  9716 ;;		On entry : 0/0
  9717 ;;		On exit  : 0/0
  9718 ;;		Unchanged: 0/0
  9719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9720 ;;      Params:         2       0       0       0
  9721 ;;      Locals:         0       0       0       0
  9722 ;;      Temps:          0       0       0       0
  9723 ;;      Totals:         2       0       0       0
  9724 ;;Total ram usage:        2 bytes
  9725 ;; Hardware stack levels used:    1
  9726 ;; This function calls:
  9727 ;;		Nothing
  9728 ;; This function is called by:
  9729 ;;		_ISR
  9730 ;; This function uses a non-reentrant model
  9731 ;;
  9732                           
  9733                           	psect	text53
  9734  00326A                     __ptext53:
  9735                           	opt callstack 0
  9736  00326A                     _setComando:
  9737                           	opt callstack 24
  9738  00326A                     
  9739                           ;./bluetooth.h: 40:     comando = c;
  9740  00326A  C001  F0FE         	movff	setComando@c,_comando
  9741  00326E  C002  F0FF         	movff	setComando@c+1,_comando+1
  9742  003272  0012               	return		;funcret
  9743  003274                     __end_of_setComando:
  9744                           	opt callstack 0
  9745                           
  9746 ;; *************** function _ligaTimer0 *****************
  9747 ;; Defined at:
  9748 ;;		line 21 in file "./Timer0.h"
  9749 ;; Parameters:    Size  Location     Type
  9750 ;;		None
  9751 ;; Auto vars:     Size  Location     Type
  9752 ;;		None
  9753 ;; Return value:  Size  Location     Type
  9754 ;;                  1    wreg      void 
  9755 ;; Registers used:
  9756 ;;		None
  9757 ;; Tracked objects:
  9758 ;;		On entry : 0/0
  9759 ;;		On exit  : 0/0
  9760 ;;		Unchanged: 0/0
  9761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9762 ;;      Params:         0       0       0       0
  9763 ;;      Locals:         0       0       0       0
  9764 ;;      Temps:          0       0       0       0
  9765 ;;      Totals:         0       0       0       0
  9766 ;;Total ram usage:        0 bytes
  9767 ;; Hardware stack levels used:    1
  9768 ;; This function calls:
  9769 ;;		Nothing
  9770 ;; This function is called by:
  9771 ;;		_ISR
  9772 ;; This function uses a non-reentrant model
  9773 ;;
  9774                           
  9775                           	psect	text54
  9776  00328C                     __ptext54:
  9777                           	opt callstack 0
  9778  00328C                     _ligaTimer0:
  9779                           	opt callstack 24
  9780  00328C                     
  9781                           ;./Timer0.h: 22:     TMR0ON = 1;
  9782  00328C  8ED5               	bsf	4053,7,c	;volatile
  9783  00328E  0012               	return		;funcret
  9784  003290                     __end_of_ligaTimer0:
  9785                           	opt callstack 0
  9786                           
  9787                           	psect	rparam
  9788  0000                     
  9789                           	psect	temp
  9790  00004D                     btemp:
  9791                           	opt callstack 0
  9792  00004D                     	ds	1
  9793  0000                     int$flags	set	btemp
  9794  0000                     wtemp8	set	btemp+1
  9795  0000                     ttemp5	set	btemp+1
  9796  0000                     ttemp6	set	btemp+4
  9797  0000                     ttemp7	set	btemp+8
  9798                           tosu	equ	0xFFF
  9799                           tosh	equ	0xFFE
  9800                           tosl	equ	0xFFD
  9801                           stkptr	equ	0xFFC
  9802                           pclatu	equ	0xFFB
  9803                           pclath	equ	0xFFA
  9804                           pcl	equ	0xFF9
  9805                           tblptru	equ	0xFF8
  9806                           tblptrh	equ	0xFF7
  9807                           tblptrl	equ	0xFF6
  9808                           tablat	equ	0xFF5
  9809                           prodh	equ	0xFF4
  9810                           prodl	equ	0xFF3
  9811                           indf0	equ	0xFEF
  9812                           postinc0	equ	0xFEE
  9813                           postdec0	equ	0xFED
  9814                           preinc0	equ	0xFEC
  9815                           plusw0	equ	0xFEB
  9816                           fsr0h	equ	0xFEA
  9817                           fsr0l	equ	0xFE9
  9818                           wreg	equ	0xFE8
  9819                           indf1	equ	0xFE7
  9820                           postinc1	equ	0xFE6
  9821                           postdec1	equ	0xFE5
  9822                           preinc1	equ	0xFE4
  9823                           plusw1	equ	0xFE3
  9824                           fsr1h	equ	0xFE2
  9825                           fsr1l	equ	0xFE1
  9826                           bsr	equ	0xFE0
  9827                           indf2	equ	0xFDF
  9828                           postinc2	equ	0xFDE
  9829                           postdec2	equ	0xFDD
  9830                           preinc2	equ	0xFDC
  9831                           plusw2	equ	0xFDB
  9832                           fsr2h	equ	0xFDA
  9833                           fsr2l	equ	0xFD9
  9834                           status	equ	0xFD8


Data Sizes:
    Strings     163
    Constant    0
    Data        8
    BSS         137
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     64      76
    BANK0           160     83     160
    BANK1           256      6      62
    BANK2           256      0       0

Pointer List with Targets:

    strcmp@r	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_66(CODE[6]), STR_64(CODE[4]), STR_62(CODE[11]), STR_60(CODE[3]), 
		 -> STR_58(CODE[14]), STR_56(CODE[13]), STR_54(CODE[5]), STR_21(CODE[5]), 
		 -> STR_19(CODE[5]), STR_17(CODE[5]), STR_15(CODE[5]), STR_13(CODE[5]), 
		 -> STR_11(CODE[5]), STR_9(CODE[5]), STR_7(CODE[5]), STR_4(CODE[5]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_68(CODE[5]), STR_52(CODE[2]), STR_50(CODE[5]), STR_49(CODE[11]), 
		 -> STR_48(CODE[4]), STR_47(CODE[3]), STR_46(CODE[14]), STR_45(CODE[13]), 
		 -> STR_1(CODE[1]), 

    myStrncmp@str2	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_66(CODE[6]), STR_64(CODE[4]), STR_62(CODE[11]), STR_60(CODE[3]), 
		 -> STR_58(CODE[14]), STR_56(CODE[13]), STR_54(CODE[5]), STR_21(CODE[5]), 
		 -> STR_19(CODE[5]), STR_17(CODE[5]), STR_15(CODE[5]), STR_13(CODE[5]), 
		 -> STR_11(CODE[5]), STR_9(CODE[5]), STR_7(CODE[5]), STR_4(CODE[5]), 

    myStrncmp@str1	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_68(CODE[5]), STR_52(CODE[2]), STR_50(CODE[5]), STR_49(CODE[11]), 
		 -> STR_48(CODE[4]), STR_47(CODE[3]), STR_46(CODE[14]), STR_45(CODE[13]), 
		 -> STR_1(CODE[1]), 

    sp__valorConvUARTbit	PTR const unsigned char  size(2) Largest target is 5
		 -> valorConvUARTbit@string(COMRAM[5]), 

    sp__valorConvUART	PTR const unsigned char  size(2) Largest target is 5
		 -> valorConvUART@string(BANK0[5]), 

    UARTSendString@str	PTR unsigned char  size(2) Largest target is 15
		 -> STR_68(CODE[5]), STR_67(CODE[5]), STR_52(CODE[2]), STR_51(CODE[5]), 
		 -> STR_50(CODE[5]), STR_49(CODE[11]), STR_48(CODE[4]), STR_47(CODE[3]), 
		 -> STR_46(CODE[14]), STR_45(CODE[13]), STR_44(CODE[10]), STR_43(CODE[2]), 
		 -> STR_42(CODE[11]), STR_41(CODE[2]), STR_40(CODE[2]), testeADbit@string(BANK1[2]), 
		 -> STR_39(CODE[2]), STR_38(CODE[11]), STR_37(CODE[2]), STR_36(CODE[6]), 
		 -> STR_35(CODE[2]), STR_34(CODE[6]), STR_33(CODE[2]), STR_32(CODE[6]), 
		 -> STR_31(CODE[2]), STR_30(CODE[6]), STR_29(CODE[2]), STR_28(CODE[6]), 
		 -> STR_27(CODE[2]), STR_26(CODE[6]), STR_25(CODE[2]), STR_24(CODE[6]), 
		 -> STR_23(CODE[2]), STR_22(CODE[6]), STR_5(CODE[15]), STR_2(CODE[14]), 
		 -> valorConvUARTbit@string(COMRAM[5]), valorConvUART@string(BANK0[5]), STR_1(CODE[1]), 

    setComando@c	PTR unsigned char  size(2) Largest target is 14
		 -> STR_50(CODE[5]), STR_49(CODE[11]), STR_48(CODE[4]), STR_47(CODE[3]), 
		 -> STR_46(CODE[14]), STR_45(CODE[13]), 

    comando	PTR unsigned char  size(2) Largest target is 14
		 -> STR_68(CODE[5]), STR_52(CODE[2]), STR_50(CODE[5]), STR_49(CODE[11]), 
		 -> STR_48(CODE[4]), STR_47(CODE[3]), STR_46(CODE[14]), STR_45(CODE[13]), 
		 -> STR_1(CODE[1]), 


Critical Paths under _main in COMRAM

    _main->_testeMotores
    _testeLampadas->_bitExtract
    _myStrncmp->_strcmp
    _valorConvUARTbit->_getAD_ANbit
    _getAD_ANbit->_bitExtract
    ___awmod->___awdiv
    _setPID->_posicao
    _posicao->___fladd
    _moverMotor->___fltol
    _lados->_setDutyPWM0
    _lados->_setDutyPWM2
    _lados->_setDutyPWM4
    _lados->_setDutyPWM6
    _setDutyPWM6->___wmul
    _setDutyPWM4->___wmul
    _setDutyPWM2->___wmul
    _setDutyPWM0->___wmul
    _getAD_AN->___fltol
    _readAD_AN->___flmul
    ___flmul->___xxtofl
    ___flsub->___fladd
    ___fladd->___flmul

Critical Paths under _ISR in COMRAM

    _ISR->i2_setDutyPWM0
    _ISR->i2_setDutyPWM2
    _ISR->i2_setDutyPWM4
    _ISR->i2_setDutyPWM6
    i2_setDutyPWM6->i2___wmul
    i2_setDutyPWM4->i2___wmul
    i2_setDutyPWM2->i2___wmul
    i2_setDutyPWM0->i2___wmul
    i2_UARTSendString->i2_UARTSendChar

Critical Paths under _main in BANK0

    _main->_UARTSendString
    _testeMotores->_UARTSendString
    _testeADbit->_UARTSendString
    _testeAD->_UARTSendString
    _valorConvUART->_getAD_AN
    _UARTSendString->_valorConvUART
    _setPID->_configDA
    _posicao->___fldiv
    _moverMotor->___fltol
    ___fldiv->___flsub
    _configDA->_getAD_AN
    _getAD_AN->___fltol
    ___fltol->___fldiv
    ___flsub->___fladd

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_testeADbit

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0  125315
                                             82 BANK0      1     1      0
                       _UARTReadChar
                       _UARTSendChar
                     _UARTSendString
                           _configAD
                         _configBits
                          _configPWM
                        _configUSART
                         _initTimer0
                          _myStrncmp
                        _setDutyPWM0
                        _setDutyPWM2
                        _setDutyPWM4
                        _setDutyPWM6
                             _setPID
                            _testeAD
                         _testeADbit
                      _testeLampadas
                       _testeMotores
 ---------------------------------------------------------------------------------
 (1) _testeMotores                                         3     3      0   18959
                                             63 COMRAM     1     1      0
                                              0 BANK1      2     2      0
                     _UARTSendString
                          _myStrncmp
                        _setDutyPWM0
                        _setDutyPWM2
                        _setDutyPWM4
                        _setDutyPWM6
 ---------------------------------------------------------------------------------
 (1) _testeLampadas                                        4     4      0    7348
                                             32 COMRAM     4     4      0
                         _bitExtract
                          _myStrncmp
 ---------------------------------------------------------------------------------
 (2) _myStrncmp                                            4     0      4    3283
                                             23 COMRAM     4     0      4
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               5     1      4     341
                                             18 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _testeADbit                                           6     6      0   15381
                                              0 BANK1      6     6      0
                     _UARTSendString
                        _getAD_ANbit
                   _valorConvUARTbit
 ---------------------------------------------------------------------------------
 (2) _valorConvUARTbit                                    17    15      2    3582
                                             36 COMRAM    17    15      2
                            ___awdiv
                            ___awmod
                        _getAD_ANbit (ARG)
 ---------------------------------------------------------------------------------
 (2) _getAD_ANbit                                          4     2      2    4152
                                             32 COMRAM     4     2      2
                         _bitExtract
                       _readAD_ANbit
 ---------------------------------------------------------------------------------
 (3) _readAD_ANbit                                         2     0      2       0
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _testeAD                                              2     2      0   21151
                                              0 BANK1      2     2      0
                     _UARTSendString
                           _getAD_AN
                      _valorConvUART
 ---------------------------------------------------------------------------------
 (2) _valorConvUART                                       15    13      2    4147
                                             59 BANK0     15    13      2
                            ___awdiv
                            ___awmod
                           _getAD_AN (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1693
                                             26 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1345
                                             18 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _UARTSendString                                       8     4      4    7468
                                             74 BANK0      8     4      4
                       _UARTSendChar
                      _UARTWriteTest
                           _getAD_AN (ARG)
                        _getAD_ANbit (ARG)
                      _valorConvUART (ARG)
                   _valorConvUARTbit (ARG)
 ---------------------------------------------------------------------------------
 (3) _UARTSendChar                                         1     1      0      31
                                             18 COMRAM     1     1      0
                      _UARTWriteTest
 ---------------------------------------------------------------------------------
 (3) _UARTWriteTest                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setPID                                               8     8      0   44281
                                             67 BANK0      8     8      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                           _configDA
                         _moverMotor
                            _posicao
 ---------------------------------------------------------------------------------
 (2) _posicao                                             20    16      4    7115
                                             61 COMRAM     2     2      0
                                             45 BANK0     18    14      4
                            ___fladd
                            ___fldiv
                             ___fleq
 ---------------------------------------------------------------------------------
 (2) _moverMotor                                           4     0      4   10962
                                             53 BANK0      4     0      4
                            ___fldiv
                             ___fleq
                            ___fltol
                              _lados
 ---------------------------------------------------------------------------------
 (3) _lados                                                3     1      2    7776
                                             28 COMRAM     3     1      2
                        _setDutyPWM0
                        _setDutyPWM2
                        _setDutyPWM4
                        _setDutyPWM6
 ---------------------------------------------------------------------------------
 (2) _setDutyPWM6                                          4     2      2    1823
                                             24 COMRAM     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _setDutyPWM4                                          4     2      2    1733
                                             24 COMRAM     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _setDutyPWM2                                          4     2      2    1913
                                             24 COMRAM     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _setDutyPWM0                                          4     2      2    1823
                                             24 COMRAM     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     952
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     798
                                             18 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1855
                                             20 BANK0     25    17      8
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _configDA                                             8     8      0   10963
                                             59 BANK0      8     8      0
                             ___flge
                           ___xxtofl
                           _getAD_AN
 ---------------------------------------------------------------------------------
 (2) _getAD_AN                                             6     4      2    9536
                                             53 BANK0      6     4      2
                            ___fltol
                         _bitExtract
                          _readAD_AN
 ---------------------------------------------------------------------------------
 (3) _readAD_AN                                            8     4      4    4283
                                             57 COMRAM     4     0      4
                                              0 BANK0      4     4      0
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     836
                                             18 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3413
                                             32 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _bitExtract                                          14     8      6    3873
                                             18 COMRAM    14     8      6
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     381
                                             61 COMRAM     2     2      0
                                             45 BANK0      8     4      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     334
                                             18 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    4907
                                             12 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    4162
                                             57 COMRAM     4     4      0
                                              0 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _initTimer0                                           2     0      2      98
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _configUSART                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configPWM                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configBits                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configAD                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UARTReadChar                                         1     1      0      23
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  8     8      0    3189
                                             10 COMRAM     8     8      0
                         _ligaTimer0
                         _setComando
                     i2_UARTReadChar
                   i2_UARTSendString
                      i2_setDutyPWM0
                      i2_setDutyPWM2
                      i2_setDutyPWM4
                      i2_setDutyPWM6
 ---------------------------------------------------------------------------------
 (7) i2_setDutyPWM6                                        4     2      2     460
                                              6 COMRAM     4     2      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) i2_setDutyPWM4                                        4     2      2     460
                                              6 COMRAM     4     2      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) i2_setDutyPWM2                                        4     2      2     460
                                              6 COMRAM     4     2      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) i2_setDutyPWM0                                        4     2      2     460
                                              6 COMRAM     4     2      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (8) i2___wmul                                             6     2      4     367
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) i2_UARTSendString                                     8     4      4     848
                                              1 COMRAM     8     4      4
                     i2_UARTSendChar
                    i2_UARTWriteTest
 ---------------------------------------------------------------------------------
 (8) i2_UARTSendChar                                       1     1      0      31
                                              0 COMRAM     1     1      0
                    i2_UARTWriteTest
 ---------------------------------------------------------------------------------
 (8) i2_UARTWriteTest                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i2_UARTReadChar                                       1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _setComando                                           2     0      2     478
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _ligaTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UARTReadChar
   _UARTSendChar
     _UARTWriteTest
   _UARTSendString
     _UARTSendChar
       _UARTWriteTest
     _UARTWriteTest
     _getAD_AN (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       _bitExtract
       _readAD_AN
         ___flmul
           ___xxtofl (ARG)
         ___xxtofl
     _getAD_ANbit (ARG)
       _bitExtract
       _readAD_ANbit
     _valorConvUART (ARG)
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _getAD_AN (ARG)
         ___fltol
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _bitExtract
         _readAD_AN
           ___flmul
             ___xxtofl (ARG)
           ___xxtofl
     _valorConvUARTbit (ARG)
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _getAD_ANbit (ARG)
         _bitExtract
         _readAD_ANbit
   _configAD
   _configBits
   _configPWM
   _configUSART
   _initTimer0
   _myStrncmp
     _strcmp
   _setDutyPWM0
     ___wmul
   _setDutyPWM2
     ___wmul
   _setDutyPWM4
     ___wmul
   _setDutyPWM6
     ___wmul
   _setPID
     ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___flsub (ARG)
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___flsub
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _configDA
       ___flge
       ___xxtofl
       _getAD_AN
         ___fltol
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _bitExtract
         _readAD_AN
           ___flmul
             ___xxtofl (ARG)
           ___xxtofl
     _moverMotor
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fleq
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       _lados
         _setDutyPWM0
           ___wmul
         _setDutyPWM2
           ___wmul
         _setDutyPWM4
           ___wmul
         _setDutyPWM6
           ___wmul
     _posicao
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fleq
   _testeAD
     _UARTSendString
       _UARTSendChar
         _UARTWriteTest
       _UARTWriteTest
       _getAD_AN (ARG)
         ___fltol
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _bitExtract
         _readAD_AN
           ___flmul
             ___xxtofl (ARG)
           ___xxtofl
       _getAD_ANbit (ARG)
         _bitExtract
         _readAD_ANbit
       _valorConvUART (ARG)
         ___awdiv
         ___awmod
           ___awdiv (ARG)
         _getAD_AN (ARG)
           ___fltol
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _bitExtract
           _readAD_AN
             ___flmul
               ___xxtofl (ARG)
             ___xxtofl
       _valorConvUARTbit (ARG)
         ___awdiv
         ___awmod
           ___awdiv (ARG)
         _getAD_ANbit (ARG)
           _bitExtract
           _readAD_ANbit
     _getAD_AN
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       _bitExtract
       _readAD_AN
         ___flmul
           ___xxtofl (ARG)
         ___xxtofl
     _valorConvUART
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _getAD_AN (ARG)
         ___fltol
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _bitExtract
         _readAD_AN
           ___flmul
             ___xxtofl (ARG)
           ___xxtofl
   _testeADbit
     _UARTSendString
       _UARTSendChar
         _UARTWriteTest
       _UARTWriteTest
       _getAD_AN (ARG)
         ___fltol
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _bitExtract
         _readAD_AN
           ___flmul
             ___xxtofl (ARG)
           ___xxtofl
       _getAD_ANbit (ARG)
         _bitExtract
         _readAD_ANbit
       _valorConvUART (ARG)
         ___awdiv
         ___awmod
           ___awdiv (ARG)
         _getAD_AN (ARG)
           ___fltol
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _bitExtract
           _readAD_AN
             ___flmul
               ___xxtofl (ARG)
             ___xxtofl
       _valorConvUARTbit (ARG)
         ___awdiv
         ___awmod
           ___awdiv (ARG)
         _getAD_ANbit (ARG)
           _bitExtract
           _readAD_ANbit
     _getAD_ANbit
       _bitExtract
       _readAD_ANbit
     _valorConvUARTbit
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _getAD_ANbit (ARG)
         _bitExtract
         _readAD_ANbit
   _testeLampadas
     _bitExtract
     _myStrncmp
       _strcmp
   _testeMotores
     _UARTSendString
       _UARTSendChar
         _UARTWriteTest
       _UARTWriteTest
       _getAD_AN (ARG)
         ___fltol
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _bitExtract
         _readAD_AN
           ___flmul
             ___xxtofl (ARG)
           ___xxtofl
       _getAD_ANbit (ARG)
         _bitExtract
         _readAD_ANbit
       _valorConvUART (ARG)
         ___awdiv
         ___awmod
           ___awdiv (ARG)
         _getAD_AN (ARG)
           ___fltol
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _bitExtract
           _readAD_AN
             ___flmul
               ___xxtofl (ARG)
             ___xxtofl
       _valorConvUARTbit (ARG)
         ___awdiv
         ___awmod
           ___awdiv (ARG)
         _getAD_ANbit (ARG)
           _bitExtract
           _readAD_ANbit
     _myStrncmp
       _strcmp
     _setDutyPWM0
       ___wmul
     _setDutyPWM2
       ___wmul
     _setDutyPWM4
       ___wmul
     _setDutyPWM6
       ___wmul

 _ISR (ROOT)
   _ligaTimer0
   _setComando
   i2_UARTReadChar
   i2_UARTSendString
     i2_UARTSendChar
       i2_UARTWriteTest
     i2_UARTWriteTest
   i2_setDutyPWM0
     i2___wmul
   i2_setDutyPWM2
     i2___wmul
   i2_setDutyPWM4
     i2___wmul
   i2_setDutyPWM6
     i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      6      3E       7       24.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     53      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     40      4C       1       80.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12A       3        0.0%
DATA                 0      0     12A      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Oct 28 17:29:37 2021

                         _D 00D8                           _I 00DC                           _P 00E0  
              ___fldiv@aexp 008C                ___fldiv@bexp 008B                ___fldiv@sign 0084  
              posicao@local 0091                posicao@total 0099                ___awdiv@sign 0018  
                        _de 00C0                          _kd 00C8                          _dt 00C4  
                        _ki 00CC                          _kp 00D0                          _tf 00BC  
       ___wmul@multiplicand 0015                __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000  
              __CFG_CP2$OFF 000000                __CFG_CP3$OFF 000000                 __CFG_OSC$HS 000000  
               __CFG_LVP$ON 000000                         l200 3026                         l131 3236  
                       l140 293A                         l125 3282                         l134 3252  
                       l143 31EA                         l119 3226                         l160 2E22  
                       l320 2004                         l128 3228                         l313 2152  
                       l153 286E                         l331 2AC0                         l163 3208  
                       l148 2B72                         l172 2674                         l244 2280  
                       l181 30BE                         l166 2354                         l190 304C  
                       l326 2EF6                         l334 1A94                         l254 278C  
                       l238 0CD8                         l319 1FF4                         l247 17C6  
                       l175 2698                         l184 3098                         l193 3290  
                       l169 2394                         l361 1B7E                         l178 31C6  
                       l259 3268                         l187 3072                         l603 29FE  
                       l196 2F50                         l372 30E4                         l631 2D7C  
                       l616 2C22                         l642 25A0                         l900 0596  
                       l901 0584                         l637 255A                         l902 054A  
                       l917 06B0                         l909 0866                         l669 249C  
                       l926 0780                         l942 2FEA                         l927 076E  
                       l954 149E                         l956 12FE                         l965 1344  
                       l990 1102                         l967 13BC                         l959 12C2  
                       l968 13AA                         l993 0F94                         l986 0D9E  
                       l995 100C                         l996 0FFA                __CFG_CPB$OFF 000000  
                       _RC0 007C10                         _RC1 007C11                         _RC2 007C12  
                       _RC3 007C13                         _PID 00D4                __CFG_CPD$OFF 000000  
                       _ISR 0008       __end_ofi2_setDutyPWM0 317E       __end_ofi2_setDutyPWM2 3158  
     __end_ofi2_setDutyPWM4 3132       __end_ofi2_setDutyPWM6 310C              testeLampadas@i 0023  
i2UARTSendString@max_length 0004                         _pos 00E8                ___awmod@sign 0020  
                       wreg 000FE8                __CFG_IESO$ON 000000                ___flmul@aexp 002E  
              ___flmul@bexp 0033                ___flmul@sign 002D                ___flmul@temp 0038  
              ___flmul@prod 0034                        ?_ISR 0001                ___fltol@exp1 003F  
                      l1003 10C4                        l1030 1E6E                        l1041 1E06  
                      l1034 1DAA                        l1027 1D12                        l1051 2E9A  
                      l3101 11B8                        l3111 11F8                        l3103 11BA  
                      l3121 1228                        l3113 1200                        l3105 11C2  
                      l3131 1266                        l3123 1228                        l3115 1204  
                      l3107 11D2                        l4101 0E9A                        l3141 12B2  
                      l3133 1276                        l3109 11E8                        l3311 251A  
                      l3303 249E                        l4111 0F18                        l4103 0EAA  
                      l3151 12FC                        l3143 12C0                        l3135 1286  
                      l3127 123C                        l3119 1218                        l3071 1112  
                      l4031 30DC                        l3321 259E                        l3313 2528  
                      l3305 24CC                        l4121 0F92                        l4113 0F4E  
                      l4105 0EC6                        l4041 0CF6                        l4201 1E3E  
                      l3161 1342                        l3153 130E                        l3145 12CC  
                      l3137 128E                        l3129 1256                        l3081 1152  
                      l3073 1120                        l5001 1A4C                        l3315 253A  
                      l3307 24DC                        l4131 0FF2                        l4123 0FA4  
                      l4115 0F5C                        l4107 0ED2                        l4051 0D3C  
                      l4043 0D06                        l4035 0CDA                        l4203 1E4E  
                      l3171 13A2                        l3155 1324                        l3163 1354  
                      l3147 12EA                        l3139 129E                        l3091 1178  
                      l3083 1154                        l3075 1122                        l5003 1A80  
                      l4211 3228                        l3501 327C                        l3317 2548  
                      l3309 250A                        l4141 1060                        l4125 0FB2  
                      l4117 0F7A                        l4109 0EEE                        l4061 0D68  
                      l4053 0D42                        l4045 0D16                        l4037 0CE6  
                      l4205 1E5C                        l4221 2DDE                        l4213 2D7E  
                      l3181 1410                        l3165 1362                        l3157 132A  
                      l3149 12EC                        l3093 1186                        l3077 1132  
                      l3085 115C                        l3069 1104                        l4029 30C0  
                      l4301 2ECC                        l5101 1A96                        l3503 3280  
                      l3511 31D4                        l4311 03C4                        l3319 2598  
                      l4151 10C8                        l4135 101C                        l4143 1064  
                      l4127 0FB6                        l4119 0F84                        l4071 0DBE  
                      l4063 0D78                        l4055 0D48                        l4047 0D26  
                      l4039 0CF4                        l4207 1E5E                        l4223 2E12  
                      l4215 2D84                        l3191 147A                        l3175 13CC  
                      l3183 1414                        l3167 1366                        l3159 1334  
                      l3095 1188                        l3087 116C                        l3079 1142  
                      l4231 309A                        l4303 2EDE                        l5111 1AB6  
                      l5103 1AAA                        l3513 31A4                        l4401 0578  
                      l4313 03D4                        l4321 03FE                        l4305 03A6  
                      l4161 10F2                        l4153 10D8                        l4145 107E  
                      l4137 1028                        l4129 0FC4                        l4081 0DFE  
                      l4065 0D88                        l4057 0D56                        l4049 0D2C  
                      l4217 2D8A                        l3193 147E                        l3185 142E  
                      l3177 13D8                        l3169 1374                        l3097 1198  
                      l3089 1172                        l4233 30B6                        l4241 3094  
                      l5201 1CB2                        l5121 1AC8                        l5113 1ABA  
                      l5105 1AAC                        l3507 31C8                        l3515 31B8  
                      l4411 05C8                        l4403 0582                        l4331 042E  
                      l4323 040E                        l4315 03E4                        l4307 03B4  
                      l2811 247C                        l4227 2EF8                        l4155 10E6  
                      l4147 1092                        l4139 1036                        l4091 0E48  
                      l4083 0E0A                        l4075 0DD2                        l4067 0D8E  
                      l4059 0D58                        l4171 1D22                        l4219 2D92  
                      l3195 148C                        l3187 1444                        l3179 13E6  
                      l3099 11A8                        l3291 2D12                        l4235 30BA  
                      l4243 304E                        l4251 3044                        l5131 1AD6  
                      l5123 1ACC                        l5115 1ABE                        l5107 1AB0  
                      l3509 31D0                        l4501 0854                        l4421 0604  
                      l4413 05D8                        l4405 05A4                        l4341 046E  
                      l4333 043C                        l4325 0414                        l4317 03F4  
                      l4309 03C2                        l2813 248C                        l2805 2450  
                      l4157 10E8                        l4149 10AC                        l4093 0E54  
                      l4085 0E22                        l4077 0DDE                        l4069 0DAE  
                      l4181 1D60                        l4173 1D38                        l4165 1CBE  
                      l3197 1492                        l3189 145E                        l3293 2D40  
                      l4237 3074                        l4245 306A                        l4253 3048  
                      l4261 31F2                        l5141 1AF2                        l5133 1ADA  
                      l5125 1AD0                        l5117 1AC2                        l5109 1AB2  
                      l4503 0856                        l4431 064A                        l4423 0612  
                      l4415 05E6                        l4407 05B4                        l4351 04A8  
                      l4343 0470                        l4335 043E                        l4327 0426  
                      l4319 03F6                        l2807 245C                        l4159 10EE  
                      l4095 0E64                        l4087 0E2E                        l4079 0DE8  
                      l4191 1DE8                        l4183 1D92                        l4167 1CCE  
                      l4271 2350                        l3199 1494                        l3295 2D50  
                      l3287 2CD4                        l4239 3090                        l4247 306E  
                      l4255 324A                        l4511 294E                        l4263 31F8  
                      l5151 1B54                        l5143 1AFC                        l5135 1ADE  
                      l5127 1AD2                        l5119 1AC6                        l3481 3214  
                      l3473 320A                        l4441 06C6                        l4433 067E  
                      l4425 0614                        l4417 05F4                        l4361 04BC  
                      l4353 04AC                        l4337 044E                        l4345 0478  
                      l4329 0428                        l2809 246C                        l4097 0E70  
                      l4089 0E3A                        l4193 1DF6                        l4185 1D94  
                      l4177 1D4C                        l4169 1CDC                        l4273 2352  
                      l3297 2D74                        l3289 2D02                        l4249 3028  
                      l4257 324E                        l4601 2912                        l4521 2974  
                      l4513 2956                        l4265 3200                        l5161 1BD6  
                      l5153 1B7A                        l5145 1B22                        l5137 1AE2  
                      l5129 1AD4                        l3491 321E                        l3483 3216  
                      l3475 320E                        l4451 0702                        l4443 06D6  
                      l4435 0680                        l4427 061E                        l4419 0600  
                      l4371 04D0                        l4363 04C0                        l4355 04B0  
                      l4347 0488                        l4339 045E                        l4099 0E80  
                      l4195 1E14                        l4187 1DA0                        l4179 1D54  
                      l4275 2362                        l3299 2D7A                        l4603 2916  
                      l4531 29AC                        l4523 297C                        l4515 295A  
                      l4507 293C                        l4611 2B52                        l4259 31EC  
                      l4291 2E76                        l4283 2E24                        l5171 1C32  
                      l5163 1BDE                        l5155 1BA4                        l5147 1B2A  
                      l5139 1AE6                        l3493 3220                        l3485 3218  
                      l3477 3210                        l4461 072E                        l4453 0704  
                      l4437 0690                        l4429 0624                        l4381 04E4  
                      l4373 04D4                        l4365 04C4                        l4357 04B4  
                      l4349 049A                        l2781 23EC                        l2773 2396  
                      l4197 1E16                        l4189 1DDC                        l4277 2376  
                      l4269 2282                        l4701 1FAC                        l4605 291C  
                      l4541 29D8                        l4533 29B2                        l4525 298E  
                      l4517 2968                        l4509 2940                        l4613 2B5A  
                      l4285 2E28                        l5181 1C3E                        l5173 1C36  
                      l5165 1BE2                        l5157 1BAC                        l5149 1B50  
                      l3495 3222                        l3487 321A                        l3479 3212  
                      l4471 0766                        l4455 0712                        l4447 06EA  
                      l4463 0730                        l4439 06A0                        l4391 0542  
                      l4375 04D8                        l4367 04C8                        l4359 04B8  
                      l4383 04E8                        l2783 23EE                        l2775 23AE  
                      l4199 1E1A                        l4279 2378                        l4295 2E9E  
                      l4711 2A32                        l4703 1FE0                        l4535 29C8  
                      l4527 2996                        l4543 29DE                        l4519 2970  
                      l4551 2B74                        l4615 2B5E                        l4607 2AC2  
                      l4631 285A                        l4623 278E                        l4287 2E30  
                      l5191 1C94                        l5183 1C5E                        l5175 1C38  
                      l5167 1C08                        l5159 1BB0                        l3497 3224  
                      l3489 321C                        l4481 07E4                        l4457 071A  
                      l4449 06F4                        l4465 073E                        l4393 0558  
                      l4385 04EC                        l4377 04DC                        l4369 04CC  
                      l4721 2FB6                        l2785 23FE                        l4297 2EA2  
                      l4713 2A52                        l4545 29EE                        l4537 29D0  
                      l4529 299E                        l4561 2BA0                        l4553 2B78  
                      l4617 2B64                        l4609 2B46                        l4641 2670  
                      l4633 2860                        l4625 2842                        l4289 2E5A  
                      l4801 0A16                        l5193 1CA0                        l5185 1C72  
                      l5177 1C3A                        l5169 1C0C                        l3763 3260  
                      l4491 082A                        l4475 0790                        l4483 07E6  
                      l4467 0742                        l4459 071E                        l4395 0564  
                      l4387 0516                        l4379 04E0                        l2795 2428  
                      l2787 2402                        l2779 23C2                        l4299 2EB4  
                      l4715 2A94                        l4547 29F6                        l4539 29D2  
                      l4571 2BD8                        l4563 2BA8                        l4555 2B86  
                      l4619 2B6A                        l4643 2672                        l4635 2866  
                      l4627 284E                        l4811 0A60                        l4803 0A22  
                      l4731 086C                        l5195 1CAC                        l5187 1C7C  
                      l5179 1C3C                        l3765 3264                        l4493 0838  
                      l4485 07F6                        l4477 079C                        l4469 0750  
                      l4397 0568                        l4389 0532                        l2797 2432  
                      l2789 2410                        l4717 2AA8                        l4709 2A00  
                      l4581 2C12                        l4573 2BEE                        l4565 2BBA  
                      l4557 2B8E                        l4645 2682                        l4629 2854  
                      l4661 301E                        l4653 2FEC                        l4901 215C  
                      l4821 0A92                        l4813 0A7C                        l4805 0A30  
                      l4741 0898                        l4733 0882                        l5197 1CAE  
                      l5189 1C88                        l4495 083E                        l4487 0806  
                      l4479 07AA                        l4399 0576                        l4719 2FA4  
                      l2799 243C                        l4671 2010                        l4591 2882  
                      l4583 2C1A                        l4575 2BF6                        l4567 2BC2  
                      l4559 2B92                        l4911 14A0                        l4647 268E  
                      l4639 25A2                        l4655 3012                        l4903 221C  
                      l4831 0AE8                        l4823 0AAA                        l4815 0A88  
                      l4751 08F2                        l4743 08A6                        l5199 1CB0  
                      l4497 0840                        l4489 0826                        l4681 2132  
                      l4673 2030                        l4665 2006                        l4577 2BFC  
                      l4569 2BCA                        l4921 156E                        l4913 14B6  
                      l4649 2690                        l4841 0B26                        l4833 0B04  
                      l4825 0AB8                        l4809 0A5A                        l4761 091E  
                      l4753 0908                        l4729 0868                        l4499 0846  
                      l4683 2136                        l4675 2078                        l4691 1E9A  
                      l4595 28A0                        l4579 2C02                        l4931 1656  
                      l4923 159E                        l4915 14E6                        l4907 2246  
                      l4851 0B7C                        l4843 0B3E                        l4835 0B1C  
                      l4771 0968                        l4763 092A                        l4755 0914  
                      l4747 08D0                        l4739 088C                        l4677 20CA  
                      l4693 1EEC                        l4685 1E70                        l4589 2870  
                      l4941 1724                        l4933 166C                        l4925 15B4  
                      l4917 14FC                        l4909 2260                        l4861 0BBA  
                      l4853 0B98                        l4845 0B4C                        l4829 0AE2  
                      l4781 099A                        l4773 0984                        l4765 0938  
                      l4749 08D6                        l4679 2100                        l4695 1F58  
                      l4599 28E0                        l4943 173A                        l4935 1682  
                      l4927 15CA                        l4919 1512                        l4871 0C10  
                      l4863 0BD2                        l4855 0BB0                        l4791 09E4  
                      l4783 09A6                        l4775 0990                        l4697 1F5E  
                      l4945 17AC                        l4937 16DE                        l4929 1626  
                      l4961 26DE                        l4953 26A4                        l4881 0C4E  
                      l4873 0C2C                        l4865 0BE0                        l4849 0B76  
                      l4793 0A00                        l4785 09B4                        l4769 0962  
                      l4699 1F7A                        l4939 170E                        l4971 2754  
                      l4963 270C                        l4955 26AC                        l4947 269A  
                      l4891 0CA4                        l4883 0C66                        l4875 0C44  
                      l4795 0A0C                        l4981 17F0                        l4973 2770  
                      l4965 2722                        l4957 26B2                        l4893 0CC0  
                      l4885 0C74                        l4869 0C0A                        l4789 09DE  
                      l4991 1900                        l4983 1826                        l4975 17C8  
                      l4967 2738                        l4959 26C8                        l4895 2154  
                      l4993 1934                        l4985 185A                        l4977 17CC  
                      l4969 274E                        l4889 0C9E                        l4995 1968  
                      l4987 186A                        l4979 17E0                        l4997 19C0  
                      l4989 18DA                        l4999 1A18                        STR_1 03A1  
                      STR_2 0310                        STR_3 0394                        STR_4 0394  
                      STR_5 0301                        STR_7 0394                        STR_9 0394  
                      u3000 129E                        u3001 129A                        u3010 12C0  
                      u3011 12BC                        u3100 13CC                        u3020 12EA  
                      u3101 13C8                        u3021 12E6                        u3110 13E6  
                      u3030 130E                        u3111 13E2                        u3031 130A  
                      u3120 142E                        u3040 1324                        u3121 142A  
                      u3041 1320                        u2410 23AE                        u4010 0CF4  
                      u3130 145E                        u3050 1342                        u2411 23AA  
                      u4011 0CF0                        u3131 145A                        u3051 133E  
                      u3300 24CC                        u2420 23E2                        u4100 0F92  
                      u4020 0D06                        u3140 148C                        u3060 1362  
                      u3301 24C8                        u4101 0F8E                        u4021 0D02  
                      u3141 1488                        u3061 135E                        u3310 250A  
                      u2430 2410                        u4110 0FB2                        u4030 0D16  
                      u3070 1374                        u3311 2506                        u2431 240C  
                      u4111 0FAE                        u4031 0D12                        u3071 1370  
                      u3320 2528                        u2440 2424                        u4120 0FC4  
                      u4040 0D56                        u4200 1CCE                        u5000 2152  
                      u3080 13A2                        u3321 2524                        u2441 2420  
                      u2425 23D8                        u4121 0FC0                        u4041 0D52  
                      u4201 1CCA                        u5001 214E                        u3081 139E  
                      u3330 2548                        u2450 244C                        u4130 0FF2  
                      u4050 0D68                        u4210 1CDC                        u3090 13B8  
                      u5010 1EEC                        u3331 2544                        u2451 2448  
                      u4131 0FEE                        u4051 0D64                        u4211 1CD8  
                      u3091 13B4                        u5011 1EE8                        u3340 2598  
                      u2460 246C                        u4140 1008                        u4060 0D78  
                      u4220 1D38                        u5020 1F7A                        u4300 3236  
                      u5100 0A00                        u3341 2594                        u2461 2468  
                      u4141 1004                        u4061 0D74                        u4221 1D34  
                      u5021 1F76                        u4301 3232                        u5101 09FC  
                      u2470 247C                        u4150 101C                        u4070 0DAE  
                      u4230 1D8E                        u3270 2D02                        u5030 1FAC  
                      u5110 0A56                        u2471 2478                        u4151 1018  
                      u4071 0DAA                        u4231 1D8A                        u3271 2CFE  
                      u5031 1FA8                        u5111 0A52                        u4400 03E4  
                      u4160 1036                        u4080 0DBE                        u4240 1DD8  
                      u3280 2D40                        u5040 2A32                        u5200 0CC0  
                      u5120 0A7C                        u4401 03E0                        u4161 1032  
                      u4081 0DBA                        u4241 1DD4                        u3281 2D3C  
                      u5041 2A2E                        u5201 0CBC                        u5121 0A78  
                      u4410 0426                        u4314 2F10                        u4170 107E  
                      u4090 0F38                        u4250 1DF6                        u4330 2362  
                      u3290 2D74                        u5210 218A                        u5130 0ADE  
                      u5050 08CC                        u4411 0422                        u4315 2F0A  
                      u4171 107A                        u4251 1DF2                        u4331 235E  
                      u3291 2D70                        u5211 2184                        u5131 0ADA  
                      u5051 08C8                        u4500 0558                        u4420 043C  
                      u4324 2F36                        u4180 10AC                        u4260 1E06  
                      u4340 2E5A                        u5300 2280                        u5140 0B04  
                      u5060 08F2                        u4501 0554                        u4421 0438  
                      u4325 2F30                        u4181 10A8                        u4261 1E02  
                      u4341 2E56                        u5301 227C                        u5141 0B00  
                      u5061 08EE                        u4510 0576                        u4430 044E  
                      u4190 10E6                        u4270 1E14                        u5310 2770  
                      u4350 2E76                        u5230 21BA                        u5150 0B72  
                      u5070 095E                        u4511 0572                        u4431 044A  
                      u4191 10E2                        u4095 0F2E                        u4271 1E10  
                      u5311 276C                        u4351 2E72                        u5231 21B4  
                      u5151 0B6E                        u5071 095A                        u4600 06C6  
                      u4520 0596                        u4440 045E                        u4280 1E4E  
                      u2920 1120                        u4360 2EB4                        u5160 0B98  
                      u5080 0984                        u4601 06C2                        u4521 0592  
                      u4441 045A                        u4281 1E4A                        u2921 111C  
                      u4361 2EB0                        u5225 218C                        u5161 0B94  
                      u5081 0980                        u4610 06D6                        u4530 05A4  
                      u4450 049A                        u4290 1E5C                        u2930 1132  
                      u4370 2EDE                        u5250 21EA                        u5170 0C06  
                      u5090 09DA                        u4611 06D2                        u4531 05A0  
                      u4451 0496                        u4291 1E58                        u2931 112E  
                      u4371 2EDA                        u5251 21E4                        u5171 0C02  
                      u5091 09D6                        u4700 07AA                        u4620 0702  
                      u4540 05B4                        u4460 04A8                        u4380 03C2  
                      u2940 1142                        u5180 0C2C                        u5500 1BA4  
                      u4701 07A6                        u4621 06FE                        u4541 05B0  
                      u4461 04A4                        u4381 03BE                        u2941 113E  
                      u5245 21BC                        u5181 0C28                        u5501 1BA0  
                      u4710 07E4                        u4630 0712                        u4550 05E6  
                      u4470 0516                        u4390 03D4                        u2950 1186  
                      u5270 221A                        u5190 0C9A                        u5510 1BD6  
                      u4711 07E0                        u4631 070E                        u4551 05E2  
                      u4471 0512                        u4391 03D0                        u2951 1182  
                      u5271 2214                        u5191 0C96                        u5511 1BD2  
                      u4720 07F6                        u4640 072E                        u4560 05F4  
                      u4480 052E                        u2960 1198                        u4800 29AC  
                      u5520 1C08                        u4721 07F2                        u4641 072A  
                      u4561 05F0                        u4481 0528                        u2961 1194  
                      u4801 29A8                        u5265 21EC                        u5521 1C04  
                      u4730 0806                        u4650 073E                        u4570 0612  
                      u4490 0530                        u2970 11A8                        u4810 29C8  
                      u5290 2242                        u5530 1C32                        u4731 0802  
                      u4651 073A                        u4571 060E                        u2971 11A4  
                      u4811 29C4                        u5291 223E                        u5531 1C2E  
                      u4740 0826                        u4660 0750                        u4580 064A  
                      u2980 11E8                        u4900 289C                        u4820 29EE  
                      u5540 1C5E                        u4741 0822                        u4661 074C  
                      u4581 0646                        u2981 11E4                        u4901 2898  
                      u4821 29EA                        u5285 221C                        u5541 1C5A  
                      u4750 0838                        u4670 0766                        u4590 0690  
                      u2990 1228                        u4910 28CC                        u4830 2B86  
                      u5470 1B22                        u4751 0834                        u4671 0762  
                      u4591 068C                        u2991 1224                        u4831 2B82  
                      u5607 0AB0                        u5471 1B1E                        u4760 0854  
                      u4680 077C                        u4920 28DC                        u4840 2BA0  
                      u5480 1B50                        u4761 0850                        u4681 0778  
                      u4921 28D8                        u4841 2B9C                        u5617 0B44  
                      u5481 1B4C                        u4690 0790                        u4930 290E  
                      u4770 294E                        u4850 2BBA                        u5490 1B7A  
                      u4691 078C                        u4771 294A                        u4851 2BB6  
                      u5627 0BD8                        u5491 1B76                        u4940 293A  
                      u4780 2968                        u4860 2BD8                        u4941 2936  
                      u4917 28C2                        u4781 2964                        u4861 2BD4  
                      u5637 0C6C                        u5557 1A9E                        u4790 298E  
                      u4870 2BEE                        u4791 298A                        u4871 2BEA  
                      u4951 2B4C                        u5647 2250                        u5567 089E  
                      u4880 2C12                        u4937 2904                        u4881 2C0E  
                      u4961 2848                        u5657 277C                        u5577 0930  
                      u4970 2682                        u5667 17B8                        u4971 267E  
                      u5587 09AC                        u4980 3012                        u4981 300E  
                      u5597 0A28                        u4990 20CA                        u4991 20C6  
                      _TRMT 007D61               __CFG_FCMEN$ON 000000              i2_UARTReadChar 3284  
 __size_ofi2_UARTSendString 00B0                        _main 1A96                        _erro 00E4  
                      fsr0h 000FEA                        indf0 000FEF                        fsr2h 000FDA  
                      fsr0l 000FE9                        fsr1l 000FE1                        fsr2l 000FD9  
                      btemp 004D               testeMotores@i 0138                        prodh 000FF4  
                      prodl 000FF3              i2_UARTSendChar 3254                        start 024A  
           ??_testeLampadas 0021             ___fldiv@new_exp 0085               __CFG_MCLRE$ON 000000  
              ___param_bank 000000            _valorConvUARTbit 278E                       ??_ISR 000B  
             ?_readAD_ANbit 0013        __size_of_getAD_ANbit 00F8               ___fltol@sign1 003E  
           i2UARTSendChar@c 0001             __end_of___fladd 0868                       ?_main 0001  
           __end_of___fldiv 14A0             __end_of___awdiv 2A00                       STR_11 0394  
                     STR_21 0394                       STR_13 0394                       STR_30 0371  
                     STR_22 0359                       STR_31 03A2                       STR_15 0394  
                     STR_23 03A2                       STR_40 03A2                       STR_32 0377  
                     STR_24 035F                       STR_41 03A2                       STR_33 03A2  
                     STR_25 03A2                       STR_17 0394                       STR_42 0339  
                     STR_50 0394                       STR_34 037D                       STR_26 0365  
                     STR_43 03A2                       STR_35 03A2                       STR_27 03A2  
                     STR_19 0394                       STR_51 038F                       STR_60 039D  
                     STR_52 03A0                       STR_36 0383                       STR_28 036B  
                     STR_44 034F             __end_of___awmod 2C24                       STR_37 03A2  
                     STR_29 03A2                       STR_45 032C                       STR_54 0394  
                     STR_62 0344                       STR_38 0339                       STR_46 031E  
                     STR_39 03A2                       STR_47 039D                       STR_64 0399  
                     STR_56 032C                       STR_48 0399                       STR_65 0389  
                     STR_49 0344                       STR_66 0389                       STR_58 031E  
                     STR_67 038F                       STR_68 0394             __end_of___flmul 1104  
           __end_of___flsub 2FEC             __end_of___fltol 249E                       _T0CON 000FD5  
           ___awdiv@divisor 0015                       _PDC0H 000F78                       _PDC1H 000F76  
                     _DTCON 000F6D                       _PDC0L 000F79                       _PDC2H 000F74  
                     _PDC1L 000F77                       _PDC3H 000F72                       _PDC2L 000F75  
                     _PDC3L 000F73                       i2l122 3272                       i2l131 3246  
                     i2l140 2CD2                       i2l125 328A                       i2l134 325E  
                     i2l128 3238                       i2l181 317C                       i2l190 310A  
                     i2l184 3156                       i2l344 0054                       i2l265 328E  
                     i2l353 0226                       i2l187 3130                       i2l372 31A2  
           ___awdiv@counter 0017                       _RCREG 000FAE                       _TMR0L 000FD6  
                     _SPBRG 000FAF                       _PORTB 000F81                       _PORTC 000F82  
                     _PORTD 000F83                       _PORTE 000F84                       _TRISA 000F92  
                     _TRISB 000F93                       _TRISC 000F94                       _TRISD 000F95  
                     _TRISE 000F96                       _TXREG 000FAD               __CFG_WRT0$OFF 000000  
             __CFG_WRT1$OFF 000000               __CFG_WRT2$OFF 000000               __CFG_WRT3$OFF 000000  
            __CFG_EBTR0$OFF 000000              __CFG_EBTR1$OFF 000000              __CFG_EBTR2$OFF 000000  
            __CFG_EBTR3$OFF 000000               __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000  
             __CFG_WRTD$OFF 000000              __CFG_EBTRB$OFF 000000               getAD_AN@porta 0095  
                     _lados 2E9C                       _erroi 00B8      __end_ofi2_UARTReadChar 328C  
                     _posin 00EC              __CFG_BOREN$OFF 000000                       tablat 000FF5  
           __end_of_testeAD 17C8             __end_of_posicao 2006            __end_ofi2___wmul 31A4  
    __end_ofi2_UARTSendChar 3260                       ttemp5 004E                       ttemp6 0051  
                     ttemp7 0055                       status 000FD8                       wtemp8 004E  
          testeADbit@string 013A             __initialization 2F52              __CFG_HPOL$HIGH 000000  
              __end_of_main 1CBC              ??_readAD_ANbit 0015              __CFG_LPOL$HIGH 000000  
                    ??_main 00B2              _readAD_AN$1565 0060               __activetblptr 000002  
              ?_setDutyPWM0 0019                ?_setDutyPWM2 0019                ?_setDutyPWM4 0019  
              ?_setDutyPWM6 0019          valorConvUART@F3426 00B3               lados@porcVelo 001D  
                    _ADCON3 000F9A                      ?_lados 001D       i2setDutyPWM0@porcVelo 0007  
           i2_UARTWriteTest 3238                      _ADRESH 000FC4                      _ADRESL 000FC3  
          ___awdiv@dividend 0013              getAD_AN@ANread 0097             ?i2_UARTReadChar 0001  
                    _ANSEL0 000FB8                      _ANSEL1 000FB9                      i2l5011 2C56  
                    i2l5005 2C24              __CFG_WDTEN$OFF 000000                      i2l5015 2C96  
                    i2l5007 2C34                      i2l5031 0060                      i2l5023 002A  
                    i2l5017 2CC6                      i2l5041 00A8                      i2l5033 0072  
                    i2l5025 0038                      i2l5019 2CCA                      i2l5051 0100  
                    i2l5043 00BC                      i2l5035 0076                      i2l5027 0046  
                    i2l5061 0152                      i2l5053 010C                      i2l5045 00CE  
                    i2l5037 008A                      i2l5029 005A                      i2l5071 01A2  
                    i2l5063 0164                      i2l5055 0120                      i2l5047 00DA  
                    i2l5039 009C                      i2l3801 3288                      i2l5081 01E6  
                    i2l5073 01B6                      i2l5065 0170                      i2l5057 0132  
                    i2l5049 00EE                      i2l3467 317E                      i2l5083 01E8  
                    i2l5075 01C2                      i2l5091 0202                      i2l5067 0184  
                    i2l5059 013E                      i2l3469 319A                      i2l5085 01EA  
                    i2l5077 01CE                      i2l5069 0196                      i2l5093 0204  
                    i2l3823 3158                      i2l3831 314E                      i2l5095 0212  
                    i2l5087 01EC                      i2l5079 01DA                      i2l3825 3174  
                    i2l3833 3152                      i2l3841 30E6                      i2l5097 0216  
                    i2l5089 01EE                      i2l3499 326A                      i2l3827 3178  
                    i2l3835 310C                      i2l3843 3102                      i2l5099 0224  
                    i2l4725 3256                      i2l3829 3132                      i2l3837 3128  
                    i2l3845 3106                      i2l3767 328C                      i2l4727 325A  
                    i2l3839 312C                      i2l4587 3238                      i2l3799 3284  
                    _PTCON0 000F7F                      _PTCON1 000F7E                      _TMR0IF 007F92  
            __CFG_WINEN$OFF 000000                      _TMR0ON 007EAF             ?i2_UARTSendChar 0001  
                    _PTPERH 000F7A                      _PTPERL 000F7B            __end_of_getAD_AN 2396  
        valorConvUART@valor 009B            __end_of___xxtofl 1E70       i2setDutyPWM2@porcVelo 0007  
      __size_of_configUSART 001E            __end_of_configAD 31EC            __end_of_configDA 2154  
         i2UARTReadChar@ler 0001                      ___flge 249E                      ___fleq 2CD4  
                 ??___fladd 003A                      ___wmul 30C0       i2setDutyPWM4@porcVelo 0007  
                 ??___fldiv 007C                   ??___awdiv 0017              __CFG_STVREN$ON 000000  
                 ??___awmod 001F                   ??___flmul 0029                   ??___flsub 003E  
                 ??___fltol 0091      valorConvUARTbit@dezena 002B       _valorConvUARTbit$1564 002F  
                    _setPID 17C8      valorConvUARTbit@milhar 0027                      _millis 00F0  
                    clear_0 2F78                      clear_1 2F84     __size_of_UARTSendString 00CC  
                    clear_2 2F90            ___awdiv@quotient 0019             ___awmod@divisor 001D  
                    _sensor 011C             ___awmod@counter 001F                      _strcmp 2E24  
    valorConvUARTbit@string 0031       i2setDutyPWM6@porcVelo 0007                __mediumconst 0000  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
                 ??_testeAD 0138                   ??_posicao 003E                  ___flge@ff1 0013  
                ___flge@ff2 0017                ___xxtofl@arg 001D                ___xxtofl@exp 001C  
              ___xxtofl@val 0013                  ___fleq@ff1 0013                  ___fleq@ff2 0017  
          i2_UARTSendString 2C24          _valorConvUART$1563 00A3                  __accesstop 0060  
   __end_of__initialization 2F96               ___rparam_used 000001                  ___fltol@f1 008D  
         i2setDutyPWM0@velo 0009           i2setDutyPWM2@velo 0009           i2setDutyPWM4@velo 0009  
           __CFG_T1OSCMX$ON 000000           i2setDutyPWM6@velo 0009              __pcstackCOMRAM 0001  
              __pidataBANK0 3274               __end_of_lados 2EF8       __end_of_UARTWriteTest 3238  
     __end_of_valorConvUART 2B74     __end_ofi2_UARTWriteTest 3248                   ?i2___wmul 0001  
  UARTSendString@max_length 00AC          __size_of_configPWM 0024    __end_of_valorConvUARTbit 2870  
                   ??_lados 001F        __end_of_readAD_ANbit 320A          __size_of_readAD_AN 00A6  
                __pbssBANK0 00B3                  __pbssBANK1 0100                  _bitExtract 2EF8  
               setComando@c 0001                     ?___flge 0013                     ?___fleq 0013  
                   ?___wmul 0013             __CFG_WDPS$32768 000000                     ?_setPID 0001  
        __size_of_myStrncmp 003C                     ?_strcmp 0013                  ??i2___wmul 0005  
                 ?_getAD_AN 0095                   ?___xxtofl 0013                  _configBits 3290  
       valorConvUART@dezena 009F        __size_of_setDutyPWM0 0026        __size_of_setDutyPWM2 0026  
      __size_of_setDutyPWM4 0026        __size_of_setDutyPWM6 0026                     _OVDCOND 000F6B  
                   _OVDCONS 000F6A                     _PID_int 00F4                     _PWMCON0 000F6F  
                   _PWMCON1 000F6E               ?_UARTReadChar 0001                   ?_configAD 0001  
                 ?_configDA 0001         setDutyPWM0@porcVelo 0019         valorConvUART@string 00A5  
             ?_UARTSendChar 0001                   _ADCHSbits 000F99             __CFG_PWMPIN$OFF 000000  
                _ligaTimer0 328C         setDutyPWM2@porcVelo 0019             __CFG_PWRTEN$OFF 000000  
                   __Hparam 0000      __size_ofi2_setDutyPWM0 0026      __size_ofi2_setDutyPWM2 0026  
    __size_ofi2_setDutyPWM4 0026      __size_ofi2_setDutyPWM6 0026                     __Lparam 0000  
     __end_of_testeLampadas 2282           __end_of_configPWM 31C8           i2UARTSendString@i 0008  
             ??_getAD_ANbit 0023             __size_of___flge 0104             __size_of___fleq 00AA  
                   ___fladd 03A6                     ___fldiv 1104                  _initTimer0 3260  
                   ___awdiv 293C                     ___awmod 2B74                     ___flmul 0CDA  
       setDutyPWM4@porcVelo 0019                     ___flsub 2FA4                     ___fltol 2396  
           __size_of___wmul 0026                __psmallconst 0300              _UARTSendString 2870  
         __end_of_readAD_AN 2E24                     __pcinit 2F52             __size_of_setPID 02CE  
                   __ramtop 0300     valorConvUARTbit@centena 0029                     __ptext0 1A96  
                   __ptext1 0868                     __ptext2 2154                     __ptext3 2FEC  
                   __ptext4 2E24                     __ptext5 269A                     __ptext6 278E  
                   __ptext7 25A2                     __ptext8 31EC                     __ptext9 14A0  
                   _comando 00FE             __size_of_strcmp 0078                __size_of_ISR 0242  
          ?i2_UARTWriteTest 0001         setDutyPWM6@porcVelo 0019                  ??_getAD_AN 0040  
                   _leitura 0100                  ??___xxtofl 0017            ??i2_UARTReadChar 0001  
          ___awmod@dividend 001B                     _vdig_AN 004B                     _testeAD 14A0  
            ??_UARTReadChar 0013                     _posicao 1E70            ??i2_UARTSendChar 0001  
   valorConvUARTbit@unidade 002D                  ??_configAD 0013                  ??_configDA 009B  
                _setComando 326A        end_of_initialization 2F96              ??_UARTSendChar 0013  
         __end_of_myStrncmp 3028               __Lmediumconst 0000         i2___wmul@multiplier 0001  
               ?_bitExtract 0013            bitExtract@numero 0013                  _moverMotor 2A00  
                 _RCSTAbits 000FAB      __end_of_UARTSendString 293C                     postdec1 000FE5  
                   postdec2 000FDD                 testeADbit@i 013C                     postinc0 000FEE  
                   postinc2 000FDE                  _testeADbit 269A               ?_testeMotores 0001  
                   strcmp@l 0013                     strcmp@r 0015    __end_ofi2_UARTSendString 2CD4  
                 _PORTBbits 000F81         __end_of_getAD_ANbit 269A                 ___fladd@grs 006B  
               ?_configBits 0001               i2_setDutyPWM0 3158               i2_setDutyPWM2 3132  
             i2_setDutyPWM4 310C               i2_setDutyPWM6 30E6       __size_of_readAD_ANbit 001E  
             ___xxtofl@sign 001B                   _TRISCbits 000F94                 ___fldiv@grs 0087  
               ___fldiv@rem 0080                 ___flmul@grs 002F               ??_configUSART 0013  
               ?_ligaTimer0 0001                   _TXSTAbits 000FAC             UARTReadChar@ler 0013  
           ?_UARTSendString 00AA                 ?_initTimer0 0013             testeADbit@F3478 00F6  
            ??_testeMotores 0040              __end_of___flge 25A2              __end_of___fleq 2D7E  
            __end_of___wmul 30E6                _readAD_ANbit 31EC              __end_of_setPID 1A96  
    initTimer0@tempoInicial 0013            i2___wmul@product 0005              ?i2_setDutyPWM0 0007  
            ?i2_setDutyPWM2 0007              ?i2_setDutyPWM4 0007              ?i2_setDutyPWM6 0007  
       __size_of_bitExtract 005A              __end_of_strcmp 2E9C         start_initialization 2F52  
               __end_of_ISR 024A           __size_ofi2___wmul 0026                 ?_setComando 0001  
         ?_valorConvUARTbit 0025          ??_valorConvUARTbit 0027       valorConvUARTbit@F3434 0041  
           setDutyPWM0@velo 001B             setDutyPWM2@velo 001B               myStrncmp@str1 0018  
             myStrncmp@str2 001A             setDutyPWM4@velo 001B             setDutyPWM6@velo 001B  
       __size_of_configBits 0002                 ?_moverMotor 0095                    ??___flge 001B  
                  ??___fleq 001B         __end_of_configUSART 3228        __end_of_UARTReadChar 3284  
                  ??___wmul 0017                 _getAD_ANbit 25A2       valorConvUARTbit@valor 0025  
       i2UARTSendString@str 0002                 ?_testeADbit 0001                 __pdataBANK0 00F8  
                  ??_setPID 0040        __end_of_UARTSendChar 3254                    ??_strcmp 0017  
                 ___fladd@a 0064                   ___fladd@b 0060         __size_of_ligaTimer0 0004  
                 ___fldiv@a 0078                   ___fldiv@b 0074                   ___flmul@a 0025  
                 ___flmul@b 0021                 __pbssCOMRAM 0041                   ___flsub@a 0070  
                 ___flsub@b 006C               __pcstackBANK0 0060               __pcstackBANK1 0138  
         __size_of_getAD_AN 0114           __size_of___xxtofl 01B4         __size_of_initTimer0 000A  
         __size_of_configAD 0024           __size_of_configDA 014E      __size_of_UARTWriteTest 0010  
    __size_of_valorConvUART 00B2               UARTSendChar@c 0013                   __pintcode 0008  
                  ?___fladd 0060                    ?___fldiv 0074                    ?___awdiv 0013  
                  ?___awmod 001B                    ?___flmul 0021                    ?___flsub 006C  
                  ?___fltol 008D         __size_of_setComando 000A                   _configPWM 31A4  
           ??i2_setDutyPWM0 0009             ??i2_setDutyPWM2 0009             ??i2_setDutyPWM4 0009  
           ??i2_setDutyPWM6 0009               ??_setDutyPWM0 001B               ??_setDutyPWM2 001B  
             ??_setDutyPWM4 001B               ??_setDutyPWM6 001B                _recebidoChar 004A  
               __smallconst 0300                   _readAD_AN 2D7E                    ?_testeAD 0001  
                  ?_posicao 008D         __size_of_moverMotor 00C2              __size_of_lados 005C  
      __end_of_testeMotores 0CDA         __size_of_testeADbit 00F4              ___wmul@product 0017  
              ??_bitExtract 0019                 _configUSART 320A                    _PIE1bits 000F9D  
           UARTSendString@i 00B0                   _myStrncmp 2FEC        valorConvUART@centena 009D  
                  _PIR1bits 000F9E                    i2u532_40 2C52                    i2u540_40 009C  
                  i2u532_41 2C4E                    i2u540_41 0098                    i2u533_40 2C82  
                  i2u541_40 00CE                    i2u541_41 00CA                    i2u533_47 2C78  
                  i2u534_40 2C92                    i2u542_40 0100                    i2u534_41 2C8E  
                  i2u542_41 00FC                    i2u535_40 2CC2                    i2u543_40 0132  
                  i2u543_41 012E                    i2u535_47 2CB8                    i2u544_40 0164  
                  i2u536_40 0038                    i2u544_41 0160                    i2u536_41 0034  
                  i2u545_40 0196                    i2u537_40 0046                    i2u545_41 0192  
                  i2u537_41 0042                    i2u546_40 0212                    i2u538_40 0054  
                  i2u546_41 020E                    i2u538_41 0050                    i2u539_40 0072  
                  i2u539_41 006E                    i2u489_40 3246                    i2u489_41 3242  
             moverMotor@PID 0095                  ?_configPWM 0001        valorConvUART@unidade 00A1  
                 configDA@i 00A1                  _ADCON0bits 000FC2                  posicao@pos 0095  
                _ADCON1bits 000FC1                  _ADCON2bits 000FC0           ?i2_UARTSendString 0002  
             _UARTWriteTest 3228           ___wmul@multiplier 0013                    i2___wmul 317E  
             _valorConvUART 2AC2                   lados@lado 001F                  ?_readAD_AN 003A  
              ??_configBits 0013          ??i2_UARTSendString 0006          __end_of_bitExtract 2F52  
    __size_of_testeLampadas 012E         __end_of_setDutyPWM0 30C0         __end_of_setDutyPWM2 309A  
       __end_of_setDutyPWM4 3074         __end_of_setDutyPWM6 304E                   copy_data0 2F66  
  __size_ofi2_UARTWriteTest 0010                ??_ligaTimer0 0001            ??_UARTSendString 00AE  
     __size_of_UARTReadChar 0008                  ?_myStrncmp 0018                    __Hrparam 0000  
     __size_of_UARTSendChar 000C                    __Lrparam 0000          __end_of_configBits 3292  
              ??_initTimer0 0015            __size_of___fladd 04C2            __size_of___fldiv 039C  
          __size_of___awdiv 00C4            __size_of___awmod 00B0            __size_of___flmul 042A  
          __size_of___flsub 0048            __size_of___fltol 0108       i2___wmul@multiplicand 0003  
               _setPID$1567 00A3                 _setPID$1568 00A7              ?_UARTWriteTest 0001  
            ?_valorConvUART 009B                    _getAD_AN 2282          __end_of_ligaTimer0 3290  
                  ___xxtofl 1CBC                    __ptext10 2AC2                    __ptext11 2B74  
                  __ptext20 3028                    __ptext12 293C                    __ptext21 304E  
                  __ptext13 2870                    __ptext30 1CBC                    __ptext22 3074  
                  __ptext14 3248                    __ptext31 0CDA                    __ptext23 309A  
                  __ptext15 3228                    __ptext40 3290                    __ptext32 2EF8  
                  __ptext24 30C0                    __ptext16 17C8                    __ptext41 31C8  
                  __ptext33 2396                    __ptext25 2CD4                    __ptext17 1E70  
                  __ptext50 3254                    __ptext42 327C                    __ptext34 249E  
                  __ptext26 1104                    __ptext18 2A00                    __ptext51 3238  
                  __ptext35 2FA4                    __ptext27 2006                    __ptext19 2E9C  
                  __ptext52 3284                    __ptext44 30E6                    __ptext36 03A6  
                  __ptext28 2282                    __ptext53 326A                    __ptext45 310C  
                  __ptext37 3260                    __ptext29 2D7E                    __ptext54 328C  
                  __ptext46 3132                    __ptext38 320A                    __ptext47 3158  
                  __ptext39 31A4                    __ptext48 317E                    __ptext49 2C24  
              ??_setComando 0003            __size_of_testeAD 0328                    _configAD 31C8  
                  _configDA 2006            __size_of_posicao 0196                _UARTReadChar 327C  
             _configDA$1566 009D          __end_of_initTimer0 326A                _UARTSendChar 3248  
   __size_ofi2_UARTReadChar 0008               __size_of_main 0226                 bitExtract@k 0015  
               bitExtract@p 0017     __size_ofi2_UARTSendChar 000C                    _vanal_AN 0046  
         getAD_ANbit@ANread 0023                ??_moverMotor 0040                    _porcVelo 00FC  
 __size_of_valorConvUARTbit 00E2               _testeLampadas 2154                ?_getAD_ANbit 0021  
                  _setpoint 00F8                    int$flags 004D                ??_testeADbit 0138  
               ??_configPWM 0013          __end_of_setComando 3274                 _setDutyPWM0 309A  
               _setDutyPWM2 3074                 _setDutyPWM4 304E                 _setDutyPWM6 3028  
               ??_readAD_AN 003E                  _INTCONbits 000FF2       __size_of_testeMotores 0472  
        __end_of_moverMotor 2AC2           UARTSendString@str 00AA                    intlevel2 0000  
        __end_of_testeADbit 278E                 ??_myStrncmp 001C           ??i2_UARTWriteTest 0001  
            ?_testeLampadas 0001                    posicao@i 009D             ??_UARTWriteTest 0013  
              _testeMotores 0868             ??_valorConvUART 0040            getAD_ANbit@porta 0021  
             ___fladd@signs 0068                ___fladd@aexp 0069                ___fladd@bexp 006A  
              ?_configUSART 0001  
