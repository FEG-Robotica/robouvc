

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed May 25 20:24:42 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4431
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    74                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    75                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    76  0000                     
    77                           ; Version 2.36
    78                           ; Generated 28/01/2022 GMT
    79                           ; 
    80                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution. Publication is not required when
    94                           ;        this file is used in an embedded application.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F4431 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112  0000                     
   113                           	psect	idataBANK0
   114  003470                     __pidataBANK0:
   115                           	callstack 0
   116                           
   117                           ;initializer for _kp
   118  003470  0000               	dw	0
   119  003472  40A0               	dw	16544
   120                           
   121                           ;initializer for _setpoint
   122                           ;./Seguidor.h: 16: int PID_int = 0;;./Seguidor.h: 17: int porcVelo = 20;;./Seguidor.h: 1
      +                          8: int i;;./Seguidor.h: 19: double sensor[5];;./Seguidor.h: 20: double leitura[5];;./Seg
      +                          uidor.h: 21: double posin = 0;;./Seguidor.h: 22: double pos = 0;;./Seguidor.h: 23: doubl
      +                          e setpoint = 3.0;
   123  003474  0000               	dw	0
   124  003476  4040               	dw	16448
   125                           
   126                           ;initializer for _porcVelo
   127  003478  0014               	dw	20
   128                           
   129                           ;initializer for _comando
   130  00347A  FB                 	db	low (STR_63+1)
   131  00347B  3F                 	db	high (STR_63+1)
   132  0000                     _TRISB	set	3987
   133  0000                     _ADRESL	set	4035
   134  0000                     _ADRESH	set	4036
   135  0000                     _ADCON0bits	set	4034
   136  0000                     _TXREG	set	4013
   137  0000                     _RCREG	set	4014
   138  0000                     _INTCONbits	set	4082
   139  0000                     _PORTC	set	3970
   140  0000                     _PORTB	set	3969
   141  0000                     _TRISC	set	3988
   142  0000                     _TMR0ON	set	32431
   143  0000                     _RC3	set	31763
   144  0000                     _RC2	set	31762
   145  0000                     _RC1	set	31761
   146  0000                     _TRMT	set	32097
   147  0000                     _OVDCONS	set	3946
   148  0000                     _OVDCOND	set	3947
   149  0000                     _DTCON	set	3949
   150  0000                     _PWMCON1	set	3950
   151  0000                     _PWMCON0	set	3951
   152  0000                     _PTCON1	set	3966
   153  0000                     _PTCON0	set	3967
   154  0000                     _TRISCbits	set	3988
   155  0000                     _PIE1bits	set	3997
   156  0000                     _TXSTAbits	set	4012
   157  0000                     _SPBRG	set	4015
   158  0000                     _ANSEL0	set	4024
   159  0000                     _ADCON2bits	set	4032
   160  0000                     _ADCON1bits	set	4033
   161  0000                     _PIR1bits	set	3998
   162  0000                     _RCSTAbits	set	4011
   163  0000                     _TRISE	set	3990
   164  0000                     _TRISD	set	3989
   165  0000                     _ADCHSbits	set	3993
   166  0000                     _ADCON3	set	3994
   167  0000                     _T0CON	set	4053
   168  0000                     _PORTBbits	set	3969
   169  0000                     _RC0	set	31760
   170  0000                     _PDC3H	set	3954
   171  0000                     _PDC3L	set	3955
   172  0000                     _PDC2H	set	3956
   173  0000                     _PDC2L	set	3957
   174  0000                     _PDC1H	set	3958
   175  0000                     _PDC1L	set	3959
   176  0000                     _PDC0H	set	3960
   177  0000                     _PDC0L	set	3961
   178  0000                     _PTPERH	set	3962
   179  0000                     _PTPERL	set	3963
   180  0000                     _PORTE	set	3972
   181  0000                     _PORTD	set	3971
   182  0000                     _TRISA	set	3986
   183  0000                     _TMR0L	set	4054
   184  0000                     _TMR0IF	set	32658
   185  0000                     _ANSEL1	set	4025
   186                           
   187                           	psect	mediumconst
   188  003EA4                     __pmediumconst:
   189                           	callstack 0
   190  003EA4  00                 	db	0
   191  003EA5                     STR_60:
   192  003EA5  52                 	db	82	;'R'
   193  003EA6  6F                 	db	111	;'o'
   194  003EA7  74                 	db	116	;'t'
   195  003EA8  69                 	db	105	;'i'
   196  003EA9  6E                 	db	110	;'n'
   197  003EAA  61                 	db	97	;'a'
   198  003EAB  46                 	db	70	;'F'
   199  003EAC  75                 	db	117	;'u'
   200  003EAD  6E                 	db	110	;'n'
   201  003EAE  63                 	db	99	;'c'
   202  003EAF  69                 	db	105	;'i'
   203  003EB0  6F                 	db	111	;'o'
   204  003EB1  6E                 	db	110	;'n'
   205  003EB2  61                 	db	97	;'a'
   206  003EB3  6D                 	db	109	;'m'
   207  003EB4  65                 	db	101	;'e'
   208  003EB5  6E                 	db	110	;'n'
   209  003EB6  74                 	db	116	;'t'
   210  003EB7  6F                 	db	111	;'o'
   211  003EB8  00                 	db	0
   212  003EB9                     STR_84:
   213  003EB9  52                 	db	82	;'R'
   214  003EBA  45                 	db	69	;'E'
   215  003EBB  43                 	db	67	;'C'
   216  003EBC  41                 	db	65	;'A'
   217  003EBD  52                 	db	82	;'R'
   218  003EBE  52                 	db	82	;'R'
   219  003EBF  45                 	db	69	;'E'
   220  003EC0  47                 	db	71	;'G'
   221  003EC1  41                 	db	65	;'A'
   222  003EC2  52                 	db	82	;'R'
   223  003EC3  20                 	db	32
   224  003EC4  42                 	db	66	;'B'
   225  003EC5  41                 	db	65	;'A'
   226  003EC6  54                 	db	84	;'T'
   227  003EC7  45                 	db	69	;'E'
   228  003EC8  52                 	db	82	;'R'
   229  003EC9  49                 	db	73	;'I'
   230  003ECA  41                 	db	65	;'A'
   231  003ECB  00                 	db	0
   232  003ECC                     STR_5:
   233  003ECC  50                 	db	80	;'P'
   234  003ECD  57                 	db	87	;'W'
   235  003ECE  4D                 	db	77	;'M'
   236  003ECF  41                 	db	65	;'A'
   237  003ED0  20                 	db	32
   238  003ED1  54                 	db	84	;'T'
   239  003ED2  65                 	db	101	;'e'
   240  003ED3  73                 	db	115	;'s'
   241  003ED4  74                 	db	116	;'t'
   242  003ED5  65                 	db	101	;'e'
   243  003ED6  20                 	db	32
   244  003ED7  46                 	db	70	;'F'
   245  003ED8  69                 	db	105	;'i'
   246  003ED9  6D                 	db	109	;'m'
   247  003EDA  0A                 	db	10
   248  003EDB  00                 	db	0
   249  003EDC                     STR_57:
   250  003EDC  4C                 	db	76	;'L'
   251  003EDD  65                 	db	101	;'e'
   252  003EDE  69                 	db	105	;'i'
   253  003EDF  74                 	db	116	;'t'
   254  003EE0  75                 	db	117	;'u'
   255  003EE1  72                 	db	114	;'r'
   256  003EE2  61                 	db	97	;'a'
   257  003EE3  53                 	db	83	;'S'
   258  003EE4  65                 	db	101	;'e'
   259  003EE5  6E                 	db	110	;'n'
   260  003EE6  73                 	db	115	;'s'
   261  003EE7  6F                 	db	111	;'o'
   262  003EE8  72                 	db	114	;'r'
   263  003EE9  65                 	db	101	;'e'
   264  003EEA  73                 	db	115	;'s'
   265  003EEB  00                 	db	0
   266  003EEC                     STR_2:
   267  003EEC  50                 	db	80	;'P'
   268  003EED  57                 	db	87	;'W'
   269  003EEE  4D                 	db	77	;'M'
   270  003EEF  41                 	db	65	;'A'
   271  003EF0  20                 	db	32
   272  003EF1  54                 	db	84	;'T'
   273  003EF2  65                 	db	101	;'e'
   274  003EF3  73                 	db	115	;'s'
   275  003EF4  74                 	db	116	;'t'
   276  003EF5  61                 	db	97	;'a'
   277  003EF6  6E                 	db	110	;'n'
   278  003EF7  64                 	db	100	;'d'
   279  003EF8  6F                 	db	111	;'o'
   280  003EF9  0A                 	db	10
   281  003EFA  00                 	db	0
   282  003EFB                     STR_59:
   283  003EFB  4D                 	db	77	;'M'
   284  003EFC  6F                 	db	111	;'o'
   285  003EFD  76                 	db	118	;'v'
   286  003EFE  65                 	db	101	;'e'
   287  003EFF  72                 	db	114	;'r'
   288  003F00  50                 	db	80	;'P'
   289  003F01  72                 	db	114	;'r'
   290  003F02  61                 	db	97	;'a'
   291  003F03  46                 	db	70	;'F'
   292  003F04  72                 	db	114	;'r'
   293  003F05  65                 	db	101	;'e'
   294  003F06  6E                 	db	110	;'n'
   295  003F07  74                 	db	116	;'t'
   296  003F08  65                 	db	101	;'e'
   297  003F09  00                 	db	0
   298  003F0A                     STR_54:
   299  003F0A  74                 	db	116	;'t'
   300  003F0B  65                 	db	101	;'e'
   301  003F0C  73                 	db	115	;'s'
   302  003F0D  74                 	db	116	;'t'
   303  003F0E  65                 	db	101	;'e'
   304  003F0F  4C                 	db	76	;'L'
   305  003F10  61                 	db	97	;'a'
   306  003F11  6D                 	db	109	;'m'
   307  003F12  70                 	db	112	;'p'
   308  003F13  61                 	db	97	;'a'
   309  003F14  64                 	db	100	;'d'
   310  003F15  61                 	db	97	;'a'
   311  003F16  73                 	db	115	;'s'
   312  003F17  00                 	db	0
   313  003F18                     STR_40:
   314  003F18  0A                 	db	10
   315  003F19  41                 	db	65	;'A'
   316  003F1A  4E                 	db	78	;'N'
   317  003F1B  31                 	db	49	;'1'
   318  003F1C  3A                 	db	58	;':'
   319  003F1D  62                 	db	98	;'b'
   320  003F1E  72                 	db	114	;'r'
   321  003F1F  61                 	db	97	;'a'
   322  003F20  6E                 	db	110	;'n'
   323  003F21  63                 	db	99	;'c'
   324  003F22  6F                 	db	111	;'o'
   325  003F23  20                 	db	32
   326  003F24  00                 	db	0
   327  003F25                     STR_44:
   328  003F25  0A                 	db	10
   329  003F26  41                 	db	65	;'A'
   330  003F27  4E                 	db	78	;'N'
   331  003F28  33                 	db	51	;'3'
   332  003F29  3A                 	db	58	;':'
   333  003F2A  62                 	db	98	;'b'
   334  003F2B  72                 	db	114	;'r'
   335  003F2C  61                 	db	97	;'a'
   336  003F2D  6E                 	db	110	;'n'
   337  003F2E  63                 	db	99	;'c'
   338  003F2F  6F                 	db	111	;'o'
   339  003F30  20                 	db	32
   340  003F31  00                 	db	0
   341  003F32                     STR_46:
   342  003F32  0A                 	db	10
   343  003F33  41                 	db	65	;'A'
   344  003F34  4E                 	db	78	;'N'
   345  003F35  34                 	db	52	;'4'
   346  003F36  3A                 	db	58	;':'
   347  003F37  62                 	db	98	;'b'
   348  003F38  72                 	db	114	;'r'
   349  003F39  61                 	db	97	;'a'
   350  003F3A  6E                 	db	110	;'n'
   351  003F3B  63                 	db	99	;'c'
   352  003F3C  6F                 	db	111	;'o'
   353  003F3D  20                 	db	32
   354  003F3E  00                 	db	0
   355  003F3F                     STR_48:
   356  003F3F  0A                 	db	10
   357  003F40  41                 	db	65	;'A'
   358  003F41  4E                 	db	78	;'N'
   359  003F42  35                 	db	53	;'5'
   360  003F43  3A                 	db	58	;':'
   361  003F44  62                 	db	98	;'b'
   362  003F45  72                 	db	114	;'r'
   363  003F46  61                 	db	97	;'a'
   364  003F47  6E                 	db	110	;'n'
   365  003F48  63                 	db	99	;'c'
   366  003F49  6F                 	db	111	;'o'
   367  003F4A  20                 	db	32
   368  003F4B  00                 	db	0
   369  003F4C                     STR_53:
   370  003F4C  74                 	db	116	;'t'
   371  003F4D  65                 	db	101	;'e'
   372  003F4E  73                 	db	115	;'s'
   373  003F4F  74                 	db	116	;'t'
   374  003F50  65                 	db	101	;'e'
   375  003F51  4D                 	db	77	;'M'
   376  003F52  6F                 	db	111	;'o'
   377  003F53  74                 	db	116	;'t'
   378  003F54  6F                 	db	111	;'o'
   379  003F55  72                 	db	114	;'r'
   380  003F56  65                 	db	101	;'e'
   381  003F57  73                 	db	115	;'s'
   382  003F58  00                 	db	0
   383  003F59                     STR_39:
   384  003F59  0A                 	db	10
   385  003F5A  41                 	db	65	;'A'
   386  003F5B  4E                 	db	78	;'N'
   387  003F5C  31                 	db	49	;'1'
   388  003F5D  3A                 	db	58	;':'
   389  003F5E  70                 	db	112	;'p'
   390  003F5F  72                 	db	114	;'r'
   391  003F60  65                 	db	101	;'e'
   392  003F61  74                 	db	116	;'t'
   393  003F62  6F                 	db	111	;'o'
   394  003F63  20                 	db	32
   395  003F64  00                 	db	0
   396  003F65                     STR_43:
   397  003F65  0A                 	db	10
   398  003F66  41                 	db	65	;'A'
   399  003F67  4E                 	db	78	;'N'
   400  003F68  33                 	db	51	;'3'
   401  003F69  3A                 	db	58	;':'
   402  003F6A  70                 	db	112	;'p'
   403  003F6B  72                 	db	114	;'r'
   404  003F6C  65                 	db	101	;'e'
   405  003F6D  74                 	db	116	;'t'
   406  003F6E  6F                 	db	111	;'o'
   407  003F6F  20                 	db	32
   408  003F70  00                 	db	0
   409  003F71                     STR_45:
   410  003F71  0A                 	db	10
   411  003F72  41                 	db	65	;'A'
   412  003F73  4E                 	db	78	;'N'
   413  003F74  34                 	db	52	;'4'
   414  003F75  3A                 	db	58	;':'
   415  003F76  70                 	db	112	;'p'
   416  003F77  72                 	db	114	;'r'
   417  003F78  65                 	db	101	;'e'
   418  003F79  74                 	db	116	;'t'
   419  003F7A  6F                 	db	111	;'o'
   420  003F7B  20                 	db	32
   421  003F7C  00                 	db	0
   422  003F7D                     STR_47:
   423  003F7D  0A                 	db	10
   424  003F7E  41                 	db	65	;'A'
   425  003F7F  4E                 	db	78	;'N'
   426  003F80  35                 	db	53	;'5'
   427  003F81  3A                 	db	58	;':'
   428  003F82  70                 	db	112	;'p'
   429  003F83  72                 	db	114	;'r'
   430  003F84  65                 	db	101	;'e'
   431  003F85  74                 	db	116	;'t'
   432  003F86  6F                 	db	111	;'o'
   433  003F87  20                 	db	32
   434  003F88  00                 	db	0
   435  003F89                     STR_50:
   436  003F89  0A                 	db	10
   437  003F8A  2D                 	db	45
   438  003F8B  2D                 	db	45
   439  003F8C  2D                 	db	45
   440  003F8D  2D                 	db	45
   441  003F8E  2D                 	db	45
   442  003F8F  2D                 	db	45
   443  003F90  2D                 	db	45
   444  003F91  2D                 	db	45
   445  003F92  2D                 	db	45
   446  003F93  2D                 	db	45
   447  003F94  00                 	db	0
   448  003F95                     STR_42:
   449  003F95  0A                 	db	10
   450  003F96  41                 	db	65	;'A'
   451  003F97  4E                 	db	78	;'N'
   452  003F98  32                 	db	50	;'2'
   453  003F99  3A                 	db	58	;':'
   454  003F9A  62                 	db	98	;'b'
   455  003F9B  72                 	db	114	;'r'
   456  003F9C  61                 	db	97	;'a'
   457  003F9D  6E                 	db	110	;'n'
   458  003F9E  63                 	db	99	;'c'
   459  003F9F  6F                 	db	111	;'o'
   460  003FA0  00                 	db	0
   461  003FA1                     STR_41:
   462  003FA1  0A                 	db	10
   463  003FA2  41                 	db	65	;'A'
   464  003FA3  4E                 	db	78	;'N'
   465  003FA4  32                 	db	50	;'2'
   466  003FA5  3A                 	db	58	;':'
   467  003FA6  70                 	db	112	;'p'
   468  003FA7  72                 	db	114	;'r'
   469  003FA8  65                 	db	101	;'e'
   470  003FA9  74                 	db	116	;'t'
   471  003FAA  6F                 	db	111	;'o'
   472  003FAB  00                 	db	0
   473  003FAC                     STR_58:
   474  003FAC  74                 	db	116	;'t'
   475  003FAD  65                 	db	101	;'e'
   476  003FAE  73                 	db	115	;'s'
   477  003FAF  74                 	db	116	;'t'
   478  003FB0  65                 	db	101	;'e'
   479  003FB1  41                 	db	65	;'A'
   480  003FB2  44                 	db	68	;'D'
   481  003FB3  62                 	db	98	;'b'
   482  003FB4  69                 	db	105	;'i'
   483  003FB5  74                 	db	116	;'t'
   484  003FB6  00                 	db	0
   485  003FB7                     STR_52:
   486  003FB7  54                 	db	84	;'T'
   487  003FB8  69                 	db	105	;'i'
   488  003FB9  6D                 	db	109	;'m'
   489  003FBA  65                 	db	101	;'e'
   490  003FBB  72                 	db	114	;'r'
   491  003FBC  30                 	db	48	;'0'
   492  003FBD  20                 	db	32
   493  003FBE  6F                 	db	111	;'o'
   494  003FBF  6E                 	db	110	;'n'
   495  003FC0  00                 	db	0
   496  003FC1                     STR_49:
   497  003FC1  0A                 	db	10
   498  003FC2  42                 	db	66	;'B'
   499  003FC3  41                 	db	65	;'A'
   500  003FC4  54                 	db	84	;'T'
   501  003FC5  3A                 	db	58	;':'
   502  003FC6  20                 	db	32
   503  003FC7  00                 	db	0
   504  003FC8                     STR_22:
   505  003FC8  41                 	db	65	;'A'
   506  003FC9  4E                 	db	78	;'N'
   507  003FCA  31                 	db	49	;'1'
   508  003FCB  3A                 	db	58	;':'
   509  003FCC  20                 	db	32
   510  003FCD  00                 	db	0
   511  003FCE                     STR_24:
   512  003FCE  41                 	db	65	;'A'
   513  003FCF  4E                 	db	78	;'N'
   514  003FD0  32                 	db	50	;'2'
   515  003FD1  3A                 	db	58	;':'
   516  003FD2  20                 	db	32
   517  003FD3  00                 	db	0
   518  003FD4                     STR_26:
   519  003FD4  41                 	db	65	;'A'
   520  003FD5  4E                 	db	78	;'N'
   521  003FD6  33                 	db	51	;'3'
   522  003FD7  3A                 	db	58	;':'
   523  003FD8  20                 	db	32
   524  003FD9  00                 	db	0
   525  003FDA                     STR_28:
   526  003FDA  41                 	db	65	;'A'
   527  003FDB  4E                 	db	78	;'N'
   528  003FDC  34                 	db	52	;'4'
   529  003FDD  3A                 	db	58	;':'
   530  003FDE  20                 	db	32
   531  003FDF  00                 	db	0
   532  003FE0                     STR_30:
   533  003FE0  41                 	db	65	;'A'
   534  003FE1  4E                 	db	78	;'N'
   535  003FE2  35                 	db	53	;'5'
   536  003FE3  3A                 	db	58	;':'
   537  003FE4  20                 	db	32
   538  003FE5  00                 	db	0
   539  003FE6                     STR_62:
   540  003FE6  49                 	db	73	;'I'
   541  003FE7  44                 	db	68	;'D'
   542  003FE8  4C                 	db	76	;'L'
   543  003FE9  45                 	db	69	;'E'
   544  003FEA  00                 	db	0
   545  003FEB                     STR_3:
   546  003FEB  69                 	db	105	;'i'
   547  003FEC  64                 	db	100	;'d'
   548  003FED  6C                 	db	108	;'l'
   549  003FEE  65                 	db	101	;'e'
   550  003FEF  00                 	db	0
   551  003FF0                     STR_56:
   552  003FF0  50                 	db	80	;'P'
   553  003FF1  49                 	db	73	;'I'
   554  003FF2  44                 	db	68	;'D'
   555  003FF3  00                 	db	0
   556  003FF4                     STR_55:
   557  003FF4  41                 	db	65	;'A'
   558  003FF5  44                 	db	68	;'D'
   559  003FF6  00                 	db	0
   560  003FF7                     STR_34:
   561  003FF7  41                 	db	65	;'A'
   562  003FF8  4E                 	db	78	;'N'
   563  003FF9  00                 	db	0
   564  003FFA                     STR_63:
   565  003FFA  00                 	db	0
   566  003FFB  00                 	db	0
   567  003FFC                     STR_35:
   568  003FFC  3A                 	db	58	;':'
   569  003FFD  00                 	db	0
   570  003FFE  00                 	db	0	; dummy byte at the end
   571  0000                     
   572                           ; #config settings
   573                           
   574                           	psect	cinit
   575  003178                     __pcinit:
   576                           	callstack 0
   577  003178                     start_initialization:
   578                           	callstack 0
   579  003178                     __initialization:
   580                           	callstack 0
   581                           
   582                           ; Initialize objects allocated to BANK0 (12 bytes)
   583                           ; load TBLPTR registers with __pidataBANK0
   584  003178  0E70               	movlw	low __pidataBANK0
   585  00317A  6EF6               	movwf	tblptrl,c
   586  00317C  0E34               	movlw	high __pidataBANK0
   587  00317E  6EF7               	movwf	tblptrh,c
   588  003180  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   589  003182  6EF8               	movwf	tblptru,c
   590  003184  EE00  F0F4         	lfsr	0,__pdataBANK0
   591  003188  EE10 F00C          	lfsr	1,12
   592  00318C                     copy_data0:
   593  00318C  0009               	tblrd		*+
   594  00318E  CFF5 FFEE          	movff	tablat,postinc0
   595  003192  50E5               	movf	postdec1,w,c
   596  003194  50E1               	movf	fsr1l,w,c
   597  003196  E1FA               	bnz	copy_data0
   598                           
   599                           ; Clear objects allocated to BANK1 (40 bytes)
   600  003198  EE01  F000         	lfsr	0,__pbssBANK1
   601  00319C  0E28               	movlw	40
   602  00319E                     clear_0:
   603  00319E  6AEE               	clrf	postinc0,c
   604  0031A0  06E8               	decf	wreg,f,c
   605  0031A2  E1FD               	bnz	clear_0
   606                           
   607                           ; Clear objects allocated to BANK0 (66 bytes)
   608  0031A4  EE00  F0B2         	lfsr	0,__pbssBANK0
   609  0031A8  0E42               	movlw	66
   610  0031AA                     clear_1:
   611  0031AA  6AEE               	clrf	postinc0,c
   612  0031AC  06E8               	decf	wreg,f,c
   613  0031AE  E1FD               	bnz	clear_1
   614                           
   615                           ; Clear objects allocated to COMRAM (17 bytes)
   616  0031B0  EE00  F03C         	lfsr	0,__pbssCOMRAM
   617  0031B4  0E11               	movlw	17
   618  0031B6                     clear_2:
   619  0031B6  6AEE               	clrf	postinc0,c
   620  0031B8  06E8               	decf	wreg,f,c
   621  0031BA  E1FD               	bnz	clear_2
   622  0031BC                     end_of_initialization:
   623                           	callstack 0
   624  0031BC                     __end_of__initialization:
   625                           	callstack 0
   626  0031BC  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   627  0031BE  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   628  0031C0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   629  0031C2  6EF8               	movwf	tblptru,c
   630  0031C4  0100               	movlb	0
   631  0031C6  EFF0  F009         	goto	_main	;jump to C main() function
   632                           
   633                           	psect	bssCOMRAM
   634  00003C                     __pbssCOMRAM:
   635                           	callstack 0
   636  00003C                     	ds	5
   637  000041                     	ds	5
   638  000046                     _kd:
   639                           	callstack 0
   640  000046                     	ds	4
   641  00004A                     _i:
   642                           	callstack 0
   643  00004A                     	ds	2
   644  00004C                     _recebidoChar:
   645                           	callstack 0
   646  00004C                     	ds	1
   647                           
   648                           	psect	bssBANK0
   649  0000B2                     __pbssBANK0:
   650                           	callstack 0
   651  0000B2                     _millisPassado:
   652                           	callstack 0
   653  0000B2                     	ds	4
   654  0000B6                     _erroi:
   655                           	callstack 0
   656  0000B6                     	ds	4
   657  0000BA                     _tf:
   658                           	callstack 0
   659  0000BA                     	ds	4
   660  0000BE                     _de:
   661                           	callstack 0
   662  0000BE                     	ds	4
   663  0000C2                     _dt:
   664                           	callstack 0
   665  0000C2                     	ds	4
   666  0000C6                     _ki:
   667                           	callstack 0
   668  0000C6                     	ds	4
   669  0000CA                     _PID:
   670                           	callstack 0
   671  0000CA                     	ds	4
   672  0000CE                     _D:
   673                           	callstack 0
   674  0000CE                     	ds	4
   675  0000D2                     _I:
   676                           	callstack 0
   677  0000D2                     	ds	4
   678  0000D6                     _P:
   679                           	callstack 0
   680  0000D6                     	ds	4
   681  0000DA                     _erro:
   682                           	callstack 0
   683  0000DA                     	ds	4
   684  0000DE                     _pos:
   685                           	callstack 0
   686  0000DE                     	ds	4
   687  0000E2                     _posin:
   688                           	callstack 0
   689  0000E2                     	ds	4
   690  0000E6                     _millis:
   691                           	callstack 0
   692  0000E6                     	ds	4
   693  0000EA                     _vanal_AN:
   694                           	callstack 0
   695  0000EA                     	ds	4
   696  0000EE                     _PID_int:
   697                           	callstack 0
   698  0000EE                     	ds	2
   699  0000F0                     	ds	2
   700  0000F2                     _vdig_AN:
   701                           	callstack 0
   702  0000F2                     	ds	2
   703                           
   704                           	psect	dataBANK0
   705  0000F4                     __pdataBANK0:
   706                           	callstack 0
   707  0000F4                     _kp:
   708                           	callstack 0
   709  0000F4                     	ds	4
   710  0000F8                     _setpoint:
   711                           	callstack 0
   712  0000F8                     	ds	4
   713  0000FC                     _porcVelo:
   714                           	callstack 0
   715  0000FC                     	ds	2
   716  0000FE                     _comando:
   717                           	callstack 0
   718  0000FE                     	ds	2
   719                           
   720                           	psect	bssBANK1
   721  000100                     __pbssBANK1:
   722                           	callstack 0
   723  000100                     _leitura:
   724                           	callstack 0
   725  000100                     	ds	20
   726  000114                     _sensor:
   727                           	callstack 0
   728  000114                     	ds	20
   729                           
   730                           	psect	cstackBANK1
   731  000128                     __pcstackBANK1:
   732                           	callstack 0
   733  000128                     posicao@local:
   734                           	callstack 0
   735                           
   736                           ; 4 bytes @ 0x0
   737  000128                     	ds	4
   738  00012C                     posicao@pos:
   739                           	callstack 0
   740                           
   741                           ; 4 bytes @ 0x4
   742  00012C                     	ds	4
   743  000130                     posicao@total:
   744                           	callstack 0
   745                           
   746                           ; 4 bytes @ 0x8
   747  000130                     	ds	4
   748  000134                     posicao@i:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0xC
   752  000134                     	ds	2
   753  000136                     ??_main:
   754                           
   755                           ; 1 bytes @ 0xE
   756  000136                     	ds	1
   757                           
   758                           	psect	cstackBANK0
   759  000060                     __pcstackBANK0:
   760                           	callstack 0
   761  000060                     ??___flmul:
   762                           
   763                           ; 1 bytes @ 0x0
   764  000060                     	ds	4
   765  000064                     ___flmul@sign:
   766                           	callstack 0
   767                           
   768                           ; 1 bytes @ 0x4
   769  000064                     	ds	1
   770  000065                     ___flmul@aexp:
   771                           	callstack 0
   772                           
   773                           ; 1 bytes @ 0x5
   774  000065                     	ds	1
   775  000066                     ___flmul@grs:
   776                           	callstack 0
   777                           
   778                           ; 4 bytes @ 0x6
   779  000066                     	ds	4
   780  00006A                     ___flmul@bexp:
   781                           	callstack 0
   782                           
   783                           ; 1 bytes @ 0xA
   784  00006A                     	ds	1
   785  00006B                     ___flmul@prod:
   786                           	callstack 0
   787                           
   788                           ; 4 bytes @ 0xB
   789  00006B                     	ds	4
   790  00006F                     ___flmul@temp:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0xF
   794  00006F                     	ds	2
   795  000071                     ?___fladd:
   796                           	callstack 0
   797  000071                     ?_readAD_AN:
   798                           	callstack 0
   799  000071                     ___fladd@b:
   800                           	callstack 0
   801                           
   802                           ; 4 bytes @ 0x11
   803  000071                     	ds	4
   804  000075                     ___fladd@a:
   805                           	callstack 0
   806  000075                     _readAD_AN$1588:
   807                           	callstack 0
   808                           
   809                           ; 4 bytes @ 0x15
   810  000075                     	ds	4
   811  000079                     ??___fladd:
   812                           
   813                           ; 1 bytes @ 0x19
   814  000079                     	ds	4
   815  00007D                     ___fladd@signs:
   816                           	callstack 0
   817                           
   818                           ; 1 bytes @ 0x1D
   819  00007D                     	ds	1
   820  00007E                     ___fladd@aexp:
   821                           	callstack 0
   822                           
   823                           ; 1 bytes @ 0x1E
   824  00007E                     	ds	1
   825  00007F                     ___fladd@bexp:
   826                           	callstack 0
   827                           
   828                           ; 1 bytes @ 0x1F
   829  00007F                     	ds	1
   830  000080                     ___fladd@grs:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0x20
   834  000080                     	ds	1
   835  000081                     ?___flsub:
   836                           	callstack 0
   837  000081                     ?___fltol:
   838                           	callstack 0
   839  000081                     ___fltol@f1:
   840                           	callstack 0
   841  000081                     ___flsub@b:
   842                           	callstack 0
   843                           
   844                           ; 4 bytes @ 0x21
   845  000081                     	ds	4
   846  000085                     ??___fltol:
   847  000085                     ___flsub@a:
   848                           	callstack 0
   849                           
   850                           ; 4 bytes @ 0x25
   851  000085                     	ds	4
   852  000089                     ?___fldiv:
   853                           	callstack 0
   854  000089                     ___fltol@sign1:
   855                           	callstack 0
   856  000089                     ___fldiv@b:
   857                           	callstack 0
   858                           
   859                           ; 4 bytes @ 0x29
   860  000089                     	ds	1
   861  00008A                     ___fltol@exp1:
   862                           	callstack 0
   863                           
   864                           ; 1 bytes @ 0x2A
   865  00008A                     	ds	1
   866  00008B                     ?_getAD_AN:
   867                           	callstack 0
   868  00008B                     getAD_AN@porta:
   869                           	callstack 0
   870  00008B                     lados@porcVelo:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x2B
   874  00008B                     	ds	2
   875  00008D                     moverMotor@PID:
   876                           	callstack 0
   877  00008D                     getAD_AN@ANread:
   878                           	callstack 0
   879  00008D                     ___fldiv@a:
   880                           	callstack 0
   881                           
   882                           ; 4 bytes @ 0x2D
   883  00008D                     	ds	4
   884  000091                     ??___fldiv:
   885  000091                     ?_valorConvUART:
   886                           	callstack 0
   887  000091                     valorConvUART@valor:
   888                           	callstack 0
   889                           
   890                           ; 2 bytes @ 0x31
   891  000091                     	ds	2
   892  000093                     valorConvUART@string:
   893                           	callstack 0
   894                           
   895                           ; 5 bytes @ 0x33
   896  000093                     	ds	2
   897  000095                     ___fldiv@rem:
   898                           	callstack 0
   899                           
   900                           ; 4 bytes @ 0x35
   901  000095                     	ds	3
   902  000098                     valorConvUART@centena:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x38
   906  000098                     	ds	1
   907  000099                     ___fldiv@sign:
   908                           	callstack 0
   909                           
   910                           ; 1 bytes @ 0x39
   911  000099                     	ds	1
   912  00009A                     valorConvUART@dezena:
   913                           	callstack 0
   914  00009A                     ___fldiv@new_exp:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x3A
   918  00009A                     	ds	2
   919  00009C                     valorConvUART@unidade:
   920                           	callstack 0
   921  00009C                     ___fldiv@grs:
   922                           	callstack 0
   923                           
   924                           ; 4 bytes @ 0x3C
   925  00009C                     	ds	2
   926  00009E                     _valorConvUART$1586:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x3E
   930  00009E                     	ds	2
   931  0000A0                     ___fldiv@bexp:
   932                           	callstack 0
   933  0000A0                     UARTSendString@str:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0x40
   937  0000A0                     	ds	1
   938  0000A1                     ___fldiv@aexp:
   939                           	callstack 0
   940                           
   941                           ; 1 bytes @ 0x41
   942  0000A1                     	ds	1
   943  0000A2                     ?_posicao:
   944                           	callstack 0
   945  0000A2                     UARTSendString@max_length:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x42
   949  0000A2                     	ds	2
   950  0000A4                     ??_UARTSendString:
   951                           
   952                           ; 1 bytes @ 0x44
   953  0000A4                     	ds	2
   954  0000A6                     ??_posicao:
   955  0000A6                     UARTSendString@i:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0x46
   959  0000A6                     	ds	2
   960  0000A8                     ??_testeAD:
   961  0000A8                     ??_testeADbit:
   962  0000A8                     ??_PrintSensores:
   963  0000A8                     testeMotores@i:
   964                           	callstack 0
   965  0000A8                     _setPID$1589:
   966                           	callstack 0
   967                           
   968                           ; 4 bytes @ 0x48
   969  0000A8                     	ds	2
   970  0000AA                     testeADbit@string:
   971                           	callstack 0
   972                           
   973                           ; 2 bytes @ 0x4A
   974  0000AA                     	ds	2
   975  0000AC                     testeADbit@i:
   976                           	callstack 0
   977  0000AC                     PrintSensores@millisAtual:
   978                           	callstack 0
   979  0000AC                     _setPID$1590:
   980                           	callstack 0
   981                           
   982                           ; 4 bytes @ 0x4C
   983  0000AC                     	ds	4
   984  0000B0                     _setPID$1591:
   985                           	callstack 0
   986                           
   987                           ; 2 bytes @ 0x50
   988  0000B0                     	ds	2
   989                           
   990                           	psect	cstackCOMRAM
   991  000001                     __pcstackCOMRAM:
   992                           	callstack 0
   993  000001                     ?i2___wmul:
   994                           	callstack 0
   995  000001                     i2UARTReadChar@ler:
   996                           	callstack 0
   997  000001                     i2UARTSendChar@c:
   998                           	callstack 0
   999  000001                     setComando@c:
  1000                           	callstack 0
  1001  000001                     i2___wmul@multiplier:
  1002                           	callstack 0
  1003                           
  1004                           ; 2 bytes @ 0x0
  1005  000001                     	ds	1
  1006  000002                     i2UARTSendString@str:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x1
  1010  000002                     	ds	1
  1011  000003                     i2___wmul@multiplicand:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x2
  1015  000003                     	ds	1
  1016  000004                     i2UARTSendString@max_length:
  1017                           	callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x3
  1020  000004                     	ds	1
  1021  000005                     i2___wmul@product:
  1022                           	callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x4
  1025  000005                     	ds	1
  1026  000006                     ??i2_UARTSendString:
  1027                           
  1028                           ; 1 bytes @ 0x5
  1029  000006                     	ds	1
  1030  000007                     i2setDutyPWM0@porcVelo:
  1031                           	callstack 0
  1032  000007                     i2setDutyPWM2@porcVelo:
  1033                           	callstack 0
  1034  000007                     i2setDutyPWM4@porcVelo:
  1035                           	callstack 0
  1036  000007                     i2setDutyPWM6@porcVelo:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x6
  1040  000007                     	ds	1
  1041  000008                     i2UARTSendString@i:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x7
  1045  000008                     	ds	1
  1046  000009                     i2setDutyPWM0@velo:
  1047                           	callstack 0
  1048  000009                     i2setDutyPWM2@velo:
  1049                           	callstack 0
  1050  000009                     i2setDutyPWM4@velo:
  1051                           	callstack 0
  1052  000009                     i2setDutyPWM6@velo:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x8
  1056  000009                     	ds	2
  1057  00000B                     ??_ISR:
  1058                           
  1059                           ; 1 bytes @ 0xA
  1060  00000B                     	ds	8
  1061  000013                     ?_bitExtract:
  1062                           	callstack 0
  1063  000013                     ?_strcmp:
  1064                           	callstack 0
  1065  000013                     ?_readAD_ANbit:
  1066                           	callstack 0
  1067  000013                     ?___wmul:
  1068                           	callstack 0
  1069  000013                     ?___awdiv:
  1070                           	callstack 0
  1071  000013                     UARTReadChar@ler:
  1072                           	callstack 0
  1073  000013                     UARTSendChar@c:
  1074                           	callstack 0
  1075  000013                     bitExtract@numero:
  1076                           	callstack 0
  1077  000013                     initTimer0@tempoInicial:
  1078                           	callstack 0
  1079  000013                     ___wmul@multiplier:
  1080                           	callstack 0
  1081  000013                     ___awdiv@dividend:
  1082                           	callstack 0
  1083  000013                     strcmp@l:
  1084                           	callstack 0
  1085  000013                     ___fleq@ff1:
  1086                           	callstack 0
  1087  000013                     ___flge@ff1:
  1088                           	callstack 0
  1089                           
  1090                           ; 4 bytes @ 0x12
  1091  000013                     	ds	2
  1092  000015                     bitExtract@k:
  1093                           	callstack 0
  1094  000015                     ___wmul@multiplicand:
  1095                           	callstack 0
  1096  000015                     ___awdiv@divisor:
  1097                           	callstack 0
  1098  000015                     strcmp@r:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x14
  1102  000015                     	ds	2
  1103  000017                     ??_strcmp:
  1104  000017                     ___awdiv@counter:
  1105                           	callstack 0
  1106  000017                     bitExtract@posicao:
  1107                           	callstack 0
  1108  000017                     ___wmul@product:
  1109                           	callstack 0
  1110  000017                     ___fleq@ff2:
  1111                           	callstack 0
  1112  000017                     ___flge@ff2:
  1113                           	callstack 0
  1114                           
  1115                           ; 4 bytes @ 0x16
  1116  000017                     	ds	1
  1117  000018                     ?_myStrncmp:
  1118                           	callstack 0
  1119  000018                     ___awdiv@sign:
  1120                           	callstack 0
  1121  000018                     myStrncmp@str1:
  1122                           	callstack 0
  1123                           
  1124                           ; 2 bytes @ 0x17
  1125  000018                     	ds	1
  1126  000019                     ??_bitExtract:
  1127  000019                     setDutyPWM0@porcVelo:
  1128                           	callstack 0
  1129  000019                     setDutyPWM2@porcVelo:
  1130                           	callstack 0
  1131  000019                     setDutyPWM4@porcVelo:
  1132                           	callstack 0
  1133  000019                     setDutyPWM6@porcVelo:
  1134                           	callstack 0
  1135  000019                     ___awdiv@quotient:
  1136                           	callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x18
  1139  000019                     	ds	1
  1140  00001A                     myStrncmp@str2:
  1141                           	callstack 0
  1142                           
  1143                           ; 2 bytes @ 0x19
  1144  00001A                     	ds	1
  1145  00001B                     ??___fleq:
  1146  00001B                     ??___flge:
  1147  00001B                     ?___awmod:
  1148                           	callstack 0
  1149  00001B                     setDutyPWM0@velo:
  1150                           	callstack 0
  1151  00001B                     setDutyPWM2@velo:
  1152                           	callstack 0
  1153  00001B                     setDutyPWM4@velo:
  1154                           	callstack 0
  1155  00001B                     setDutyPWM6@velo:
  1156                           	callstack 0
  1157  00001B                     ___awmod@dividend:
  1158                           	callstack 0
  1159                           
  1160                           ; 2 bytes @ 0x1A
  1161  00001B                     	ds	1
  1162  00001C                     
  1163                           ; 1 bytes @ 0x1B
  1164  00001C                     	ds	1
  1165  00001D                     ___awmod@divisor:
  1166                           	callstack 0
  1167                           
  1168                           ; 2 bytes @ 0x1C
  1169  00001D                     	ds	2
  1170  00001F                     ___awmod@counter:
  1171                           	callstack 0
  1172                           
  1173                           ; 1 bytes @ 0x1E
  1174  00001F                     	ds	1
  1175  000020                     ___awmod@sign:
  1176                           	callstack 0
  1177                           
  1178                           ; 1 bytes @ 0x1F
  1179  000020                     	ds	1
  1180  000021                     ??_testeLampadas:
  1181  000021                     ?_getAD_ANbit:
  1182                           	callstack 0
  1183  000021                     getAD_ANbit@porta:
  1184                           	callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x20
  1187  000021                     	ds	2
  1188  000023                     getAD_ANbit@ANread:
  1189                           	callstack 0
  1190  000023                     testeLampadas@i:
  1191                           	callstack 0
  1192                           
  1193                           ; 2 bytes @ 0x22
  1194  000023                     	ds	2
  1195  000025                     ?_valorConvUARTbit:
  1196                           	callstack 0
  1197  000025                     ?___xxtofl:
  1198                           	callstack 0
  1199  000025                     valorConvUARTbit@valor:
  1200                           	callstack 0
  1201  000025                     ___xxtofl@val:
  1202                           	callstack 0
  1203                           
  1204                           ; 4 bytes @ 0x24
  1205  000025                     	ds	2
  1206  000027                     valorConvUARTbit@string:
  1207                           	callstack 0
  1208                           
  1209                           ; 5 bytes @ 0x26
  1210  000027                     	ds	2
  1211  000029                     ??___xxtofl:
  1212                           
  1213                           ; 1 bytes @ 0x28
  1214  000029                     	ds	3
  1215  00002C                     valorConvUARTbit@milhar:
  1216                           	callstack 0
  1217                           
  1218                           ; 2 bytes @ 0x2B
  1219  00002C                     	ds	1
  1220  00002D                     ___xxtofl@sign:
  1221                           	callstack 0
  1222                           
  1223                           ; 1 bytes @ 0x2C
  1224  00002D                     	ds	1
  1225  00002E                     ___xxtofl@exp:
  1226                           	callstack 0
  1227  00002E                     valorConvUARTbit@centena:
  1228                           	callstack 0
  1229                           
  1230                           ; 2 bytes @ 0x2D
  1231  00002E                     	ds	1
  1232  00002F                     ___xxtofl@arg:
  1233                           	callstack 0
  1234                           
  1235                           ; 4 bytes @ 0x2E
  1236  00002F                     	ds	1
  1237  000030                     valorConvUARTbit@dezena:
  1238                           	callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x2F
  1241  000030                     	ds	2
  1242  000032                     valorConvUARTbit@unidade:
  1243                           	callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x31
  1246  000032                     	ds	1
  1247  000033                     ??_configDA:
  1248  000033                     ?___flmul:
  1249                           	callstack 0
  1250  000033                     ___flmul@b:
  1251                           	callstack 0
  1252                           
  1253                           ; 4 bytes @ 0x32
  1254  000033                     	ds	1
  1255  000034                     _valorConvUARTbit$1587:
  1256                           	callstack 0
  1257                           
  1258                           ; 2 bytes @ 0x33
  1259  000034                     	ds	1
  1260  000035                     configDA@i:
  1261                           	callstack 0
  1262                           
  1263                           ; 2 bytes @ 0x34
  1264  000035                     	ds	2
  1265  000037                     ___flmul@a:
  1266                           	callstack 0
  1267                           
  1268                           ; 4 bytes @ 0x36
  1269  000037                     	ds	4
  1270  00003B                     ??_testeMotores:
  1271  00003B                     lados@lado:
  1272                           	callstack 0
  1273                           
  1274                           ; 1 bytes @ 0x3A
  1275  00003B                     	ds	1
  1276  00003C                     
  1277                           ; 1 bytes @ 0x3B
  1278 ;;
  1279 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1280 ;;
  1281 ;; *************** function _main *****************
  1282 ;; Defined at:
  1283 ;;		line 104 in file "main.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;		None
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;  AN6             2    0        int 
  1288 ;;  AN5             2    0        int 
  1289 ;;  AN4             2    0        int 
  1290 ;;  AN3             2    0        int 
  1291 ;;  AN2             2    0        int 
  1292 ;;  AN1             2    0        int 
  1293 ;;  AN0             2    0        int 
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1303 ;;      Params:         0       0       0       0
  1304 ;;      Locals:         0       0       0       0
  1305 ;;      Temps:          0       0       1       0
  1306 ;;      Totals:         0       0       1       0
  1307 ;;Total ram usage:        1 bytes
  1308 ;; Hardware stack levels required when called: 9
  1309 ;; This function calls:
  1310 ;;		_PrintSensores
  1311 ;;		_UARTReadChar
  1312 ;;		_UARTSendChar
  1313 ;;		_UARTSendString
  1314 ;;		_configAD
  1315 ;;		_configBits
  1316 ;;		_configDA
  1317 ;;		_configPWM
  1318 ;;		_configUSART
  1319 ;;		_getAD_AN
  1320 ;;		_initTimer0
  1321 ;;		_moverMotor
  1322 ;;		_myStrncmp
  1323 ;;		_setDutyPWM0
  1324 ;;		_setDutyPWM2
  1325 ;;		_setDutyPWM4
  1326 ;;		_setDutyPWM6
  1327 ;;		_setPID
  1328 ;;		_testeAD
  1329 ;;		_testeADbit
  1330 ;;		_testeLampadas
  1331 ;;		_testeMotores
  1332 ;; This function is called by:
  1333 ;;		Startup code after reset
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           	psect	text0
  1338  0013E0                     __ptext0:
  1339                           	callstack 0
  1340  0013E0                     _main:
  1341                           	callstack 22
  1342  0013E0                     
  1343                           ;main.c: 109:     _delay((unsigned long)((20)*(20000000/4000.0)));
  1344  0013E0  0E82               	movlw	130
  1345  0013E2  0101               	movlb	1	; () banked
  1346  0013E4  6F36               	movwf	??_main& (0+255),b
  1347  0013E6  0EDD               	movlw	221
  1348  0013E8                     u5457:
  1349  0013E8  2EE8               	decfsz	wreg,f,c
  1350  0013EA  D7FE               	bra	u5457
  1351  0013EC  2F36               	decfsz	??_main& (0+255),f,b
  1352  0013EE  D7FC               	bra	u5457
  1353  0013F0  F000 F000          	nop2	
  1354  0013F4                     
  1355                           ;main.c: 111:     ANSEL0 = 0b11111111;
  1356  0013F4  68B8               	setf	184,c	;volatile
  1357  0013F6                     
  1358                           ;main.c: 112:     ANSEL1 = 0b00000001;
  1359  0013F6  0E01               	movlw	1
  1360  0013F8  6EB9               	movwf	185,c	;volatile
  1361  0013FA                     
  1362                           ;main.c: 114:     TRISA = 0b11111111;
  1363  0013FA  6892               	setf	146,c	;volatile
  1364  0013FC                     
  1365                           ;main.c: 115:     TRISB = 0b00000000;
  1366  0013FC  0E00               	movlw	0
  1367  0013FE  6E93               	movwf	147,c	;volatile
  1368  001400                     
  1369                           ;main.c: 116:     TRISC = 0b10000000;
  1370  001400  0E80               	movlw	128
  1371  001402  6E94               	movwf	148,c	;volatile
  1372  001404                     
  1373                           ;main.c: 117:     TRISD = 0b00011100;
  1374  001404  0E1C               	movlw	28
  1375  001406  6E95               	movwf	149,c	;volatile
  1376  001408                     
  1377                           ;main.c: 118:     TRISE = 0b00000111;
  1378  001408  0E07               	movlw	7
  1379  00140A  6E96               	movwf	150,c	;volatile
  1380  00140C                     
  1381                           ;main.c: 120:     PORTB = 0b00000000;
  1382  00140C  0E00               	movlw	0
  1383  00140E  6E81               	movwf	129,c	;volatile
  1384  001410                     
  1385                           ;main.c: 121:     PORTC = 0b11111111;
  1386  001410  6882               	setf	130,c	;volatile
  1387  001412                     
  1388                           ;main.c: 122:     PORTD = 0b00000000;
  1389  001412  0E00               	movlw	0
  1390  001414  6E83               	movwf	131,c	;volatile
  1391  001416                     
  1392                           ;main.c: 123:     PORTE = 0b00000000;
  1393  001416  0E00               	movlw	0
  1394  001418  6E84               	movwf	132,c	;volatile
  1395  00141A                     
  1396                           ;main.c: 125:     INTCONbits.GIE = 1;
  1397  00141A  8EF2               	bsf	242,7,c	;volatile
  1398  00141C                     
  1399                           ;main.c: 126:     INTCONbits.PEIE = 1;
  1400  00141C  8CF2               	bsf	242,6,c	;volatile
  1401  00141E                     
  1402                           ;main.c: 127:     INTCONbits.TMR0IE = 1;
  1403  00141E  8AF2               	bsf	242,5,c	;volatile
  1404  001420                     
  1405                           ;main.c: 129:     configBits();
  1406  001420  EC5E  F01A         	call	_configBits	;wreg free
  1407  001424                     
  1408                           ;main.c: 130:     configUSART();
  1409  001424  EC19  F01A         	call	_configUSART	;wreg free
  1410  001428                     
  1411                           ;main.c: 131:     configPWM();
  1412  001428  ECE5  F019         	call	_configPWM	;wreg free
  1413  00142C                     
  1414                           ;main.c: 132:     configAD();
  1415  00142C  ECF7  F019         	call	_configAD	;wreg free
  1416  001430                     
  1417                           ;main.c: 134:     initTimer0(99);
  1418  001430  0E00               	movlw	0
  1419  001432  6E14               	movwf	(initTimer0@tempoInicial+1)^0,c
  1420  001434  0E63               	movlw	99
  1421  001436  6E13               	movwf	initTimer0@tempoInicial^0,c
  1422  001438  EC4A  F01A         	call	_initTimer0	;wreg free
  1423  00143C                     
  1424                           ;main.c: 136:     comando = "\0";
  1425  00143C  0EFA               	movlw	low STR_63
  1426  00143E  0100               	movlb	0	; () banked
  1427  001440  6FFE               	movwf	_comando& (0+255),b
  1428  001442  0E3F               	movlw	high STR_63
  1429  001444  6FFF               	movwf	(_comando+1)& (0+255),b
  1430  001446                     l4956:
  1431                           
  1432                           ;main.c: 141:         if (getAD_AN(6) >= 350) {
  1433  001446  0E00               	movlw	0
  1434  001448  0100               	movlb	0	; () banked
  1435  00144A  6F8C               	movwf	(getAD_AN@porta+1)& (0+255),b
  1436  00144C  0E06               	movlw	6
  1437  00144E  6F8B               	movwf	getAD_AN@porta& (0+255),b
  1438  001450  EC32  F012         	call	_getAD_AN	;wreg free
  1439  001454  0100               	movlb	0	; () banked
  1440  001456  BF8C               	btfsc	(?_getAD_AN+1)& (0+255),7,b
  1441  001458  EF37  F00A         	goto	u5341
  1442  00145C  0E5E               	movlw	94
  1443  00145E  5D8B               	subwf	?_getAD_AN& (0+255),w,b
  1444  001460  0E01               	movlw	1
  1445  001462  598C               	subwfb	(?_getAD_AN+1)& (0+255),w,b
  1446  001464  A0D8               	btfss	status,0,c
  1447  001466  EF37  F00A         	goto	u5341
  1448  00146A  EF39  F00A         	goto	u5340
  1449  00146E                     u5341:
  1450  00146E  EF4C  F00B         	goto	l5032
  1451  001472                     u5340:
  1452  001472                     
  1453                           ; BSR set to: 0
  1454                           ;main.c: 142:             if (myStrncmp(comando, "idle")) {
  1455  001472  C0FE  F018         	movff	_comando,myStrncmp@str1
  1456  001476  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  1457  00147A  0EEB               	movlw	low STR_3
  1458  00147C  6E1A               	movwf	myStrncmp@str2^0,c
  1459  00147E  0E3F               	movlw	high STR_3
  1460  001480  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  1461  001482  EC09  F019         	call	_myStrncmp	;wreg free
  1462  001486  5018               	movf	?_myStrncmp^0,w,c
  1463  001488  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  1464  00148A  B4D8               	btfsc	status,2,c
  1465  00148C  EF4A  F00A         	goto	u5351
  1466  001490  EF4C  F00A         	goto	u5350
  1467  001494                     u5351:
  1468  001494  EF50  F00A         	goto	l4962
  1469  001498                     u5350:
  1470  001498                     
  1471                           ;main.c: 143:                 UARTSendChar(UARTReadChar());
  1472  001498  EC54  F01A         	call	_UARTReadChar	;wreg free
  1473  00149C  EC3E  F01A         	call	_UARTSendChar
  1474  0014A0                     l4962:
  1475                           
  1476                           ;main.c: 146:             if (myStrncmp(comando, "testeMotores")) {
  1477  0014A0  C0FE  F018         	movff	_comando,myStrncmp@str1
  1478  0014A4  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  1479  0014A8  0E4C               	movlw	low STR_53
  1480  0014AA  6E1A               	movwf	myStrncmp@str2^0,c
  1481  0014AC  0E3F               	movlw	high STR_53
  1482  0014AE  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  1483  0014B0  EC09  F019         	call	_myStrncmp	;wreg free
  1484  0014B4  5018               	movf	?_myStrncmp^0,w,c
  1485  0014B6  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  1486  0014B8  B4D8               	btfsc	status,2,c
  1487  0014BA  EF61  F00A         	goto	u5361
  1488  0014BE  EF63  F00A         	goto	u5360
  1489  0014C2                     u5361:
  1490  0014C2  EF65  F00A         	goto	l4966
  1491  0014C6                     u5360:
  1492  0014C6                     
  1493                           ;main.c: 147:                 testeMotores();
  1494  0014C6  ECD3  F003         	call	_testeMotores	;wreg free
  1495  0014CA                     l4966:
  1496                           
  1497                           ;main.c: 150:             if (myStrncmp(comando, "testeLampadas")) {
  1498  0014CA  C0FE  F018         	movff	_comando,myStrncmp@str1
  1499  0014CE  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  1500  0014D2  0E0A               	movlw	low STR_54
  1501  0014D4  6E1A               	movwf	myStrncmp@str2^0,c
  1502  0014D6  0E3F               	movlw	high STR_54
  1503  0014D8  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  1504  0014DA  EC09  F019         	call	_myStrncmp	;wreg free
  1505  0014DE  5018               	movf	?_myStrncmp^0,w,c
  1506  0014E0  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  1507  0014E2  B4D8               	btfsc	status,2,c
  1508  0014E4  EF76  F00A         	goto	u5371
  1509  0014E8  EF78  F00A         	goto	u5370
  1510  0014EC                     u5371:
  1511  0014EC  EF7A  F00A         	goto	l383
  1512  0014F0                     u5370:
  1513  0014F0                     
  1514                           ;main.c: 151:                 testeLampadas();
  1515  0014F0  EC9B  F011         	call	_testeLampadas	;wreg free
  1516  0014F4                     l383:
  1517                           
  1518                           ;main.c: 154:             if (myStrncmp(comando, "AD")) {
  1519  0014F4  C0FE  F018         	movff	_comando,myStrncmp@str1
  1520  0014F8  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  1521  0014FC  0EF4               	movlw	low STR_55
  1522  0014FE  6E1A               	movwf	myStrncmp@str2^0,c
  1523  001500  0E3F               	movlw	high STR_55
  1524  001502  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  1525  001504  EC09  F019         	call	_myStrncmp	;wreg free
  1526  001508  5018               	movf	?_myStrncmp^0,w,c
  1527  00150A  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  1528  00150C  B4D8               	btfsc	status,2,c
  1529  00150E  EF8B  F00A         	goto	u5381
  1530  001512  EF8D  F00A         	goto	u5380
  1531  001516                     u5381:
  1532  001516  EF93  F00A         	goto	l4974
  1533  00151A                     u5380:
  1534  00151A                     
  1535                           ;main.c: 155:                 UARTSendChar(UARTReadChar());
  1536  00151A  EC54  F01A         	call	_UARTReadChar	;wreg free
  1537  00151E  EC3E  F01A         	call	_UARTSendChar
  1538  001522                     
  1539                           ;main.c: 156:                 testeAD();
  1540  001522  EC44  F00E         	call	_testeAD	;wreg free
  1541  001526                     l4974:
  1542                           
  1543                           ;main.c: 159:             if (myStrncmp(comando, "testeADbit")) {
  1544  001526  C0FE  F018         	movff	_comando,myStrncmp@str1
  1545  00152A  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  1546  00152E  0EAC               	movlw	low STR_58
  1547  001530  6E1A               	movwf	myStrncmp@str2^0,c
  1548  001532  0E3F               	movlw	high STR_58
  1549  001534  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  1550  001536  EC09  F019         	call	_myStrncmp	;wreg free
  1551  00153A  5018               	movf	?_myStrncmp^0,w,c
  1552  00153C  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  1553  00153E  B4D8               	btfsc	status,2,c
  1554  001540  EFA4  F00A         	goto	u5391
  1555  001544  EFA6  F00A         	goto	u5390
  1556  001548                     u5391:
  1557  001548  EFAC  F00A         	goto	l4980
  1558  00154C                     u5390:
  1559  00154C                     
  1560                           ;main.c: 160:                 UARTSendChar(UARTReadChar());
  1561  00154C  EC54  F01A         	call	_UARTReadChar	;wreg free
  1562  001550  EC3E  F01A         	call	_UARTSendChar
  1563  001554                     
  1564                           ;main.c: 161:                 testeADbit();
  1565  001554  ECBC  F012         	call	_testeADbit	;wreg free
  1566  001558                     l4980:
  1567                           
  1568                           ;main.c: 164:             if (myStrncmp(comando, "PID")) {
  1569  001558  C0FE  F018         	movff	_comando,myStrncmp@str1
  1570  00155C  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  1571  001560  0EF0               	movlw	low STR_56
  1572  001562  6E1A               	movwf	myStrncmp@str2^0,c
  1573  001564  0E3F               	movlw	high STR_56
  1574  001566  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  1575  001568  EC09  F019         	call	_myStrncmp	;wreg free
  1576  00156C  5018               	movf	?_myStrncmp^0,w,c
  1577  00156E  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  1578  001570  B4D8               	btfsc	status,2,c
  1579  001572  EFBD  F00A         	goto	u5401
  1580  001576  EFBF  F00A         	goto	u5400
  1581  00157A                     u5401:
  1582  00157A  EFC3  F00A         	goto	l4986
  1583  00157E                     u5400:
  1584  00157E                     
  1585                           ;main.c: 165:                 setPID();
  1586  00157E  EC79  F00B         	call	_setPID	;wreg free
  1587  001582                     
  1588                           ;main.c: 166:                 PrintSensores();
  1589  001582  ECEA  F00C         	call	_PrintSensores	;wreg free
  1590  001586                     l4986:
  1591                           
  1592                           ;main.c: 168:             if (myStrncmp(comando, "LeituraSensores")) {
  1593  001586  C0FE  F018         	movff	_comando,myStrncmp@str1
  1594  00158A  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  1595  00158E  0EDC               	movlw	low STR_57
  1596  001590  6E1A               	movwf	myStrncmp@str2^0,c
  1597  001592  0E3E               	movlw	high STR_57
  1598  001594  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  1599  001596  EC09  F019         	call	_myStrncmp	;wreg free
  1600  00159A  5018               	movf	?_myStrncmp^0,w,c
  1601  00159C  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  1602  00159E  B4D8               	btfsc	status,2,c
  1603  0015A0  EFD4  F00A         	goto	u5411
  1604  0015A4  EFD6  F00A         	goto	u5410
  1605  0015A8                     u5411:
  1606  0015A8  EFDA  F00A         	goto	l4992
  1607  0015AC                     u5410:
  1608  0015AC                     
  1609                           ;main.c: 169:                 configDA();
  1610  0015AC  EC01  F011         	call	_configDA	;wreg free
  1611  0015B0                     
  1612                           ;main.c: 170:                 PrintSensores();
  1613  0015B0  ECEA  F00C         	call	_PrintSensores	;wreg free
  1614  0015B4                     l4992:
  1615                           
  1616                           ;main.c: 172:             if (myStrncmp(comando, "MoverPraFrente")) {
  1617  0015B4  C0FE  F018         	movff	_comando,myStrncmp@str1
  1618  0015B8  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  1619  0015BC  0EFB               	movlw	low STR_59
  1620  0015BE  6E1A               	movwf	myStrncmp@str2^0,c
  1621  0015C0  0E3E               	movlw	high STR_59
  1622  0015C2  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  1623  0015C4  EC09  F019         	call	_myStrncmp	;wreg free
  1624  0015C8  5018               	movf	?_myStrncmp^0,w,c
  1625  0015CA  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  1626  0015CC  B4D8               	btfsc	status,2,c
  1627  0015CE  EFEB  F00A         	goto	u5421
  1628  0015D2  EFED  F00A         	goto	u5420
  1629  0015D6                     u5421:
  1630  0015D6  EFF4  F00A         	goto	l4996
  1631  0015DA                     u5420:
  1632  0015DA                     
  1633                           ;main.c: 173:                 moverMotor(0);
  1634  0015DA  0E00               	movlw	0
  1635  0015DC  0100               	movlb	0	; () banked
  1636  0015DE  6F8E               	movwf	(moverMotor@PID+1)& (0+255),b
  1637  0015E0  0E00               	movlw	0
  1638  0015E2  6F8D               	movwf	moverMotor@PID& (0+255),b
  1639  0015E4  EC33  F015         	call	_moverMotor	;wreg free
  1640  0015E8                     l4996:
  1641                           
  1642                           ;main.c: 177:             if (myStrncmp(comando, "RotinaFuncionamento")) {
  1643  0015E8  C0FE  F018         	movff	_comando,myStrncmp@str1
  1644  0015EC  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  1645  0015F0  0EA5               	movlw	low STR_60
  1646  0015F2  6E1A               	movwf	myStrncmp@str2^0,c
  1647  0015F4  0E3E               	movlw	high STR_60
  1648  0015F6  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  1649  0015F8  EC09  F019         	call	_myStrncmp	;wreg free
  1650  0015FC  5018               	movf	?_myStrncmp^0,w,c
  1651  0015FE  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  1652  001600  B4D8               	btfsc	status,2,c
  1653  001602  EF05  F00B         	goto	u5431
  1654  001606  EF07  F00B         	goto	u5430
  1655  00160A                     u5431:
  1656  00160A  EF23  F00A         	goto	l4956
  1657  00160E                     u5430:
  1658  00160E                     
  1659                           ;main.c: 178:                 setPID();
  1660  00160E  EC79  F00B         	call	_setPID	;wreg free
  1661  001612                     
  1662                           ;main.c: 179:                 PrintSensores();
  1663  001612  ECEA  F00C         	call	_PrintSensores	;wreg free
  1664  001616                     
  1665                           ;main.c: 180:                 RC0 = 0;
  1666  001616  9082               	bcf	3970,0,c	;volatile
  1667  001618                     
  1668                           ;main.c: 181:                 RC1 = 0;
  1669  001618  9282               	bcf	3970,1,c	;volatile
  1670  00161A                     
  1671                           ;main.c: 182:                 RC2 = 0;
  1672  00161A  9482               	bcf	3970,2,c	;volatile
  1673  00161C                     
  1674                           ;main.c: 183:                 RC3 = 0;
  1675  00161C  9682               	bcf	3970,3,c	;volatile
  1676  00161E                     
  1677                           ;main.c: 185:                 if (millis > 120000) {
  1678  00161E  0100               	movlb	0	; () banked
  1679  001620  51E9               	movf	(_millis+3)& (0+255),w,b
  1680  001622  E10D               	bnz	u5440
  1681  001624  0EC1               	movlw	193
  1682  001626  5DE6               	subwf	_millis& (0+255),w,b
  1683  001628  0ED4               	movlw	212
  1684  00162A  59E7               	subwfb	(_millis+1)& (0+255),w,b
  1685  00162C  0E01               	movlw	1
  1686  00162E  59E8               	subwfb	(_millis+2)& (0+255),w,b
  1687  001630  A0D8               	btfss	status,0,c
  1688  001632  EF1D  F00B         	goto	u5441
  1689  001636  EF1F  F00B         	goto	u5440
  1690  00163A                     u5441:
  1691  00163A  EF75  F00B         	goto	l391
  1692  00163E                     u5440:
  1693  00163E                     
  1694                           ; BSR set to: 0
  1695                           ;main.c: 187:                     UARTSendString("IDLE", 16);
  1696  00163E  0EE6               	movlw	low STR_62
  1697  001640  6FA0               	movwf	UARTSendString@str& (0+255),b
  1698  001642  0E3F               	movlw	high STR_62
  1699  001644  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  1700  001646  0E00               	movlw	0
  1701  001648  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  1702  00164A  0E10               	movlw	16
  1703  00164C  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  1704  00164E  ECA0  F015         	call	_UARTSendString	;wreg free
  1705  001652                     
  1706                           ;main.c: 188:                     comando = "idle";
  1707  001652  0EEB               	movlw	low STR_3
  1708  001654  0100               	movlb	0	; () banked
  1709  001656  6FFE               	movwf	_comando& (0+255),b
  1710  001658  0E3F               	movlw	high STR_3
  1711  00165A  6FFF               	movwf	(_comando+1)& (0+255),b
  1712  00165C                     
  1713                           ; BSR set to: 0
  1714                           ;main.c: 189:                     setDutyPWM0(0);
  1715  00165C  0E00               	movlw	0
  1716  00165E  6E1A               	movwf	(setDutyPWM0@porcVelo+1)^0,c
  1717  001660  0E00               	movlw	0
  1718  001662  6E19               	movwf	setDutyPWM0@porcVelo^0,c
  1719  001664  EC60  F019         	call	_setDutyPWM0	;wreg free
  1720  001668                     
  1721                           ;main.c: 190:                     setDutyPWM2(0);
  1722  001668  0E00               	movlw	0
  1723  00166A  6E1A               	movwf	(setDutyPWM2@porcVelo+1)^0,c
  1724  00166C  0E00               	movlw	0
  1725  00166E  6E19               	movwf	setDutyPWM2@porcVelo^0,c
  1726  001670  EC4D  F019         	call	_setDutyPWM2	;wreg free
  1727  001674                     
  1728                           ;main.c: 191:                     setDutyPWM4(0);
  1729  001674  0E00               	movlw	0
  1730  001676  6E1A               	movwf	(setDutyPWM4@porcVelo+1)^0,c
  1731  001678  0E00               	movlw	0
  1732  00167A  6E19               	movwf	setDutyPWM4@porcVelo^0,c
  1733  00167C  EC3A  F019         	call	_setDutyPWM4	;wreg free
  1734  001680                     
  1735                           ;main.c: 192:                     setDutyPWM6(0);
  1736  001680  0E00               	movlw	0
  1737  001682  6E1A               	movwf	(setDutyPWM6@porcVelo+1)^0,c
  1738  001684  0E00               	movlw	0
  1739  001686  6E19               	movwf	setDutyPWM6@porcVelo^0,c
  1740  001688  EC27  F019         	call	_setDutyPWM6	;wreg free
  1741  00168C                     
  1742                           ;main.c: 194:                     RC0 = 1;
  1743  00168C  8082               	bsf	3970,0,c	;volatile
  1744  00168E                     
  1745                           ;main.c: 195:                     RC1 = 1;
  1746  00168E  8282               	bsf	3970,1,c	;volatile
  1747  001690                     
  1748                           ;main.c: 196:                     RC2 = 1;
  1749  001690  8482               	bsf	3970,2,c	;volatile
  1750  001692                     
  1751                           ;main.c: 197:                     RC3 = 1;
  1752  001692  8682               	bsf	3970,3,c	;volatile
  1753  001694  EF23  F00A         	goto	l4956
  1754  001698                     l5032:
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;main.c: 202:             setDutyPWM0(0);
  1758  001698  0E00               	movlw	0
  1759  00169A  6E1A               	movwf	(setDutyPWM0@porcVelo+1)^0,c
  1760  00169C  0E00               	movlw	0
  1761  00169E  6E19               	movwf	setDutyPWM0@porcVelo^0,c
  1762  0016A0  EC60  F019         	call	_setDutyPWM0	;wreg free
  1763                           
  1764                           ;main.c: 203:             setDutyPWM2(0);
  1765  0016A4  0E00               	movlw	0
  1766  0016A6  6E1A               	movwf	(setDutyPWM2@porcVelo+1)^0,c
  1767  0016A8  0E00               	movlw	0
  1768  0016AA  6E19               	movwf	setDutyPWM2@porcVelo^0,c
  1769  0016AC  EC4D  F019         	call	_setDutyPWM2	;wreg free
  1770                           
  1771                           ;main.c: 204:             setDutyPWM4(0);
  1772  0016B0  0E00               	movlw	0
  1773  0016B2  6E1A               	movwf	(setDutyPWM4@porcVelo+1)^0,c
  1774  0016B4  0E00               	movlw	0
  1775  0016B6  6E19               	movwf	setDutyPWM4@porcVelo^0,c
  1776  0016B8  EC3A  F019         	call	_setDutyPWM4	;wreg free
  1777                           
  1778                           ;main.c: 205:             setDutyPWM6(0);
  1779  0016BC  0E00               	movlw	0
  1780  0016BE  6E1A               	movwf	(setDutyPWM6@porcVelo+1)^0,c
  1781  0016C0  0E00               	movlw	0
  1782  0016C2  6E19               	movwf	setDutyPWM6@porcVelo^0,c
  1783  0016C4  EC27  F019         	call	_setDutyPWM6	;wreg free
  1784  0016C8                     
  1785                           ;main.c: 207:             RC0 = 1;
  1786  0016C8  8082               	bsf	3970,0,c	;volatile
  1787  0016CA                     
  1788                           ;main.c: 208:             RC1 = 1;
  1789  0016CA  8282               	bsf	3970,1,c	;volatile
  1790  0016CC                     
  1791                           ;main.c: 209:             RC2 = 1;
  1792  0016CC  8482               	bsf	3970,2,c	;volatile
  1793  0016CE                     
  1794                           ;main.c: 210:             RC3 = 1;
  1795  0016CE  8682               	bsf	3970,3,c	;volatile
  1796  0016D0                     
  1797                           ;main.c: 211:             UARTSendString("RECARREGAR BATERIA", 16);
  1798  0016D0  0EB9               	movlw	low STR_84
  1799  0016D2  0100               	movlb	0	; () banked
  1800  0016D4  6FA0               	movwf	UARTSendString@str& (0+255),b
  1801  0016D6  0E3E               	movlw	high STR_84
  1802  0016D8  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  1803  0016DA  0E00               	movlw	0
  1804  0016DC  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  1805  0016DE  0E10               	movlw	16
  1806  0016E0  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  1807  0016E2  ECA0  F015         	call	_UARTSendString	;wreg free
  1808  0016E6  EF23  F00A         	goto	l4956
  1809  0016EA                     l391:
  1810                           
  1811                           ; BSR set to: 0
  1812  0016EA  EF23  F00A         	goto	l4956
  1813  0016EE  EF70  F001         	goto	start
  1814  0016F2                     __end_of_main:
  1815                           	callstack 0
  1816                           
  1817 ;; *************** function _testeMotores *****************
  1818 ;; Defined at:
  1819 ;;		line 115 in file "./geral.h"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;		None
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;  i               2   72[BANK0 ] int 
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  1    wreg      void 
  1826 ;; Registers used:
  1827 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1833 ;;      Params:         0       0       0       0
  1834 ;;      Locals:         0       2       0       0
  1835 ;;      Temps:          1       0       0       0
  1836 ;;      Totals:         1       2       0       0
  1837 ;;Total ram usage:        3 bytes
  1838 ;; Hardware stack levels used: 1
  1839 ;; Hardware stack levels required when called: 7
  1840 ;; This function calls:
  1841 ;;		_UARTSendString
  1842 ;;		_myStrncmp
  1843 ;;		_setDutyPWM0
  1844 ;;		_setDutyPWM2
  1845 ;;		_setDutyPWM4
  1846 ;;		_setDutyPWM6
  1847 ;; This function is called by:
  1848 ;;		_main
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852                           	psect	text1
  1853  0007A6                     __ptext1:
  1854                           	callstack 0
  1855  0007A6                     _testeMotores:
  1856                           	callstack 23
  1857  0007A6                     
  1858                           ;./geral.h: 117:     for(i = 0; i <= 100; i++){;./geral.h: 118:         setDutyPWM6(i);
  1859  0007A6  8C81               	bsf	129,6,c	;volatile
  1860                           
  1861                           ;./geral.h: 119:         setDutyPWM4(i);
  1862  0007A8  8E81               	bsf	129,7,c	;volatile
  1863  0007AA                     
  1864                           ;./geral.h: 123:     setDutyPWM6(0);
  1865  0007AA  0EEC               	movlw	low STR_2
  1866  0007AC  0100               	movlb	0	; () banked
  1867  0007AE  6FA0               	movwf	UARTSendString@str& (0+255),b
  1868  0007B0  0E3E               	movlw	high STR_2
  1869  0007B2  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  1870  0007B4  0E00               	movlw	0
  1871  0007B6  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  1872  0007B8  0E10               	movlw	16
  1873  0007BA  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  1874  0007BC  ECA0  F015         	call	_UARTSendString	;wreg free
  1875  0007C0                     
  1876                           ;./geral.h: 124:     setDutyPWM4(0);
  1877  0007C0  0E00               	movlw	0
  1878  0007C2  0100               	movlb	0	; () banked
  1879  0007C4  6FA9               	movwf	(testeMotores@i+1)& (0+255),b
  1880  0007C6  0E00               	movlw	0
  1881  0007C8  6FA8               	movwf	testeMotores@i& (0+255),b
  1882  0007CA                     l3618:
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;./geral.h: 125: }
  1886  0007CA  C0A8  F019         	movff	testeMotores@i,setDutyPWM0@porcVelo
  1887  0007CE  C0A9  F01A         	movff	testeMotores@i+1,setDutyPWM0@porcVelo+1
  1888  0007D2  EC60  F019         	call	_setDutyPWM0	;wreg free
  1889  0007D6                     
  1890                           ;./geral.h: 126: 
  1891  0007D6  0E82               	movlw	130
  1892  0007D8  6E3B               	movwf	??_testeMotores^0,c
  1893  0007DA  0EDE               	movlw	222
  1894  0007DC                     u5467:
  1895  0007DC  2EE8               	decfsz	wreg,f,c
  1896  0007DE  D7FE               	bra	u5467
  1897  0007E0  2E3B               	decfsz	??_testeMotores^0,f,c
  1898  0007E2  D7FC               	bra	u5467
  1899  0007E4                     
  1900                           ;./geral.h: 127: 
  1901  0007E4  C0FE  F018         	movff	_comando,myStrncmp@str1
  1902  0007E8  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  1903  0007EC  0EEB               	movlw	low STR_3
  1904  0007EE  6E1A               	movwf	myStrncmp@str2^0,c
  1905  0007F0  0E3F               	movlw	high STR_3
  1906  0007F2  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  1907  0007F4  EC09  F019         	call	_myStrncmp	;wreg free
  1908  0007F8  5018               	movf	?_myStrncmp^0,w,c
  1909  0007FA  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  1910  0007FC  B4D8               	btfsc	status,2,c
  1911  0007FE  EF03  F004         	goto	u3641
  1912  000802  EF05  F004         	goto	u3640
  1913  000806                     u3641:
  1914  000806  EF07  F004         	goto	l3626
  1915  00080A                     u3640:
  1916  00080A  EF18  F004         	goto	l3630
  1917  00080E                     l3626:
  1918                           
  1919                           ;./geral.h: 128: 
  1920  00080E  0100               	movlb	0	; () banked
  1921  000810  4BA8               	infsnz	testeMotores@i& (0+255),f,b
  1922  000812  2BA9               	incf	(testeMotores@i+1)& (0+255),f,b
  1923  000814                     
  1924                           ; BSR set to: 0
  1925  000814  BFA9               	btfsc	(testeMotores@i+1)& (0+255),7,b
  1926  000816  EF16  F004         	goto	u3651
  1927  00081A  51A9               	movf	(testeMotores@i+1)& (0+255),w,b
  1928  00081C  E109               	bnz	u3650
  1929  00081E  0E65               	movlw	101
  1930  000820  5DA8               	subwf	testeMotores@i& (0+255),w,b
  1931  000822  A0D8               	btfss	status,0,c
  1932  000824  EF16  F004         	goto	u3651
  1933  000828  EF18  F004         	goto	u3650
  1934  00082C                     u3651:
  1935  00082C  EFE5  F003         	goto	l3618
  1936  000830                     u3650:
  1937  000830                     l3630:
  1938                           
  1939                           ;./geral.h: 129: 
  1940  000830  0ECC               	movlw	low STR_5
  1941  000832  0100               	movlb	0	; () banked
  1942  000834  6FA0               	movwf	UARTSendString@str& (0+255),b
  1943  000836  0E3E               	movlw	high STR_5
  1944  000838  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  1945  00083A  0E00               	movlw	0
  1946  00083C  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  1947  00083E  0E10               	movlw	16
  1948  000840  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  1949  000842  ECA0  F015         	call	_UARTSendString	;wreg free
  1950  000846                     
  1951                           ;./geral.h: 130: void testeLampadas(){
  1952  000846  0E00               	movlw	0
  1953  000848  6E1A               	movwf	(setDutyPWM0@porcVelo+1)^0,c
  1954  00084A  0E00               	movlw	0
  1955  00084C  6E19               	movwf	setDutyPWM0@porcVelo^0,c
  1956  00084E  EC60  F019         	call	_setDutyPWM0	;wreg free
  1957  000852                     
  1958                           ;./geral.h: 133:     for(i = 0; i < 16; i++){
  1959  000852  0E00               	movlw	0
  1960  000854  0100               	movlb	0	; () banked
  1961  000856  6FA9               	movwf	(testeMotores@i+1)& (0+255),b
  1962  000858  0E00               	movlw	0
  1963  00085A  6FA8               	movwf	testeMotores@i& (0+255),b
  1964  00085C                     l3640:
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;./geral.h: 134:         RC0 = bitExtract(i, 1, 0);
  1968  00085C  C0A8  F019         	movff	testeMotores@i,setDutyPWM6@porcVelo
  1969  000860  C0A9  F01A         	movff	testeMotores@i+1,setDutyPWM6@porcVelo+1
  1970  000864  EC27  F019         	call	_setDutyPWM6	;wreg free
  1971  000868                     
  1972                           ;./geral.h: 135:         RC1 = bitExtract(i, 1, 1);
  1973  000868  0E82               	movlw	130
  1974  00086A  6E3B               	movwf	??_testeMotores^0,c
  1975  00086C  0EDE               	movlw	222
  1976  00086E                     u5477:
  1977  00086E  2EE8               	decfsz	wreg,f,c
  1978  000870  D7FE               	bra	u5477
  1979  000872  2E3B               	decfsz	??_testeMotores^0,f,c
  1980  000874  D7FC               	bra	u5477
  1981  000876                     
  1982                           ;./geral.h: 136:         RC2 = bitExtract(i, 1, 2);
  1983  000876  C0FE  F018         	movff	_comando,myStrncmp@str1
  1984  00087A  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  1985  00087E  0EEB               	movlw	low STR_3
  1986  000880  6E1A               	movwf	myStrncmp@str2^0,c
  1987  000882  0E3F               	movlw	high STR_3
  1988  000884  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  1989  000886  EC09  F019         	call	_myStrncmp	;wreg free
  1990  00088A  5018               	movf	?_myStrncmp^0,w,c
  1991  00088C  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  1992  00088E  B4D8               	btfsc	status,2,c
  1993  000890  EF4C  F004         	goto	u3661
  1994  000894  EF4E  F004         	goto	u3660
  1995  000898                     u3661:
  1996  000898  EF50  F004         	goto	l3648
  1997  00089C                     u3660:
  1998  00089C  EF61  F004         	goto	l3652
  1999  0008A0                     l3648:
  2000                           
  2001                           ;./geral.h: 137:         RC3 = bitExtract(i, 1, 3);
  2002  0008A0  0100               	movlb	0	; () banked
  2003  0008A2  4BA8               	infsnz	testeMotores@i& (0+255),f,b
  2004  0008A4  2BA9               	incf	(testeMotores@i+1)& (0+255),f,b
  2005  0008A6                     
  2006                           ; BSR set to: 0
  2007  0008A6  BFA9               	btfsc	(testeMotores@i+1)& (0+255),7,b
  2008  0008A8  EF5F  F004         	goto	u3671
  2009  0008AC  51A9               	movf	(testeMotores@i+1)& (0+255),w,b
  2010  0008AE  E109               	bnz	u3670
  2011  0008B0  0E65               	movlw	101
  2012  0008B2  5DA8               	subwf	testeMotores@i& (0+255),w,b
  2013  0008B4  A0D8               	btfss	status,0,c
  2014  0008B6  EF5F  F004         	goto	u3671
  2015  0008BA  EF61  F004         	goto	u3670
  2016  0008BE                     u3671:
  2017  0008BE  EF2E  F004         	goto	l3640
  2018  0008C2                     u3670:
  2019  0008C2                     l3652:
  2020                           
  2021                           ;./geral.h: 138:         if(myStrncmp(comando, "idle")) break;
  2022  0008C2  0E00               	movlw	0
  2023  0008C4  6E1A               	movwf	(setDutyPWM6@porcVelo+1)^0,c
  2024  0008C6  0E00               	movlw	0
  2025  0008C8  6E19               	movwf	setDutyPWM6@porcVelo^0,c
  2026  0008CA  EC27  F019         	call	_setDutyPWM6	;wreg free
  2027  0008CE                     
  2028                           ;./geral.h: 141: }
  2029  0008CE  0E00               	movlw	0
  2030  0008D0  0100               	movlb	0	; () banked
  2031  0008D2  6FA9               	movwf	(testeMotores@i+1)& (0+255),b
  2032  0008D4  0E00               	movlw	0
  2033  0008D6  6FA8               	movwf	testeMotores@i& (0+255),b
  2034  0008D8                     l3660:
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;./geral.h: 142: 
  2038  0008D8  C0A8  F019         	movff	testeMotores@i,setDutyPWM2@porcVelo
  2039  0008DC  C0A9  F01A         	movff	testeMotores@i+1,setDutyPWM2@porcVelo+1
  2040  0008E0  EC4D  F019         	call	_setDutyPWM2	;wreg free
  2041  0008E4                     
  2042                           ;./geral.h: 143: void testeAD(){
  2043  0008E4  0E82               	movlw	130
  2044  0008E6  6E3B               	movwf	??_testeMotores^0,c
  2045  0008E8  0EDE               	movlw	222
  2046  0008EA                     u5487:
  2047  0008EA  2EE8               	decfsz	wreg,f,c
  2048  0008EC  D7FE               	bra	u5487
  2049  0008EE  2E3B               	decfsz	??_testeMotores^0,f,c
  2050  0008F0  D7FC               	bra	u5487
  2051  0008F2                     
  2052                           ;./geral.h: 144: 
  2053  0008F2  C0FE  F018         	movff	_comando,myStrncmp@str1
  2054  0008F6  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  2055  0008FA  0EEB               	movlw	low STR_3
  2056  0008FC  6E1A               	movwf	myStrncmp@str2^0,c
  2057  0008FE  0E3F               	movlw	high STR_3
  2058  000900  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  2059  000902  EC09  F019         	call	_myStrncmp	;wreg free
  2060  000906  5018               	movf	?_myStrncmp^0,w,c
  2061  000908  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  2062  00090A  B4D8               	btfsc	status,2,c
  2063  00090C  EF8A  F004         	goto	u3681
  2064  000910  EF8C  F004         	goto	u3680
  2065  000914                     u3681:
  2066  000914  EF8E  F004         	goto	l3668
  2067  000918                     u3680:
  2068  000918  EF9F  F004         	goto	l3672
  2069  00091C                     l3668:
  2070                           
  2071                           ;./geral.h: 145: 
  2072  00091C  0100               	movlb	0	; () banked
  2073  00091E  4BA8               	infsnz	testeMotores@i& (0+255),f,b
  2074  000920  2BA9               	incf	(testeMotores@i+1)& (0+255),f,b
  2075  000922                     
  2076                           ; BSR set to: 0
  2077  000922  BFA9               	btfsc	(testeMotores@i+1)& (0+255),7,b
  2078  000924  EF9D  F004         	goto	u3691
  2079  000928  51A9               	movf	(testeMotores@i+1)& (0+255),w,b
  2080  00092A  E109               	bnz	u3690
  2081  00092C  0E65               	movlw	101
  2082  00092E  5DA8               	subwf	testeMotores@i& (0+255),w,b
  2083  000930  A0D8               	btfss	status,0,c
  2084  000932  EF9D  F004         	goto	u3691
  2085  000936  EF9F  F004         	goto	u3690
  2086  00093A                     u3691:
  2087  00093A  EF6C  F004         	goto	l3660
  2088  00093E                     u3690:
  2089  00093E                     l3672:
  2090                           
  2091                           ;./geral.h: 146: 
  2092  00093E  0E00               	movlw	0
  2093  000940  6E1A               	movwf	(setDutyPWM2@porcVelo+1)^0,c
  2094  000942  0E00               	movlw	0
  2095  000944  6E19               	movwf	setDutyPWM2@porcVelo^0,c
  2096  000946  EC4D  F019         	call	_setDutyPWM2	;wreg free
  2097  00094A                     
  2098                           ;./geral.h: 149:     UARTSendString("\n",16);
  2099  00094A  0E00               	movlw	0
  2100  00094C  0100               	movlb	0	; () banked
  2101  00094E  6FA9               	movwf	(testeMotores@i+1)& (0+255),b
  2102  000950  0E00               	movlw	0
  2103  000952  6FA8               	movwf	testeMotores@i& (0+255),b
  2104  000954                     l3680:
  2105                           
  2106                           ; BSR set to: 0
  2107                           ;./geral.h: 150: 
  2108  000954  C0A8  F019         	movff	testeMotores@i,setDutyPWM2@porcVelo
  2109  000958  C0A9  F01A         	movff	testeMotores@i+1,setDutyPWM2@porcVelo+1
  2110  00095C  EC4D  F019         	call	_setDutyPWM2	;wreg free
  2111  000960                     
  2112                           ;./geral.h: 151:     UARTSendString("AN2: ",16);
  2113  000960  0E82               	movlw	130
  2114  000962  6E3B               	movwf	??_testeMotores^0,c
  2115  000964  0EDE               	movlw	222
  2116  000966                     u5497:
  2117  000966  2EE8               	decfsz	wreg,f,c
  2118  000968  D7FE               	bra	u5497
  2119  00096A  2E3B               	decfsz	??_testeMotores^0,f,c
  2120  00096C  D7FC               	bra	u5497
  2121  00096E                     
  2122                           ;./geral.h: 152:     UARTSendString(valorConvUART(getAD_AN(2)), 16);
  2123  00096E  C0FE  F018         	movff	_comando,myStrncmp@str1
  2124  000972  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  2125  000976  0EEB               	movlw	low STR_3
  2126  000978  6E1A               	movwf	myStrncmp@str2^0,c
  2127  00097A  0E3F               	movlw	high STR_3
  2128  00097C  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  2129  00097E  EC09  F019         	call	_myStrncmp	;wreg free
  2130  000982  5018               	movf	?_myStrncmp^0,w,c
  2131  000984  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  2132  000986  B4D8               	btfsc	status,2,c
  2133  000988  EFC8  F004         	goto	u3701
  2134  00098C  EFCA  F004         	goto	u3700
  2135  000990                     u3701:
  2136  000990  EFCC  F004         	goto	l3688
  2137  000994                     u3700:
  2138  000994  EFDD  F004         	goto	l3692
  2139  000998                     l3688:
  2140                           
  2141                           ;./geral.h: 153:     UARTSendString("\n",16);
  2142  000998  0100               	movlb	0	; () banked
  2143  00099A  4BA8               	infsnz	testeMotores@i& (0+255),f,b
  2144  00099C  2BA9               	incf	(testeMotores@i+1)& (0+255),f,b
  2145  00099E                     
  2146                           ; BSR set to: 0
  2147  00099E  BFA9               	btfsc	(testeMotores@i+1)& (0+255),7,b
  2148  0009A0  EFDB  F004         	goto	u3711
  2149  0009A4  51A9               	movf	(testeMotores@i+1)& (0+255),w,b
  2150  0009A6  E109               	bnz	u3710
  2151  0009A8  0E65               	movlw	101
  2152  0009AA  5DA8               	subwf	testeMotores@i& (0+255),w,b
  2153  0009AC  A0D8               	btfss	status,0,c
  2154  0009AE  EFDB  F004         	goto	u3711
  2155  0009B2  EFDD  F004         	goto	u3710
  2156  0009B6                     u3711:
  2157  0009B6  EFAA  F004         	goto	l3680
  2158  0009BA                     u3710:
  2159  0009BA                     l3692:
  2160                           
  2161                           ;./geral.h: 154: 
  2162  0009BA  0E00               	movlw	0
  2163  0009BC  6E1A               	movwf	(setDutyPWM4@porcVelo+1)^0,c
  2164  0009BE  0E00               	movlw	0
  2165  0009C0  6E19               	movwf	setDutyPWM4@porcVelo^0,c
  2166  0009C2  EC3A  F019         	call	_setDutyPWM4	;wreg free
  2167  0009C6                     
  2168                           ;./geral.h: 157:     UARTSendString("\n",16);
  2169  0009C6  0E00               	movlw	0
  2170  0009C8  0100               	movlb	0	; () banked
  2171  0009CA  6FA9               	movwf	(testeMotores@i+1)& (0+255),b
  2172  0009CC  0E00               	movlw	0
  2173  0009CE  6FA8               	movwf	testeMotores@i& (0+255),b
  2174  0009D0                     l3700:
  2175                           
  2176                           ; BSR set to: 0
  2177                           ;./geral.h: 158: 
  2178  0009D0  C0A8  F019         	movff	testeMotores@i,setDutyPWM0@porcVelo
  2179  0009D4  C0A9  F01A         	movff	testeMotores@i+1,setDutyPWM0@porcVelo+1
  2180  0009D8  EC60  F019         	call	_setDutyPWM0	;wreg free
  2181                           
  2182                           ;./geral.h: 159:     UARTSendString("AN4: ",16);
  2183  0009DC  C0A8  F019         	movff	testeMotores@i,setDutyPWM2@porcVelo
  2184  0009E0  C0A9  F01A         	movff	testeMotores@i+1,setDutyPWM2@porcVelo+1
  2185  0009E4  EC4D  F019         	call	_setDutyPWM2	;wreg free
  2186  0009E8                     
  2187                           ;./geral.h: 160:     UARTSendString(valorConvUART(getAD_AN(4)), 16);
  2188  0009E8  0E82               	movlw	130
  2189  0009EA  6E3B               	movwf	??_testeMotores^0,c
  2190  0009EC  0EDE               	movlw	222
  2191  0009EE                     u5507:
  2192  0009EE  2EE8               	decfsz	wreg,f,c
  2193  0009F0  D7FE               	bra	u5507
  2194  0009F2  2E3B               	decfsz	??_testeMotores^0,f,c
  2195  0009F4  D7FC               	bra	u5507
  2196  0009F6                     
  2197                           ;./geral.h: 161:     UARTSendString("\n",16);
  2198  0009F6  C0FE  F018         	movff	_comando,myStrncmp@str1
  2199  0009FA  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  2200  0009FE  0EEB               	movlw	low STR_3
  2201  000A00  6E1A               	movwf	myStrncmp@str2^0,c
  2202  000A02  0E3F               	movlw	high STR_3
  2203  000A04  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  2204  000A06  EC09  F019         	call	_myStrncmp	;wreg free
  2205  000A0A  5018               	movf	?_myStrncmp^0,w,c
  2206  000A0C  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  2207  000A0E  B4D8               	btfsc	status,2,c
  2208  000A10  EF0C  F005         	goto	u3721
  2209  000A14  EF0E  F005         	goto	u3720
  2210  000A18                     u3721:
  2211  000A18  EF10  F005         	goto	l3708
  2212  000A1C                     u3720:
  2213  000A1C  EF21  F005         	goto	l3712
  2214  000A20                     l3708:
  2215                           
  2216                           ;./geral.h: 162: 
  2217  000A20  0100               	movlb	0	; () banked
  2218  000A22  4BA8               	infsnz	testeMotores@i& (0+255),f,b
  2219  000A24  2BA9               	incf	(testeMotores@i+1)& (0+255),f,b
  2220  000A26                     
  2221                           ; BSR set to: 0
  2222  000A26  BFA9               	btfsc	(testeMotores@i+1)& (0+255),7,b
  2223  000A28  EF1F  F005         	goto	u3731
  2224  000A2C  51A9               	movf	(testeMotores@i+1)& (0+255),w,b
  2225  000A2E  E109               	bnz	u3730
  2226  000A30  0E65               	movlw	101
  2227  000A32  5DA8               	subwf	testeMotores@i& (0+255),w,b
  2228  000A34  A0D8               	btfss	status,0,c
  2229  000A36  EF1F  F005         	goto	u3731
  2230  000A3A  EF21  F005         	goto	u3730
  2231  000A3E                     u3731:
  2232  000A3E  EFE8  F004         	goto	l3700
  2233  000A42                     u3730:
  2234  000A42                     l3712:
  2235                           
  2236                           ;./geral.h: 163:     UARTSendString("AN5: ",16);
  2237  000A42  0E00               	movlw	0
  2238  000A44  6E1A               	movwf	(setDutyPWM0@porcVelo+1)^0,c
  2239  000A46  0E00               	movlw	0
  2240  000A48  6E19               	movwf	setDutyPWM0@porcVelo^0,c
  2241  000A4A  EC60  F019         	call	_setDutyPWM0	;wreg free
  2242                           
  2243                           ;./geral.h: 164:     UARTSendString(valorConvUART(getAD_AN(5)), 16);
  2244  000A4E  0E00               	movlw	0
  2245  000A50  6E1A               	movwf	(setDutyPWM2@porcVelo+1)^0,c
  2246  000A52  0E00               	movlw	0
  2247  000A54  6E19               	movwf	setDutyPWM2@porcVelo^0,c
  2248  000A56  EC4D  F019         	call	_setDutyPWM2	;wreg free
  2249  000A5A                     
  2250                           ;./geral.h: 167: 
  2251  000A5A  0E00               	movlw	0
  2252  000A5C  0100               	movlb	0	; () banked
  2253  000A5E  6FA9               	movwf	(testeMotores@i+1)& (0+255),b
  2254  000A60  0E00               	movlw	0
  2255  000A62  6FA8               	movwf	testeMotores@i& (0+255),b
  2256  000A64                     l3720:
  2257                           
  2258                           ; BSR set to: 0
  2259                           ;./geral.h: 168:     UARTSendString("----------",16);
  2260  000A64  C0A8  F019         	movff	testeMotores@i,setDutyPWM0@porcVelo
  2261  000A68  C0A9  F01A         	movff	testeMotores@i+1,setDutyPWM0@porcVelo+1
  2262  000A6C  EC60  F019         	call	_setDutyPWM0	;wreg free
  2263                           
  2264                           ;./geral.h: 169:     UARTSendString("\n",16);
  2265  000A70  C0A8  F019         	movff	testeMotores@i,setDutyPWM4@porcVelo
  2266  000A74  C0A9  F01A         	movff	testeMotores@i+1,setDutyPWM4@porcVelo+1
  2267  000A78  EC3A  F019         	call	_setDutyPWM4	;wreg free
  2268  000A7C                     
  2269                           ;./geral.h: 170: 
  2270  000A7C  0E82               	movlw	130
  2271  000A7E  6E3B               	movwf	??_testeMotores^0,c
  2272  000A80  0EDE               	movlw	222
  2273  000A82                     u5517:
  2274  000A82  2EE8               	decfsz	wreg,f,c
  2275  000A84  D7FE               	bra	u5517
  2276  000A86  2E3B               	decfsz	??_testeMotores^0,f,c
  2277  000A88  D7FC               	bra	u5517
  2278  000A8A                     
  2279                           ;./geral.h: 171:     _delay((unsigned long)((500)*(20000000/4000.0)));
  2280  000A8A  C0FE  F018         	movff	_comando,myStrncmp@str1
  2281  000A8E  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  2282  000A92  0EEB               	movlw	low STR_3
  2283  000A94  6E1A               	movwf	myStrncmp@str2^0,c
  2284  000A96  0E3F               	movlw	high STR_3
  2285  000A98  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  2286  000A9A  EC09  F019         	call	_myStrncmp	;wreg free
  2287  000A9E  5018               	movf	?_myStrncmp^0,w,c
  2288  000AA0  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  2289  000AA2  B4D8               	btfsc	status,2,c
  2290  000AA4  EF56  F005         	goto	u3741
  2291  000AA8  EF58  F005         	goto	u3740
  2292  000AAC                     u3741:
  2293  000AAC  EF5A  F005         	goto	l3728
  2294  000AB0                     u3740:
  2295  000AB0  EF6B  F005         	goto	l3732
  2296  000AB4                     l3728:
  2297                           
  2298                           ;./geral.h: 172: }
  2299  000AB4  0100               	movlb	0	; () banked
  2300  000AB6  4BA8               	infsnz	testeMotores@i& (0+255),f,b
  2301  000AB8  2BA9               	incf	(testeMotores@i+1)& (0+255),f,b
  2302  000ABA                     
  2303                           ; BSR set to: 0
  2304  000ABA  BFA9               	btfsc	(testeMotores@i+1)& (0+255),7,b
  2305  000ABC  EF69  F005         	goto	u3751
  2306  000AC0  51A9               	movf	(testeMotores@i+1)& (0+255),w,b
  2307  000AC2  E109               	bnz	u3750
  2308  000AC4  0E65               	movlw	101
  2309  000AC6  5DA8               	subwf	testeMotores@i& (0+255),w,b
  2310  000AC8  A0D8               	btfss	status,0,c
  2311  000ACA  EF69  F005         	goto	u3751
  2312  000ACE  EF6B  F005         	goto	u3750
  2313  000AD2                     u3751:
  2314  000AD2  EF32  F005         	goto	l3720
  2315  000AD6                     u3750:
  2316  000AD6                     l3732:
  2317                           
  2318                           ;./geral.h: 173: 
  2319  000AD6  0E00               	movlw	0
  2320  000AD8  6E1A               	movwf	(setDutyPWM0@porcVelo+1)^0,c
  2321  000ADA  0E00               	movlw	0
  2322  000ADC  6E19               	movwf	setDutyPWM0@porcVelo^0,c
  2323  000ADE  EC60  F019         	call	_setDutyPWM0	;wreg free
  2324                           
  2325                           ;./geral.h: 174: void testeADbit(){
  2326  000AE2  0E00               	movlw	0
  2327  000AE4  6E1A               	movwf	(setDutyPWM4@porcVelo+1)^0,c
  2328  000AE6  0E00               	movlw	0
  2329  000AE8  6E19               	movwf	setDutyPWM4@porcVelo^0,c
  2330  000AEA  EC3A  F019         	call	_setDutyPWM4	;wreg free
  2331  000AEE                     
  2332                           ;./geral.h: 177: 
  2333  000AEE  0E00               	movlw	0
  2334  000AF0  0100               	movlb	0	; () banked
  2335  000AF2  6FA9               	movwf	(testeMotores@i+1)& (0+255),b
  2336  000AF4  0E00               	movlw	0
  2337  000AF6  6FA8               	movwf	testeMotores@i& (0+255),b
  2338  000AF8                     l3740:
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;./geral.h: 178:                 string[0] = i + '0';
  2342  000AF8  C0A8  F019         	movff	testeMotores@i,setDutyPWM6@porcVelo
  2343  000AFC  C0A9  F01A         	movff	testeMotores@i+1,setDutyPWM6@porcVelo+1
  2344  000B00  EC27  F019         	call	_setDutyPWM6	;wreg free
  2345                           
  2346                           ;./geral.h: 179: 
  2347  000B04  C0A8  F019         	movff	testeMotores@i,setDutyPWM2@porcVelo
  2348  000B08  C0A9  F01A         	movff	testeMotores@i+1,setDutyPWM2@porcVelo+1
  2349  000B0C  EC4D  F019         	call	_setDutyPWM2	;wreg free
  2350  000B10                     
  2351                           ;./geral.h: 180:                 UARTSendString("AN",16);
  2352  000B10  0E82               	movlw	130
  2353  000B12  6E3B               	movwf	??_testeMotores^0,c
  2354  000B14  0EDE               	movlw	222
  2355  000B16                     u5527:
  2356  000B16  2EE8               	decfsz	wreg,f,c
  2357  000B18  D7FE               	bra	u5527
  2358  000B1A  2E3B               	decfsz	??_testeMotores^0,f,c
  2359  000B1C  D7FC               	bra	u5527
  2360  000B1E                     
  2361                           ;./geral.h: 181:                 UARTSendString(string,16);
  2362  000B1E  C0FE  F018         	movff	_comando,myStrncmp@str1
  2363  000B22  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  2364  000B26  0EEB               	movlw	low STR_3
  2365  000B28  6E1A               	movwf	myStrncmp@str2^0,c
  2366  000B2A  0E3F               	movlw	high STR_3
  2367  000B2C  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  2368  000B2E  EC09  F019         	call	_myStrncmp	;wreg free
  2369  000B32  5018               	movf	?_myStrncmp^0,w,c
  2370  000B34  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  2371  000B36  B4D8               	btfsc	status,2,c
  2372  000B38  EFA0  F005         	goto	u3761
  2373  000B3C  EFA2  F005         	goto	u3760
  2374  000B40                     u3761:
  2375  000B40  EFA4  F005         	goto	l3748
  2376  000B44                     u3760:
  2377  000B44  EFB5  F005         	goto	l3752
  2378  000B48                     l3748:
  2379                           
  2380                           ;./geral.h: 182:                 UARTSendString(":",16);
  2381  000B48  0100               	movlb	0	; () banked
  2382  000B4A  4BA8               	infsnz	testeMotores@i& (0+255),f,b
  2383  000B4C  2BA9               	incf	(testeMotores@i+1)& (0+255),f,b
  2384  000B4E                     
  2385                           ; BSR set to: 0
  2386  000B4E  BFA9               	btfsc	(testeMotores@i+1)& (0+255),7,b
  2387  000B50  EFB3  F005         	goto	u3771
  2388  000B54  51A9               	movf	(testeMotores@i+1)& (0+255),w,b
  2389  000B56  E109               	bnz	u3770
  2390  000B58  0E65               	movlw	101
  2391  000B5A  5DA8               	subwf	testeMotores@i& (0+255),w,b
  2392  000B5C  A0D8               	btfss	status,0,c
  2393  000B5E  EFB3  F005         	goto	u3771
  2394  000B62  EFB5  F005         	goto	u3770
  2395  000B66                     u3771:
  2396  000B66  EF7C  F005         	goto	l3740
  2397  000B6A                     u3770:
  2398  000B6A                     l3752:
  2399                           
  2400                           ;./geral.h: 183: 
  2401  000B6A  0E00               	movlw	0
  2402  000B6C  6E1A               	movwf	(setDutyPWM6@porcVelo+1)^0,c
  2403  000B6E  0E00               	movlw	0
  2404  000B70  6E19               	movwf	setDutyPWM6@porcVelo^0,c
  2405  000B72  EC27  F019         	call	_setDutyPWM6	;wreg free
  2406                           
  2407                           ;./geral.h: 184:                 UARTSendString(valorConvUARTbit(getAD_ANbit(i)), 16);
  2408  000B76  0E00               	movlw	0
  2409  000B78  6E1A               	movwf	(setDutyPWM2@porcVelo+1)^0,c
  2410  000B7A  0E00               	movlw	0
  2411  000B7C  6E19               	movwf	setDutyPWM2@porcVelo^0,c
  2412  000B7E  EC4D  F019         	call	_setDutyPWM2	;wreg free
  2413  000B82                     
  2414                           ;./geral.h: 187:                 UARTSendString("\n",16);
  2415  000B82  0E00               	movlw	0
  2416  000B84  0100               	movlb	0	; () banked
  2417  000B86  6FA9               	movwf	(testeMotores@i+1)& (0+255),b
  2418  000B88  0E00               	movlw	0
  2419  000B8A  6FA8               	movwf	testeMotores@i& (0+255),b
  2420  000B8C                     l3760:
  2421                           
  2422                           ; BSR set to: 0
  2423                           ;./geral.h: 188:             }
  2424  000B8C  C0A8  F019         	movff	testeMotores@i,setDutyPWM6@porcVelo
  2425  000B90  C0A9  F01A         	movff	testeMotores@i+1,setDutyPWM6@porcVelo+1
  2426  000B94  EC27  F019         	call	_setDutyPWM6	;wreg free
  2427                           
  2428                           ;./geral.h: 189:     _delay((unsigned long)((2000)*(20000000/4000.0)));
  2429  000B98  C0A8  F019         	movff	testeMotores@i,setDutyPWM4@porcVelo
  2430  000B9C  C0A9  F01A         	movff	testeMotores@i+1,setDutyPWM4@porcVelo+1
  2431  000BA0  EC3A  F019         	call	_setDutyPWM4	;wreg free
  2432  000BA4                     
  2433                           ;./geral.h: 190: }
  2434  000BA4  0E82               	movlw	130
  2435  000BA6  6E3B               	movwf	??_testeMotores^0,c
  2436  000BA8  0EDE               	movlw	222
  2437  000BAA                     u5537:
  2438  000BAA  2EE8               	decfsz	wreg,f,c
  2439  000BAC  D7FE               	bra	u5537
  2440  000BAE  2E3B               	decfsz	??_testeMotores^0,f,c
  2441  000BB0  D7FC               	bra	u5537
  2442  000BB2  C0FE  F018         	movff	_comando,myStrncmp@str1
  2443  000BB6  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  2444  000BBA  0EEB               	movlw	low STR_3
  2445  000BBC  6E1A               	movwf	myStrncmp@str2^0,c
  2446  000BBE  0E3F               	movlw	high STR_3
  2447  000BC0  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  2448  000BC2  EC09  F019         	call	_myStrncmp	;wreg free
  2449  000BC6  5018               	movf	?_myStrncmp^0,w,c
  2450  000BC8  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  2451  000BCA  B4D8               	btfsc	status,2,c
  2452  000BCC  EFEA  F005         	goto	u3781
  2453  000BD0  EFEC  F005         	goto	u3780
  2454  000BD4                     u3781:
  2455  000BD4  EFEE  F005         	goto	l3768
  2456  000BD8                     u3780:
  2457  000BD8  EFFF  F005         	goto	l3772
  2458  000BDC                     l3768:
  2459  000BDC  0100               	movlb	0	; () banked
  2460  000BDE  4BA8               	infsnz	testeMotores@i& (0+255),f,b
  2461  000BE0  2BA9               	incf	(testeMotores@i+1)& (0+255),f,b
  2462  000BE2                     
  2463                           ; BSR set to: 0
  2464  000BE2  BFA9               	btfsc	(testeMotores@i+1)& (0+255),7,b
  2465  000BE4  EFFD  F005         	goto	u3791
  2466  000BE8  51A9               	movf	(testeMotores@i+1)& (0+255),w,b
  2467  000BEA  E109               	bnz	u3790
  2468  000BEC  0E65               	movlw	101
  2469  000BEE  5DA8               	subwf	testeMotores@i& (0+255),w,b
  2470  000BF0  A0D8               	btfss	status,0,c
  2471  000BF2  EFFD  F005         	goto	u3791
  2472  000BF6  EFFF  F005         	goto	u3790
  2473  000BFA                     u3791:
  2474  000BFA  EFC6  F005         	goto	l3760
  2475  000BFE                     u3790:
  2476  000BFE                     l3772:
  2477  000BFE  0E00               	movlw	0
  2478  000C00  6E1A               	movwf	(setDutyPWM6@porcVelo+1)^0,c
  2479  000C02  0E00               	movlw	0
  2480  000C04  6E19               	movwf	setDutyPWM6@porcVelo^0,c
  2481  000C06  EC27  F019         	call	_setDutyPWM6	;wreg free
  2482  000C0A  0E00               	movlw	0
  2483  000C0C  6E1A               	movwf	(setDutyPWM4@porcVelo+1)^0,c
  2484  000C0E  0E00               	movlw	0
  2485  000C10  6E19               	movwf	setDutyPWM4@porcVelo^0,c
  2486  000C12  EC3A  F019         	call	_setDutyPWM4	;wreg free
  2487  000C16  0012               	return		;funcret
  2488  000C18                     __end_of_testeMotores:
  2489                           	callstack 0
  2490                           
  2491 ;; *************** function _testeLampadas *****************
  2492 ;; Defined at:
  2493 ;;		line 200 in file "./geral.h"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;		None
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;  i               2   34[COMRAM] int 
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  1    wreg      void 
  2500 ;; Registers used:
  2501 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2507 ;;      Params:         0       0       0       0
  2508 ;;      Locals:         2       0       0       0
  2509 ;;      Temps:          2       0       0       0
  2510 ;;      Totals:         4       0       0       0
  2511 ;;Total ram usage:        4 bytes
  2512 ;; Hardware stack levels used: 1
  2513 ;; Hardware stack levels required when called: 6
  2514 ;; This function calls:
  2515 ;;		_bitExtract
  2516 ;;		_myStrncmp
  2517 ;; This function is called by:
  2518 ;;		_main
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           	psect	text2
  2523  002336                     __ptext2:
  2524                           	callstack 0
  2525  002336                     _testeLampadas:
  2526                           	callstack 24
  2527  002336  0E00               	movlw	0
  2528  002338  6E24               	movwf	(testeLampadas@i+1)^0,c
  2529  00233A  0E00               	movlw	0
  2530  00233C  6E23               	movwf	testeLampadas@i^0,c
  2531  00233E                     l3780:
  2532  00233E  C023  F013         	movff	testeLampadas@i,bitExtract@numero
  2533  002342  C024  F014         	movff	testeLampadas@i+1,bitExtract@numero+1
  2534  002346  0E00               	movlw	0
  2535  002348  6E16               	movwf	(bitExtract@k+1)^0,c
  2536  00234A  0E01               	movlw	1
  2537  00234C  6E15               	movwf	bitExtract@k^0,c
  2538  00234E  0E00               	movlw	0
  2539  002350  6E18               	movwf	(bitExtract@posicao+1)^0,c
  2540  002352  0E00               	movlw	0
  2541  002354  6E17               	movwf	bitExtract@posicao^0,c
  2542  002356  EC8F  F018         	call	_bitExtract	;wreg free
  2543  00235A  3013               	rrcf	?_bitExtract^0,w,c
  2544  00235C  B0D8               	btfsc	status,0,c
  2545  00235E  EFB3  F011         	goto	u3801
  2546  002362  EFB6  F011         	goto	u3800
  2547  002366                     u3801:
  2548  002366  8082               	bsf	3970,0,c	;volatile
  2549  002368  EFB7  F011         	goto	u3815
  2550  00236C                     u3800:
  2551  00236C  9082               	bcf	3970,0,c	;volatile
  2552  00236E                     u3815:
  2553  00236E  C023  F013         	movff	testeLampadas@i,bitExtract@numero
  2554  002372  C024  F014         	movff	testeLampadas@i+1,bitExtract@numero+1
  2555  002376  0E00               	movlw	0
  2556  002378  6E16               	movwf	(bitExtract@k+1)^0,c
  2557  00237A  0E01               	movlw	1
  2558  00237C  6E15               	movwf	bitExtract@k^0,c
  2559  00237E  0E00               	movlw	0
  2560  002380  6E18               	movwf	(bitExtract@posicao+1)^0,c
  2561  002382  0E01               	movlw	1
  2562  002384  6E17               	movwf	bitExtract@posicao^0,c
  2563  002386  EC8F  F018         	call	_bitExtract	;wreg free
  2564  00238A  3013               	rrcf	?_bitExtract^0,w,c
  2565  00238C  B0D8               	btfsc	status,0,c
  2566  00238E  EFCB  F011         	goto	u3821
  2567  002392  EFCE  F011         	goto	u3820
  2568  002396                     u3821:
  2569  002396  8282               	bsf	3970,1,c	;volatile
  2570  002398  EFCF  F011         	goto	u3835
  2571  00239C                     u3820:
  2572  00239C  9282               	bcf	3970,1,c	;volatile
  2573  00239E                     u3835:
  2574  00239E  C023  F013         	movff	testeLampadas@i,bitExtract@numero
  2575  0023A2  C024  F014         	movff	testeLampadas@i+1,bitExtract@numero+1
  2576  0023A6  0E00               	movlw	0
  2577  0023A8  6E16               	movwf	(bitExtract@k+1)^0,c
  2578  0023AA  0E01               	movlw	1
  2579  0023AC  6E15               	movwf	bitExtract@k^0,c
  2580  0023AE  0E00               	movlw	0
  2581  0023B0  6E18               	movwf	(bitExtract@posicao+1)^0,c
  2582  0023B2  0E02               	movlw	2
  2583  0023B4  6E17               	movwf	bitExtract@posicao^0,c
  2584  0023B6  EC8F  F018         	call	_bitExtract	;wreg free
  2585  0023BA  3013               	rrcf	?_bitExtract^0,w,c
  2586  0023BC  B0D8               	btfsc	status,0,c
  2587  0023BE  EFE3  F011         	goto	u3841
  2588  0023C2  EFE6  F011         	goto	u3840
  2589  0023C6                     u3841:
  2590  0023C6  8482               	bsf	3970,2,c	;volatile
  2591  0023C8  EFE7  F011         	goto	u3855
  2592  0023CC                     u3840:
  2593  0023CC  9482               	bcf	3970,2,c	;volatile
  2594  0023CE                     u3855:
  2595  0023CE  C023  F013         	movff	testeLampadas@i,bitExtract@numero
  2596  0023D2  C024  F014         	movff	testeLampadas@i+1,bitExtract@numero+1
  2597  0023D6  0E00               	movlw	0
  2598  0023D8  6E16               	movwf	(bitExtract@k+1)^0,c
  2599  0023DA  0E01               	movlw	1
  2600  0023DC  6E15               	movwf	bitExtract@k^0,c
  2601  0023DE  0E00               	movlw	0
  2602  0023E0  6E18               	movwf	(bitExtract@posicao+1)^0,c
  2603  0023E2  0E03               	movlw	3
  2604  0023E4  6E17               	movwf	bitExtract@posicao^0,c
  2605  0023E6  EC8F  F018         	call	_bitExtract	;wreg free
  2606  0023EA  3013               	rrcf	?_bitExtract^0,w,c
  2607  0023EC  B0D8               	btfsc	status,0,c
  2608  0023EE  EFFB  F011         	goto	u3861
  2609  0023F2  EFFE  F011         	goto	u3860
  2610  0023F6                     u3861:
  2611  0023F6  8682               	bsf	3970,3,c	;volatile
  2612  0023F8  EFFF  F011         	goto	u3875
  2613  0023FC                     u3860:
  2614  0023FC  9682               	bcf	3970,3,c	;volatile
  2615  0023FE                     u3875:
  2616  0023FE  C0FE  F018         	movff	_comando,myStrncmp@str1
  2617  002402  C0FF  F019         	movff	_comando+1,myStrncmp@str1+1
  2618  002406  0EEB               	movlw	low STR_3
  2619  002408  6E1A               	movwf	myStrncmp@str2^0,c
  2620  00240A  0E3F               	movlw	high STR_3
  2621  00240C  6E1B               	movwf	(myStrncmp@str2+1)^0,c
  2622  00240E  EC09  F019         	call	_myStrncmp	;wreg free
  2623  002412  5018               	movf	?_myStrncmp^0,w,c
  2624  002414  1019               	iorwf	(?_myStrncmp+1)^0,w,c
  2625  002416  B4D8               	btfsc	status,2,c
  2626  002418  EF10  F012         	goto	u3881
  2627  00241C  EF12  F012         	goto	u3880
  2628  002420                     u3881:
  2629  002420  EF14  F012         	goto	l3786
  2630  002424                     u3880:
  2631  002424  EF31  F012         	goto	l244
  2632  002428                     l3786:
  2633  002428  0E0D               	movlw	13
  2634  00242A  6E22               	movwf	(??_testeLampadas+1)^0,c
  2635  00242C  0EAF               	movlw	175
  2636  00242E  6E21               	movwf	??_testeLampadas^0,c
  2637  002430  0EB6               	movlw	182
  2638  002432                     u5547:
  2639  002432  2EE8               	decfsz	wreg,f,c
  2640  002434  D7FE               	bra	u5547
  2641  002436  2E21               	decfsz	??_testeLampadas^0,f,c
  2642  002438  D7FC               	bra	u5547
  2643  00243A  2E22               	decfsz	(??_testeLampadas+1)^0,f,c
  2644  00243C  D7FA               	bra	u5547
  2645  00243E  F000 F000          	nop2	
  2646  002442  4A23               	infsnz	testeLampadas@i^0,f,c
  2647  002444  2A24               	incf	(testeLampadas@i+1)^0,f,c
  2648  002446  BE24               	btfsc	(testeLampadas@i+1)^0,7,c
  2649  002448  EF2F  F012         	goto	u3891
  2650  00244C  5024               	movf	(testeLampadas@i+1)^0,w,c
  2651  00244E  E109               	bnz	u3890
  2652  002450  0E10               	movlw	16
  2653  002452  5C23               	subwf	testeLampadas@i^0,w,c
  2654  002454  A0D8               	btfss	status,0,c
  2655  002456  EF2F  F012         	goto	u3891
  2656  00245A  EF31  F012         	goto	u3890
  2657  00245E                     u3891:
  2658  00245E  EF9F  F011         	goto	l3780
  2659  002462                     u3890:
  2660  002462                     l244:
  2661  002462  0012               	return		;funcret
  2662  002464                     __end_of_testeLampadas:
  2663                           	callstack 0
  2664                           
  2665 ;; *************** function _myStrncmp *****************
  2666 ;; Defined at:
  2667 ;;		line 76 in file "./geral.h"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  str1            2   23[COMRAM] PTR const unsigned char 
  2670 ;;		 -> STR_83(5), STR_63(2), STR_61(5), STR_60(20), 
  2671 ;;		 -> STR_59(15), STR_58(11), STR_57(16), STR_56(4), 
  2672 ;;		 -> STR_55(3), STR_54(14), STR_53(13), STR_1(1), 
  2673 ;;  str2            2   25[COMRAM] PTR const unsigned char 
  2674 ;;		 -> STR_81(20), STR_79(15), STR_77(16), STR_75(4), 
  2675 ;;		 -> STR_73(11), STR_71(3), STR_69(14), STR_67(13), 
  2676 ;;		 -> STR_65(5), STR_21(5), STR_19(5), STR_17(5), 
  2677 ;;		 -> STR_15(5), STR_13(5), STR_11(5), STR_9(5), 
  2678 ;;		 -> STR_7(5), STR_4(5), 
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;		None
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  2   23[COMRAM] int 
  2683 ;; Registers used:
  2684 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2690 ;;      Params:         4       0       0       0
  2691 ;;      Locals:         0       0       0       0
  2692 ;;      Temps:          0       0       0       0
  2693 ;;      Totals:         4       0       0       0
  2694 ;;Total ram usage:        4 bytes
  2695 ;; Hardware stack levels used: 1
  2696 ;; Hardware stack levels required when called: 5
  2697 ;; This function calls:
  2698 ;;		_strcmp
  2699 ;; This function is called by:
  2700 ;;		_testeMotores
  2701 ;;		_testeLampadas
  2702 ;;		_main
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706                           	psect	text3
  2707  003212                     __ptext3:
  2708                           	callstack 0
  2709  003212                     _myStrncmp:
  2710                           	callstack 24
  2711  003212                     
  2712                           ;./geral.h: 77: 
  2713  003212  C018  F013         	movff	myStrncmp@str1,strcmp@l
  2714  003216  C019  F014         	movff	myStrncmp@str1+1,strcmp@l+1
  2715  00321A  C01A  F015         	movff	myStrncmp@str2,strcmp@r
  2716  00321E  C01B  F016         	movff	myStrncmp@str2+1,strcmp@r+1
  2717  003222  EC25  F018         	call	_strcmp	;wreg free
  2718  003226  5013               	movf	?_strcmp^0,w,c
  2719  003228  1014               	iorwf	(?_strcmp+1)^0,w,c
  2720  00322A  A4D8               	btfss	status,2,c
  2721  00322C  EF1A  F019         	goto	u3571
  2722  003230  EF1C  F019         	goto	u3570
  2723  003234                     u3571:
  2724  003234  EF22  F019         	goto	l3498
  2725  003238                     u3570:
  2726  003238                     
  2727                           ;./geral.h: 78: 
  2728  003238  0E00               	movlw	0
  2729  00323A  6E19               	movwf	(?_myStrncmp+1)^0,c
  2730  00323C  0E01               	movlw	1
  2731  00323E  6E18               	movwf	?_myStrncmp^0,c
  2732  003240  EF26  F019         	goto	l200
  2733  003244                     l3498:
  2734                           
  2735                           ;./geral.h: 81:         _delay((unsigned long)((20)*(20000000/4000.0)));
  2736  003244  0E00               	movlw	0
  2737  003246  6E19               	movwf	(?_myStrncmp+1)^0,c
  2738  003248  0E00               	movlw	0
  2739  00324A  6E18               	movwf	?_myStrncmp^0,c
  2740  00324C                     l200:
  2741  00324C  0012               	return		;funcret
  2742  00324E                     __end_of_myStrncmp:
  2743                           	callstack 0
  2744                           
  2745 ;; *************** function _strcmp *****************
  2746 ;; Defined at:
  2747 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcmp.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;  l               2   18[COMRAM] PTR const unsigned char 
  2750 ;;		 -> STR_83(5), STR_63(2), STR_61(5), STR_60(20), 
  2751 ;;		 -> STR_59(15), STR_58(11), STR_57(16), STR_56(4), 
  2752 ;;		 -> STR_55(3), STR_54(14), STR_53(13), STR_1(1), 
  2753 ;;  r               2   20[COMRAM] PTR const unsigned char 
  2754 ;;		 -> STR_81(20), STR_79(15), STR_77(16), STR_75(4), 
  2755 ;;		 -> STR_73(11), STR_71(3), STR_69(14), STR_67(13), 
  2756 ;;		 -> STR_65(5), STR_21(5), STR_19(5), STR_17(5), 
  2757 ;;		 -> STR_15(5), STR_13(5), STR_11(5), STR_9(5), 
  2758 ;;		 -> STR_7(5), STR_4(5), 
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;		None
  2761 ;; Return value:  Size  Location     Type
  2762 ;;                  2   18[COMRAM] int 
  2763 ;; Registers used:
  2764 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2770 ;;      Params:         4       0       0       0
  2771 ;;      Locals:         0       0       0       0
  2772 ;;      Temps:          1       0       0       0
  2773 ;;      Totals:         5       0       0       0
  2774 ;;Total ram usage:        5 bytes
  2775 ;; Hardware stack levels used: 1
  2776 ;; Hardware stack levels required when called: 4
  2777 ;; This function calls:
  2778 ;;		Nothing
  2779 ;; This function is called by:
  2780 ;;		_myStrncmp
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784                           	psect	text4
  2785  00304A                     __ptext4:
  2786                           	callstack 0
  2787  00304A                     _strcmp:
  2788                           	callstack 24
  2789  00304A  EF2B  F018         	goto	l2904
  2790  00304E                     l2902:
  2791  00304E  4A13               	infsnz	strcmp@l^0,f,c
  2792  003050  2A14               	incf	(strcmp@l+1)^0,f,c
  2793  003052  4A15               	infsnz	strcmp@r^0,f,c
  2794  003054  2A16               	incf	(strcmp@r+1)^0,f,c
  2795  003056                     l2904:
  2796  003056  C013  FFF6         	movff	strcmp@l,tblptrl
  2797  00305A  C014  FFF7         	movff	strcmp@l+1,tblptrh
  2798  00305E                     	if	0	;tblptru may be non-zero
  2799  00305E                     	endif
  2800  00305E                     	if	0	;tblptru may be non-zero
  2801  00305E                     	endif
  2802  00305E  0008               	tblrd		*
  2803  003060  CFF5 F017          	movff	tablat,??_strcmp
  2804  003064  C015  FFF6         	movff	strcmp@r,tblptrl
  2805  003068  C016  FFF7         	movff	strcmp@r+1,tblptrh
  2806  00306C                     	if	0	;tblptru may be non-zero
  2807  00306C                     	endif
  2808  00306C                     	if	0	;tblptru may be non-zero
  2809  00306C                     	endif
  2810  00306C  0008               	tblrd		*
  2811  00306E  50F5               	movf	tablat,w,c
  2812  003070  1817               	xorwf	??_strcmp^0,w,c
  2813  003072  A4D8               	btfss	status,2,c
  2814  003074  EF3E  F018         	goto	u2551
  2815  003078  EF40  F018         	goto	u2550
  2816  00307C                     u2551:
  2817  00307C  EF4E  F018         	goto	l2908
  2818  003080                     u2550:
  2819  003080  C013  FFF6         	movff	strcmp@l,tblptrl
  2820  003084  C014  FFF7         	movff	strcmp@l+1,tblptrh
  2821  003088                     	if	0	;tblptru may be non-zero
  2822  003088                     	endif
  2823  003088                     	if	0	;tblptru may be non-zero
  2824  003088                     	endif
  2825  003088  0008               	tblrd		*
  2826  00308A  50F5               	movf	tablat,w,c
  2827  00308C  0900               	iorlw	0
  2828  00308E  A4D8               	btfss	status,2,c
  2829  003090  EF4C  F018         	goto	u2561
  2830  003094  EF4E  F018         	goto	u2560
  2831  003098                     u2561:
  2832  003098  EF27  F018         	goto	l2902
  2833  00309C                     u2560:
  2834  00309C                     l2908:
  2835  00309C  C013  FFF6         	movff	strcmp@l,tblptrl
  2836  0030A0  C014  FFF7         	movff	strcmp@l+1,tblptrh
  2837  0030A4                     	if	0	;tblptru may be non-zero
  2838  0030A4                     	endif
  2839  0030A4                     	if	0	;tblptru may be non-zero
  2840  0030A4                     	endif
  2841  0030A4  0008               	tblrd		*
  2842  0030A6  CFF5 F017          	movff	tablat,??_strcmp
  2843  0030AA  C015  FFF6         	movff	strcmp@r,tblptrl
  2844  0030AE  C016  FFF7         	movff	strcmp@r+1,tblptrh
  2845  0030B2                     	if	0	;tblptru may be non-zero
  2846  0030B2                     	endif
  2847  0030B2                     	if	0	;tblptru may be non-zero
  2848  0030B2                     	endif
  2849  0030B2  0008               	tblrd		*
  2850  0030B4  50F5               	movf	tablat,w,c
  2851  0030B6  5C17               	subwf	??_strcmp^0,w,c
  2852  0030B8  6E13               	movwf	?_strcmp^0,c
  2853  0030BA  6A14               	clrf	(?_strcmp+1)^0,c
  2854  0030BC  A0D8               	btfss	status,0,c
  2855  0030BE  0614               	decf	(?_strcmp+1)^0,f,c
  2856  0030C0  0012               	return		;funcret
  2857  0030C2                     __end_of_strcmp:
  2858                           	callstack 0
  2859                           
  2860 ;; *************** function _testeADbit *****************
  2861 ;; Defined at:
  2862 ;;		line 244 in file "./geral.h"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;		None
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;  string          2   74[BANK0 ] unsigned char [2]
  2867 ;;  i               2   76[BANK0 ] int 
  2868 ;; Return value:  Size  Location     Type
  2869 ;;                  1    wreg      void 
  2870 ;; Registers used:
  2871 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/0
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2877 ;;      Params:         0       0       0       0
  2878 ;;      Locals:         0       4       0       0
  2879 ;;      Temps:          0       2       0       0
  2880 ;;      Totals:         0       6       0       0
  2881 ;;Total ram usage:        6 bytes
  2882 ;; Hardware stack levels used: 1
  2883 ;; Hardware stack levels required when called: 7
  2884 ;; This function calls:
  2885 ;;		_UARTSendString
  2886 ;;		_getAD_ANbit
  2887 ;;		_valorConvUARTbit
  2888 ;; This function is called by:
  2889 ;;		_main
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           	psect	text5
  2894  002578                     __ptext5:
  2895                           	callstack 0
  2896  002578                     _testeADbit:
  2897                           	callstack 23
  2898  002578  0E00               	movlw	0
  2899  00257A  0100               	movlb	0	; () banked
  2900  00257C  6FAD               	movwf	(testeADbit@i+1)& (0+255),b
  2901  00257E  0E01               	movlw	1
  2902  002580  6FAC               	movwf	testeADbit@i& (0+255),b
  2903  002582                     l3824:
  2904                           
  2905                           ; BSR set to: 0
  2906  002582  0E00               	movlw	0
  2907  002584  6FAB               	movwf	(testeADbit@string+1)& (0+255),b
  2908  002586  0E00               	movlw	0
  2909  002588  6FAA               	movwf	testeADbit@string& (0+255),b
  2910  00258A                     
  2911                           ; BSR set to: 0
  2912  00258A  51AC               	movf	testeADbit@i& (0+255),w,b
  2913  00258C  0F30               	addlw	48
  2914  00258E  6FAA               	movwf	testeADbit@string& (0+255),b
  2915  002590                     
  2916                           ; BSR set to: 0
  2917  002590  0EF7               	movlw	low STR_34
  2918  002592  6FA0               	movwf	UARTSendString@str& (0+255),b
  2919  002594  0E3F               	movlw	high STR_34
  2920  002596  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  2921  002598  0E00               	movlw	0
  2922  00259A  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  2923  00259C  0E10               	movlw	16
  2924  00259E  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  2925  0025A0  ECA0  F015         	call	_UARTSendString	;wreg free
  2926  0025A4  0EAA               	movlw	low testeADbit@string
  2927  0025A6  0100               	movlb	0	; () banked
  2928  0025A8  6FA0               	movwf	UARTSendString@str& (0+255),b
  2929  0025AA  0E00               	movlw	high testeADbit@string
  2930  0025AC  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  2931  0025AE  0E00               	movlw	0
  2932  0025B0  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  2933  0025B2  0E10               	movlw	16
  2934  0025B4  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  2935  0025B6  ECA0  F015         	call	_UARTSendString	;wreg free
  2936  0025BA  0EFC               	movlw	low STR_35
  2937  0025BC  0100               	movlb	0	; () banked
  2938  0025BE  6FA0               	movwf	UARTSendString@str& (0+255),b
  2939  0025C0  0E3F               	movlw	high STR_35
  2940  0025C2  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  2941  0025C4  0E00               	movlw	0
  2942  0025C6  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  2943  0025C8  0E10               	movlw	16
  2944  0025CA  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  2945  0025CC  ECA0  F015         	call	_UARTSendString	;wreg free
  2946  0025D0  C0AC  F021         	movff	testeADbit@i,getAD_ANbit@porta
  2947  0025D4  C0AD  F022         	movff	testeADbit@i+1,getAD_ANbit@porta+1
  2948  0025D8  EC46  F014         	call	_getAD_ANbit	;wreg free
  2949  0025DC  C021  F025         	movff	?_getAD_ANbit,valorConvUARTbit@valor
  2950  0025E0  C022  F026         	movff	?_getAD_ANbit+1,valorConvUARTbit@valor+1
  2951  0025E4  ECC2  F014         	call	_valorConvUARTbit	;wreg free
  2952  0025E8  C025  F0A0         	movff	?_valorConvUARTbit,UARTSendString@str
  2953  0025EC  C026  F0A1         	movff	?_valorConvUARTbit+1,UARTSendString@str+1
  2954  0025F0  0E00               	movlw	0
  2955  0025F2  0100               	movlb	0	; () banked
  2956  0025F4  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  2957  0025F6  0E10               	movlw	16
  2958  0025F8  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  2959  0025FA  ECA0  F015         	call	_UARTSendString	;wreg free
  2960  0025FE  0EDA               	movlw	low (STR_5+14)
  2961  002600  0100               	movlb	0	; () banked
  2962  002602  6FA0               	movwf	UARTSendString@str& (0+255),b
  2963  002604  0E3E               	movlw	high (STR_5+14)
  2964  002606  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  2965  002608  0E00               	movlw	0
  2966  00260A  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  2967  00260C  0E10               	movlw	16
  2968  00260E  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  2969  002610  ECA0  F015         	call	_UARTSendString	;wreg free
  2970  002614  0E8A               	movlw	low (STR_50+1)
  2971  002616  0100               	movlb	0	; () banked
  2972  002618  6FA0               	movwf	UARTSendString@str& (0+255),b
  2973  00261A  0E3F               	movlw	high (STR_50+1)
  2974  00261C  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  2975  00261E  0E00               	movlw	0
  2976  002620  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  2977  002622  0E10               	movlw	16
  2978  002624  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  2979  002626  ECA0  F015         	call	_UARTSendString	;wreg free
  2980  00262A  0EDA               	movlw	low (STR_5+14)
  2981  00262C  0100               	movlb	0	; () banked
  2982  00262E  6FA0               	movwf	UARTSendString@str& (0+255),b
  2983  002630  0E3E               	movlw	high (STR_5+14)
  2984  002632  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  2985  002634  0E00               	movlw	0
  2986  002636  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  2987  002638  0E10               	movlw	16
  2988  00263A  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  2989  00263C  ECA0  F015         	call	_UARTSendString	;wreg free
  2990  002640  0100               	movlb	0	; () banked
  2991  002642  4BAC               	infsnz	testeADbit@i& (0+255),f,b
  2992  002644  2BAD               	incf	(testeADbit@i+1)& (0+255),f,b
  2993  002646                     
  2994                           ; BSR set to: 0
  2995  002646  BFAD               	btfsc	(testeADbit@i+1)& (0+255),7,b
  2996  002648  EF2F  F013         	goto	u3901
  2997  00264C  51AD               	movf	(testeADbit@i+1)& (0+255),w,b
  2998  00264E  E109               	bnz	u3900
  2999  002650  0E06               	movlw	6
  3000  002652  5DAC               	subwf	testeADbit@i& (0+255),w,b
  3001  002654  A0D8               	btfss	status,0,c
  3002  002656  EF2F  F013         	goto	u3901
  3003  00265A  EF31  F013         	goto	u3900
  3004  00265E                     u3901:
  3005  00265E  EFC1  F012         	goto	l3824
  3006  002662                     u3900:
  3007  002662                     
  3008                           ; BSR set to: 0
  3009  002662  0E33               	movlw	51
  3010  002664  0100               	movlb	0	; () banked
  3011  002666  6FA9               	movwf	(??_testeADbit+1)& (0+255),b
  3012  002668  0EBB               	movlw	187
  3013  00266A  6FA8               	movwf	??_testeADbit& (0+255),b
  3014  00266C  0EDF               	movlw	223
  3015  00266E                     u5557:
  3016  00266E  2EE8               	decfsz	wreg,f,c
  3017  002670  D7FE               	bra	u5557
  3018  002672  2FA8               	decfsz	??_testeADbit& (0+255),f,b
  3019  002674  D7FC               	bra	u5557
  3020  002676  2FA9               	decfsz	(??_testeADbit+1)& (0+255),f,b
  3021  002678  D7FA               	bra	u5557
  3022  00267A  F000 F000          	nop2	
  3023  00267E  0012               	return		;funcret
  3024  002680                     __end_of_testeADbit:
  3025                           	callstack 0
  3026                           
  3027 ;; *************** function _valorConvUARTbit *****************
  3028 ;; Defined at:
  3029 ;;		line 51 in file "./ADC.h"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;  valor           2   36[COMRAM] int 
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;  string          5   38[COMRAM] unsigned char [5]
  3034 ;;  unidade         2   49[COMRAM] int 
  3035 ;;  dezena          2   47[COMRAM] int 
  3036 ;;  centena         2   45[COMRAM] int 
  3037 ;;  milhar          2   43[COMRAM] int 
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  2   36[COMRAM] PTR const unsigned char 
  3040 ;; Registers used:
  3041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3047 ;;      Params:         2       0       0       0
  3048 ;;      Locals:        15       0       0       0
  3049 ;;      Temps:          0       0       0       0
  3050 ;;      Totals:        17       0       0       0
  3051 ;;Total ram usage:       17 bytes
  3052 ;; Hardware stack levels used: 1
  3053 ;; Hardware stack levels required when called: 5
  3054 ;; This function calls:
  3055 ;;		___awdiv
  3056 ;;		___awmod
  3057 ;; This function is called by:
  3058 ;;		_testeADbit
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062                           	psect	text6
  3063  002984                     __ptext6:
  3064                           	callstack 0
  3065  002984                     _valorConvUARTbit:
  3066                           	callstack 24
  3067  002984                     
  3068                           ;./ADC.h: 53:     int milhar = valor/1000;
  3069  002984  C025  F013         	movff	valorConvUARTbit@valor,___awdiv@dividend
  3070  002988  C026  F014         	movff	valorConvUARTbit@valor+1,___awdiv@dividend+1
  3071  00298C  0E03               	movlw	3
  3072  00298E  6E16               	movwf	(___awdiv@divisor+1)^0,c
  3073  002990  0EE8               	movlw	232
  3074  002992  6E15               	movwf	___awdiv@divisor^0,c
  3075  002994  EC69  F016         	call	___awdiv	;wreg free
  3076  002998  C013  F02C         	movff	?___awdiv,valorConvUARTbit@milhar
  3077  00299C  C014  F02D         	movff	?___awdiv+1,valorConvUARTbit@milhar+1
  3078                           
  3079                           ;./ADC.h: 54:     int centena = (valor/100) % 10;
  3080  0029A0  0E00               	movlw	0
  3081  0029A2  6E16               	movwf	(___awdiv@divisor+1)^0,c
  3082  0029A4  0E64               	movlw	100
  3083  0029A6  6E15               	movwf	___awdiv@divisor^0,c
  3084  0029A8  C025  F013         	movff	valorConvUARTbit@valor,___awdiv@dividend
  3085  0029AC  C026  F014         	movff	valorConvUARTbit@valor+1,___awdiv@dividend+1
  3086  0029B0  EC69  F016         	call	___awdiv	;wreg free
  3087  0029B4  C013  F01B         	movff	?___awdiv,___awmod@dividend
  3088  0029B8  C014  F01C         	movff	?___awdiv+1,___awmod@dividend+1
  3089  0029BC  0E00               	movlw	0
  3090  0029BE  6E1E               	movwf	(___awmod@divisor+1)^0,c
  3091  0029C0  0E0A               	movlw	10
  3092  0029C2  6E1D               	movwf	___awmod@divisor^0,c
  3093  0029C4  EC24  F017         	call	___awmod	;wreg free
  3094  0029C8  C01B  F02E         	movff	?___awmod,valorConvUARTbit@centena
  3095  0029CC  C01C  F02F         	movff	?___awmod+1,valorConvUARTbit@centena+1
  3096                           
  3097                           ;./ADC.h: 55:     int dezena = (valor/10) % 10;
  3098  0029D0  0E00               	movlw	0
  3099  0029D2  6E16               	movwf	(___awdiv@divisor+1)^0,c
  3100  0029D4  0E0A               	movlw	10
  3101  0029D6  6E15               	movwf	___awdiv@divisor^0,c
  3102  0029D8  C025  F013         	movff	valorConvUARTbit@valor,___awdiv@dividend
  3103  0029DC  C026  F014         	movff	valorConvUARTbit@valor+1,___awdiv@dividend+1
  3104  0029E0  EC69  F016         	call	___awdiv	;wreg free
  3105  0029E4  C013  F01B         	movff	?___awdiv,___awmod@dividend
  3106  0029E8  C014  F01C         	movff	?___awdiv+1,___awmod@dividend+1
  3107  0029EC  0E00               	movlw	0
  3108  0029EE  6E1E               	movwf	(___awmod@divisor+1)^0,c
  3109  0029F0  0E0A               	movlw	10
  3110  0029F2  6E1D               	movwf	___awmod@divisor^0,c
  3111  0029F4  EC24  F017         	call	___awmod	;wreg free
  3112  0029F8  C01B  F030         	movff	?___awmod,valorConvUARTbit@dezena
  3113  0029FC  C01C  F031         	movff	?___awmod+1,valorConvUARTbit@dezena+1
  3114                           
  3115                           ;./ADC.h: 56:     int unidade = (valor % 100) % 10;
  3116  002A00  0E00               	movlw	0
  3117  002A02  6E1E               	movwf	(___awmod@divisor+1)^0,c
  3118  002A04  0E64               	movlw	100
  3119  002A06  6E1D               	movwf	___awmod@divisor^0,c
  3120  002A08  C025  F01B         	movff	valorConvUARTbit@valor,___awmod@dividend
  3121  002A0C  C026  F01C         	movff	valorConvUARTbit@valor+1,___awmod@dividend+1
  3122  002A10  EC24  F017         	call	___awmod	;wreg free
  3123  002A14  C01B  F034         	movff	?___awmod,_valorConvUARTbit$1587
  3124  002A18  C01C  F035         	movff	?___awmod+1,_valorConvUARTbit$1587+1
  3125                           
  3126                           ;./ADC.h: 56:     int unidade = (valor % 100) % 10;
  3127  002A1C  C034  F01B         	movff	_valorConvUARTbit$1587,___awmod@dividend
  3128  002A20  C035  F01C         	movff	_valorConvUARTbit$1587+1,___awmod@dividend+1
  3129  002A24  0E00               	movlw	0
  3130  002A26  6E1E               	movwf	(___awmod@divisor+1)^0,c
  3131  002A28  0E0A               	movlw	10
  3132  002A2A  6E1D               	movwf	___awmod@divisor^0,c
  3133  002A2C  EC24  F017         	call	___awmod	;wreg free
  3134  002A30  C01B  F032         	movff	?___awmod,valorConvUARTbit@unidade
  3135  002A34  C01C  F033         	movff	?___awmod+1,valorConvUARTbit@unidade+1
  3136  002A38                     
  3137                           ;./ADC.h: 58:     char string[5] = {'\0'};
  3138  002A38  EE20  F027         	lfsr	2,valorConvUARTbit@string
  3139  002A3C  0E04               	movlw	4
  3140  002A3E                     u3551:
  3141  002A3E  6ADE               	clrf	postinc2,c
  3142  002A40  06E8               	decf	wreg,f,c
  3143  002A42  E2FD               	bc	u3551
  3144  002A44                     
  3145                           ;./ADC.h: 60:     string[0] = milhar + '0';
  3146  002A44  502C               	movf	valorConvUARTbit@milhar^0,w,c
  3147  002A46  0F30               	addlw	48
  3148  002A48  6E27               	movwf	valorConvUARTbit@string^0,c
  3149  002A4A                     
  3150                           ;./ADC.h: 61:     string[1] = centena + '0';
  3151  002A4A  502E               	movf	valorConvUARTbit@centena^0,w,c
  3152  002A4C  0F30               	addlw	48
  3153  002A4E  6E28               	movwf	(valorConvUARTbit@string+1)^0,c
  3154  002A50                     
  3155                           ;./ADC.h: 62:     string[2] = dezena + '0';
  3156  002A50  5030               	movf	valorConvUARTbit@dezena^0,w,c
  3157  002A52  0F30               	addlw	48
  3158  002A54  6E29               	movwf	(valorConvUARTbit@string+2)^0,c
  3159  002A56                     
  3160                           ;./ADC.h: 63:     string[3] = unidade + '0';
  3161  002A56  5032               	movf	valorConvUARTbit@unidade^0,w,c
  3162  002A58  0F30               	addlw	48
  3163  002A5A  6E2A               	movwf	(valorConvUARTbit@string+3)^0,c
  3164  002A5C                     
  3165                           ;./ADC.h: 65:     return string;
  3166  002A5C  0E27               	movlw	low valorConvUARTbit@string
  3167  002A5E  6E25               	movwf	?_valorConvUARTbit^0,c
  3168  002A60  0E00               	movlw	high valorConvUARTbit@string
  3169  002A62  6E26               	movwf	(?_valorConvUARTbit+1)^0,c
  3170  002A64  0012               	return		;funcret
  3171  002A66                     __end_of_valorConvUARTbit:
  3172                           	callstack 0
  3173                           
  3174 ;; *************** function _testeAD *****************
  3175 ;; Defined at:
  3176 ;;		line 213 in file "./geral.h"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;		None
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;		None
  3181 ;; Return value:  Size  Location     Type
  3182 ;;                  1    wreg      void 
  3183 ;; Registers used:
  3184 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3190 ;;      Params:         0       0       0       0
  3191 ;;      Locals:         0       0       0       0
  3192 ;;      Temps:          0       2       0       0
  3193 ;;      Totals:         0       2       0       0
  3194 ;;Total ram usage:        2 bytes
  3195 ;; Hardware stack levels used: 1
  3196 ;; Hardware stack levels required when called: 7
  3197 ;; This function calls:
  3198 ;;		_UARTSendString
  3199 ;;		_getAD_AN
  3200 ;;		_valorConvUART
  3201 ;; This function is called by:
  3202 ;;		_main
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           	psect	text7
  3207  001C88                     __ptext7:
  3208                           	callstack 0
  3209  001C88                     _testeAD:
  3210                           	callstack 23
  3211  001C88  0EC8               	movlw	low STR_22
  3212  001C8A  0100               	movlb	0	; () banked
  3213  001C8C  6FA0               	movwf	UARTSendString@str& (0+255),b
  3214  001C8E  0E3F               	movlw	high STR_22
  3215  001C90  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  3216  001C92  0E00               	movlw	0
  3217  001C94  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3218  001C96  0E10               	movlw	16
  3219  001C98  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  3220  001C9A  ECA0  F015         	call	_UARTSendString	;wreg free
  3221  001C9E  0E00               	movlw	0
  3222  001CA0  0100               	movlb	0	; () banked
  3223  001CA2  6F8C               	movwf	(getAD_AN@porta+1)& (0+255),b
  3224  001CA4  0E01               	movlw	1
  3225  001CA6  6F8B               	movwf	getAD_AN@porta& (0+255),b
  3226  001CA8  EC32  F012         	call	_getAD_AN	;wreg free
  3227  001CAC  C08B  F091         	movff	?_getAD_AN,valorConvUART@valor
  3228  001CB0  C08C  F092         	movff	?_getAD_AN+1,valorConvUART@valor+1
  3229  001CB4  ECCB  F016         	call	_valorConvUART	;wreg free
  3230  001CB8  C091  F0A0         	movff	?_valorConvUART,UARTSendString@str
  3231  001CBC  C092  F0A1         	movff	?_valorConvUART+1,UARTSendString@str+1
  3232  001CC0  0E00               	movlw	0
  3233  001CC2  0100               	movlb	0	; () banked
  3234  001CC4  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3235  001CC6  0E10               	movlw	16
  3236  001CC8  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  3237  001CCA  ECA0  F015         	call	_UARTSendString	;wreg free
  3238  001CCE  0EDA               	movlw	low (STR_5+14)
  3239  001CD0  0100               	movlb	0	; () banked
  3240  001CD2  6FA0               	movwf	UARTSendString@str& (0+255),b
  3241  001CD4  0E3E               	movlw	high (STR_5+14)
  3242  001CD6  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  3243  001CD8  0E00               	movlw	0
  3244  001CDA  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3245  001CDC  0E10               	movlw	16
  3246  001CDE  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  3247  001CE0  ECA0  F015         	call	_UARTSendString	;wreg free
  3248  001CE4  0ECE               	movlw	low STR_24
  3249  001CE6  0100               	movlb	0	; () banked
  3250  001CE8  6FA0               	movwf	UARTSendString@str& (0+255),b
  3251  001CEA  0E3F               	movlw	high STR_24
  3252  001CEC  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  3253  001CEE  0E00               	movlw	0
  3254  001CF0  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3255  001CF2  0E10               	movlw	16
  3256  001CF4  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  3257  001CF6  ECA0  F015         	call	_UARTSendString	;wreg free
  3258  001CFA  0E00               	movlw	0
  3259  001CFC  0100               	movlb	0	; () banked
  3260  001CFE  6F8C               	movwf	(getAD_AN@porta+1)& (0+255),b
  3261  001D00  0E02               	movlw	2
  3262  001D02  6F8B               	movwf	getAD_AN@porta& (0+255),b
  3263  001D04  EC32  F012         	call	_getAD_AN	;wreg free
  3264  001D08  C08B  F091         	movff	?_getAD_AN,valorConvUART@valor
  3265  001D0C  C08C  F092         	movff	?_getAD_AN+1,valorConvUART@valor+1
  3266  001D10  ECCB  F016         	call	_valorConvUART	;wreg free
  3267  001D14  C091  F0A0         	movff	?_valorConvUART,UARTSendString@str
  3268  001D18  C092  F0A1         	movff	?_valorConvUART+1,UARTSendString@str+1
  3269  001D1C  0E00               	movlw	0
  3270  001D1E  0100               	movlb	0	; () banked
  3271  001D20  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3272  001D22  0E10               	movlw	16
  3273  001D24  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  3274  001D26  ECA0  F015         	call	_UARTSendString	;wreg free
  3275  001D2A  0EDA               	movlw	low (STR_5+14)
  3276  001D2C  0100               	movlb	0	; () banked
  3277  001D2E  6FA0               	movwf	UARTSendString@str& (0+255),b
  3278  001D30  0E3E               	movlw	high (STR_5+14)
  3279  001D32  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  3280  001D34  0E00               	movlw	0
  3281  001D36  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3282  001D38  0E10               	movlw	16
  3283  001D3A  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  3284  001D3C  ECA0  F015         	call	_UARTSendString	;wreg free
  3285  001D40  0ED4               	movlw	low STR_26
  3286  001D42  0100               	movlb	0	; () banked
  3287  001D44  6FA0               	movwf	UARTSendString@str& (0+255),b
  3288  001D46  0E3F               	movlw	high STR_26
  3289  001D48  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  3290  001D4A  0E00               	movlw	0
  3291  001D4C  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3292  001D4E  0E10               	movlw	16
  3293  001D50  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  3294  001D52  ECA0  F015         	call	_UARTSendString	;wreg free
  3295  001D56  0E00               	movlw	0
  3296  001D58  0100               	movlb	0	; () banked
  3297  001D5A  6F8C               	movwf	(getAD_AN@porta+1)& (0+255),b
  3298  001D5C  0E03               	movlw	3
  3299  001D5E  6F8B               	movwf	getAD_AN@porta& (0+255),b
  3300  001D60  EC32  F012         	call	_getAD_AN	;wreg free
  3301  001D64  C08B  F091         	movff	?_getAD_AN,valorConvUART@valor
  3302  001D68  C08C  F092         	movff	?_getAD_AN+1,valorConvUART@valor+1
  3303  001D6C  ECCB  F016         	call	_valorConvUART	;wreg free
  3304  001D70  C091  F0A0         	movff	?_valorConvUART,UARTSendString@str
  3305  001D74  C092  F0A1         	movff	?_valorConvUART+1,UARTSendString@str+1
  3306  001D78  0E00               	movlw	0
  3307  001D7A  0100               	movlb	0	; () banked
  3308  001D7C  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3309  001D7E  0E10               	movlw	16
  3310  001D80  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  3311  001D82  ECA0  F015         	call	_UARTSendString	;wreg free
  3312  001D86  0EDA               	movlw	low (STR_5+14)
  3313  001D88  0100               	movlb	0	; () banked
  3314  001D8A  6FA0               	movwf	UARTSendString@str& (0+255),b
  3315  001D8C  0E3E               	movlw	high (STR_5+14)
  3316  001D8E  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  3317  001D90  0E00               	movlw	0
  3318  001D92  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3319  001D94  0E10               	movlw	16
  3320  001D96  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  3321  001D98  ECA0  F015         	call	_UARTSendString	;wreg free
  3322  001D9C  0EDA               	movlw	low STR_28
  3323  001D9E  0100               	movlb	0	; () banked
  3324  001DA0  6FA0               	movwf	UARTSendString@str& (0+255),b
  3325  001DA2  0E3F               	movlw	high STR_28
  3326  001DA4  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  3327  001DA6  0E00               	movlw	0
  3328  001DA8  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3329  001DAA  0E10               	movlw	16
  3330  001DAC  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  3331  001DAE  ECA0  F015         	call	_UARTSendString	;wreg free
  3332  001DB2  0E00               	movlw	0
  3333  001DB4  0100               	movlb	0	; () banked
  3334  001DB6  6F8C               	movwf	(getAD_AN@porta+1)& (0+255),b
  3335  001DB8  0E04               	movlw	4
  3336  001DBA  6F8B               	movwf	getAD_AN@porta& (0+255),b
  3337  001DBC  EC32  F012         	call	_getAD_AN	;wreg free
  3338  001DC0  C08B  F091         	movff	?_getAD_AN,valorConvUART@valor
  3339  001DC4  C08C  F092         	movff	?_getAD_AN+1,valorConvUART@valor+1
  3340  001DC8  ECCB  F016         	call	_valorConvUART	;wreg free
  3341  001DCC  C091  F0A0         	movff	?_valorConvUART,UARTSendString@str
  3342  001DD0  C092  F0A1         	movff	?_valorConvUART+1,UARTSendString@str+1
  3343  001DD4  0E00               	movlw	0
  3344  001DD6  0100               	movlb	0	; () banked
  3345  001DD8  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3346  001DDA  0E10               	movlw	16
  3347  001DDC  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  3348  001DDE  ECA0  F015         	call	_UARTSendString	;wreg free
  3349  001DE2  0EDA               	movlw	low (STR_5+14)
  3350  001DE4  0100               	movlb	0	; () banked
  3351  001DE6  6FA0               	movwf	UARTSendString@str& (0+255),b
  3352  001DE8  0E3E               	movlw	high (STR_5+14)
  3353  001DEA  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  3354  001DEC  0E00               	movlw	0
  3355  001DEE  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3356  001DF0  0E10               	movlw	16
  3357  001DF2  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  3358  001DF4  ECA0  F015         	call	_UARTSendString	;wreg free
  3359  001DF8  0EE0               	movlw	low STR_30
  3360  001DFA  0100               	movlb	0	; () banked
  3361  001DFC  6FA0               	movwf	UARTSendString@str& (0+255),b
  3362  001DFE  0E3F               	movlw	high STR_30
  3363  001E00  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  3364  001E02  0E00               	movlw	0
  3365  001E04  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3366  001E06  0E10               	movlw	16
  3367  001E08  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  3368  001E0A  ECA0  F015         	call	_UARTSendString	;wreg free
  3369  001E0E  0E00               	movlw	0
  3370  001E10  0100               	movlb	0	; () banked
  3371  001E12  6F8C               	movwf	(getAD_AN@porta+1)& (0+255),b
  3372  001E14  0E05               	movlw	5
  3373  001E16  6F8B               	movwf	getAD_AN@porta& (0+255),b
  3374  001E18  EC32  F012         	call	_getAD_AN	;wreg free
  3375  001E1C  C08B  F091         	movff	?_getAD_AN,valorConvUART@valor
  3376  001E20  C08C  F092         	movff	?_getAD_AN+1,valorConvUART@valor+1
  3377  001E24  ECCB  F016         	call	_valorConvUART	;wreg free
  3378  001E28  C091  F0A0         	movff	?_valorConvUART,UARTSendString@str
  3379  001E2C  C092  F0A1         	movff	?_valorConvUART+1,UARTSendString@str+1
  3380  001E30  0E00               	movlw	0
  3381  001E32  0100               	movlb	0	; () banked
  3382  001E34  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3383  001E36  0E10               	movlw	16
  3384  001E38  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  3385  001E3A  ECA0  F015         	call	_UARTSendString	;wreg free
  3386  001E3E  0EDA               	movlw	low (STR_5+14)
  3387  001E40  0100               	movlb	0	; () banked
  3388  001E42  6FA0               	movwf	UARTSendString@str& (0+255),b
  3389  001E44  0E3E               	movlw	high (STR_5+14)
  3390  001E46  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  3391  001E48  0E00               	movlw	0
  3392  001E4A  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3393  001E4C  0E10               	movlw	16
  3394  001E4E  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  3395  001E50  ECA0  F015         	call	_UARTSendString	;wreg free
  3396  001E54  0E8A               	movlw	low (STR_50+1)
  3397  001E56  0100               	movlb	0	; () banked
  3398  001E58  6FA0               	movwf	UARTSendString@str& (0+255),b
  3399  001E5A  0E3F               	movlw	high (STR_50+1)
  3400  001E5C  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  3401  001E5E  0E00               	movlw	0
  3402  001E60  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3403  001E62  0E10               	movlw	16
  3404  001E64  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  3405  001E66  ECA0  F015         	call	_UARTSendString	;wreg free
  3406  001E6A  0EDA               	movlw	low (STR_5+14)
  3407  001E6C  0100               	movlb	0	; () banked
  3408  001E6E  6FA0               	movwf	UARTSendString@str& (0+255),b
  3409  001E70  0E3E               	movlw	high (STR_5+14)
  3410  001E72  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  3411  001E74  0E00               	movlw	0
  3412  001E76  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  3413  001E78  0E10               	movlw	16
  3414  001E7A  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  3415  001E7C  ECA0  F015         	call	_UARTSendString	;wreg free
  3416  001E80  0E0D               	movlw	13
  3417  001E82  0100               	movlb	0	; () banked
  3418  001E84  6FA9               	movwf	(??_testeAD+1)& (0+255),b
  3419  001E86  0EAF               	movlw	175
  3420  001E88  6FA8               	movwf	??_testeAD& (0+255),b
  3421  001E8A  0EB6               	movlw	182
  3422  001E8C                     u5567:
  3423  001E8C  2EE8               	decfsz	wreg,f,c
  3424  001E8E  D7FE               	bra	u5567
  3425  001E90  2FA8               	decfsz	??_testeAD& (0+255),f,b
  3426  001E92  D7FC               	bra	u5567
  3427  001E94  2FA9               	decfsz	(??_testeAD+1)& (0+255),f,b
  3428  001E96  D7FA               	bra	u5567
  3429  001E98  F000               	nop	
  3430  001E9A  0012               	return		;funcret
  3431  001E9C                     __end_of_testeAD:
  3432                           	callstack 0
  3433                           
  3434 ;; *************** function _setPID *****************
  3435 ;; Defined at:
  3436 ;;		line 104 in file "./Seguidor.h"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;		None
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;		None
  3441 ;; Return value:  Size  Location     Type
  3442 ;;                  1    wreg      void 
  3443 ;; Registers used:
  3444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3445 ;; Tracked objects:
  3446 ;;		On entry : 0/0
  3447 ;;		On exit  : 0/0
  3448 ;;		Unchanged: 0/0
  3449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3450 ;;      Params:         0       0       0       0
  3451 ;;      Locals:         0      10       0       0
  3452 ;;      Temps:          0       0       0       0
  3453 ;;      Totals:         0      10       0       0
  3454 ;;Total ram usage:       10 bytes
  3455 ;; Hardware stack levels used: 1
  3456 ;; Hardware stack levels required when called: 8
  3457 ;; This function calls:
  3458 ;;		___fladd
  3459 ;;		___fldiv
  3460 ;;		___flmul
  3461 ;;		___flsub
  3462 ;;		___fltol
  3463 ;;		___xxtofl
  3464 ;;		_configDA
  3465 ;;		_moverMotor
  3466 ;;		_posicao
  3467 ;; This function is called by:
  3468 ;;		_main
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           	psect	text8
  3473  0016F2                     __ptext8:
  3474                           	callstack 0
  3475  0016F2                     _setPID:
  3476                           	callstack 22
  3477  0016F2                     
  3478                           ;./Seguidor.h: 106:     configDA();
  3479  0016F2  EC01  F011         	call	_configDA	;wreg free
  3480                           
  3481                           ;./Seguidor.h: 108:     pos = posicao();
  3482  0016F6  EC28  F010         	call	_posicao	;wreg free
  3483  0016FA  C0A2  F0DE         	movff	?_posicao,_pos
  3484  0016FE  C0A3  F0DF         	movff	?_posicao+1,_pos+1
  3485  001702  C0A4  F0E0         	movff	?_posicao+2,_pos+2
  3486  001706  C0A5  F0E1         	movff	?_posicao+3,_pos+3
  3487  00170A                     
  3488                           ;./Seguidor.h: 110:     posin = pos;
  3489  00170A  C0DE  F0E2         	movff	_pos,_posin
  3490  00170E  C0DF  F0E3         	movff	_pos+1,_posin+1
  3491  001712  C0E0  F0E4         	movff	_pos+2,_posin+2
  3492  001716  C0E1  F0E5         	movff	_pos+3,_posin+3
  3493  00171A                     
  3494                           ;./Seguidor.h: 112:     erro = setpoint - pos;
  3495  00171A  0E00               	movlw	0
  3496  00171C  0100               	movlb	0	; () banked
  3497  00171E  6F81               	movwf	___flsub@b& (0+255),b
  3498  001720  0E00               	movlw	0
  3499  001722  6F82               	movwf	(___flsub@b+1)& (0+255),b
  3500  001724  0E40               	movlw	64
  3501  001726  6F83               	movwf	(___flsub@b+2)& (0+255),b
  3502  001728  0E40               	movlw	64
  3503  00172A  6F84               	movwf	(___flsub@b+3)& (0+255),b
  3504  00172C  C0DE  F085         	movff	_pos,___flsub@a
  3505  001730  C0DF  F086         	movff	_pos+1,___flsub@a+1
  3506  001734  C0E0  F087         	movff	_pos+2,___flsub@a+2
  3507  001738  C0E1  F088         	movff	_pos+3,___flsub@a+3
  3508  00173C  ECE5  F018         	call	___flsub	;wreg free
  3509  001740  C081  F0DA         	movff	?___flsub,_erro
  3510  001744  C082  F0DB         	movff	?___flsub+1,_erro+1
  3511  001748  C083  F0DC         	movff	?___flsub+2,_erro+2
  3512  00174C  C084  F0DD         	movff	?___flsub+3,_erro+3
  3513  001750                     
  3514                           ;./Seguidor.h: 114:     de = erro - erroi;
  3515  001750  C0DA  F081         	movff	_erro,___flsub@b
  3516  001754  C0DB  F082         	movff	_erro+1,___flsub@b+1
  3517  001758  C0DC  F083         	movff	_erro+2,___flsub@b+2
  3518  00175C  C0DD  F084         	movff	_erro+3,___flsub@b+3
  3519  001760  C0B6  F085         	movff	_erroi,___flsub@a
  3520  001764  C0B7  F086         	movff	_erroi+1,___flsub@a+1
  3521  001768  C0B8  F087         	movff	_erroi+2,___flsub@a+2
  3522  00176C  C0B9  F088         	movff	_erroi+3,___flsub@a+3
  3523  001770  ECE5  F018         	call	___flsub	;wreg free
  3524  001774  C081  F0BE         	movff	?___flsub,_de
  3525  001778  C082  F0BF         	movff	?___flsub+1,_de+1
  3526  00177C  C083  F0C0         	movff	?___flsub+2,_de+2
  3527  001780  C084  F0C1         	movff	?___flsub+3,_de+3
  3528  001784                     
  3529                           ;./Seguidor.h: 116:     erroi = erro;
  3530  001784  C0DA  F0B6         	movff	_erro,_erroi
  3531  001788  C0DB  F0B7         	movff	_erro+1,_erroi+1
  3532  00178C  C0DC  F0B8         	movff	_erro+2,_erroi+2
  3533  001790  C0DD  F0B9         	movff	_erro+3,_erroi+3
  3534  001794                     
  3535                           ;./Seguidor.h: 118:     dt = (millis - tf) / 1000.0;
  3536  001794  C0BA  F085         	movff	_tf,___flsub@a
  3537  001798  C0BB  F086         	movff	_tf+1,___flsub@a+1
  3538  00179C  C0BC  F087         	movff	_tf+2,___flsub@a+2
  3539  0017A0  C0BD  F088         	movff	_tf+3,___flsub@a+3
  3540  0017A4  C0E6  F025         	movff	_millis,___xxtofl@val
  3541  0017A8  C0E7  F026         	movff	_millis+1,___xxtofl@val+1
  3542  0017AC  C0E8  F027         	movff	_millis+2,___xxtofl@val+2
  3543  0017B0  C0E9  F028         	movff	_millis+3,___xxtofl@val+3
  3544  0017B4  0E00               	movlw	0
  3545  0017B6  EC4E  F00F         	call	___xxtofl
  3546  0017BA  C025  F081         	movff	?___xxtofl,___flsub@b
  3547  0017BE  C026  F082         	movff	?___xxtofl+1,___flsub@b+1
  3548  0017C2  C027  F083         	movff	?___xxtofl+2,___flsub@b+2
  3549  0017C6  C028  F084         	movff	?___xxtofl+3,___flsub@b+3
  3550  0017CA  ECE5  F018         	call	___flsub	;wreg free
  3551  0017CE  C081  F089         	movff	?___flsub,___fldiv@b
  3552  0017D2  C082  F08A         	movff	?___flsub+1,___fldiv@b+1
  3553  0017D6  C083  F08B         	movff	?___flsub+2,___fldiv@b+2
  3554  0017DA  C084  F08C         	movff	?___flsub+3,___fldiv@b+3
  3555  0017DE  0E00               	movlw	0
  3556  0017E0  0100               	movlb	0	; () banked
  3557  0017E2  6F8D               	movwf	___fldiv@a& (0+255),b
  3558  0017E4  0E00               	movlw	0
  3559  0017E6  6F8E               	movwf	(___fldiv@a+1)& (0+255),b
  3560  0017E8  0E7A               	movlw	122
  3561  0017EA  6F8F               	movwf	(___fldiv@a+2)& (0+255),b
  3562  0017EC  0E44               	movlw	68
  3563  0017EE  6F90               	movwf	(___fldiv@a+3)& (0+255),b
  3564  0017F0  EC22  F008         	call	___fldiv	;wreg free
  3565  0017F4  C089  F0C2         	movff	?___fldiv,_dt
  3566  0017F8  C08A  F0C3         	movff	?___fldiv+1,_dt+1
  3567  0017FC  C08B  F0C4         	movff	?___fldiv+2,_dt+2
  3568  001800  C08C  F0C5         	movff	?___fldiv+3,_dt+3
  3569  001804                     
  3570                           ;./Seguidor.h: 120:     tf = millis;
  3571  001804  C0E6  F025         	movff	_millis,___xxtofl@val
  3572  001808  C0E7  F026         	movff	_millis+1,___xxtofl@val+1
  3573  00180C  C0E8  F027         	movff	_millis+2,___xxtofl@val+2
  3574  001810  C0E9  F028         	movff	_millis+3,___xxtofl@val+3
  3575  001814  0E00               	movlw	0
  3576  001816  EC4E  F00F         	call	___xxtofl
  3577  00181A  C025  F0BA         	movff	?___xxtofl,_tf
  3578  00181E  C026  F0BB         	movff	?___xxtofl+1,_tf+1
  3579  001822  C027  F0BC         	movff	?___xxtofl+2,_tf+2
  3580  001826  C028  F0BD         	movff	?___xxtofl+3,_tf+3
  3581  00182A                     
  3582                           ;./Seguidor.h: 122:     P = kp*erro;
  3583  00182A  C0DA  F033         	movff	_erro,___flmul@b
  3584  00182E  C0DB  F034         	movff	_erro+1,___flmul@b+1
  3585  001832  C0DC  F035         	movff	_erro+2,___flmul@b+2
  3586  001836  C0DD  F036         	movff	_erro+3,___flmul@b+3
  3587  00183A  0E00               	movlw	0
  3588  00183C  6E37               	movwf	___flmul@a^0,c
  3589  00183E  0E00               	movlw	0
  3590  001840  6E38               	movwf	(___flmul@a+1)^0,c
  3591  001842  0EA0               	movlw	160
  3592  001844  6E39               	movwf	(___flmul@a+2)^0,c
  3593  001846  0E40               	movlw	64
  3594  001848  6E3A               	movwf	(___flmul@a+3)^0,c
  3595  00184A  EC0C  F006         	call	___flmul	;wreg free
  3596  00184E  C033  F0D6         	movff	?___flmul,_P
  3597  001852  C034  F0D7         	movff	?___flmul+1,_P+1
  3598  001856  C035  F0D8         	movff	?___flmul+2,_P+2
  3599  00185A  C036  F0D9         	movff	?___flmul+3,_P+3
  3600  00185E                     
  3601                           ;./Seguidor.h: 124:     I = I + ki * erro*dt;
  3602  00185E  0E00               	movlw	0
  3603  001860  6E37               	movwf	___flmul@a^0,c
  3604  001862  0E00               	movlw	0
  3605  001864  6E38               	movwf	(___flmul@a+1)^0,c
  3606  001866  0E00               	movlw	0
  3607  001868  6E39               	movwf	(___flmul@a+2)^0,c
  3608  00186A  0E00               	movlw	0
  3609  00186C  6E3A               	movwf	(___flmul@a+3)^0,c
  3610  00186E  C0DA  F033         	movff	_erro,___flmul@b
  3611  001872  C0DB  F034         	movff	_erro+1,___flmul@b+1
  3612  001876  C0DC  F035         	movff	_erro+2,___flmul@b+2
  3613  00187A  C0DD  F036         	movff	_erro+3,___flmul@b+3
  3614  00187E  EC0C  F006         	call	___flmul	;wreg free
  3615  001882  C033  F0A8         	movff	?___flmul,_setPID$1589
  3616  001886  C034  F0A9         	movff	?___flmul+1,_setPID$1589+1
  3617  00188A  C035  F0AA         	movff	?___flmul+2,_setPID$1589+2
  3618  00188E  C036  F0AB         	movff	?___flmul+3,_setPID$1589+3
  3619  001892                     
  3620                           ;./Seguidor.h: 124:     I = I + ki * erro*dt;
  3621  001892  C0C2  F037         	movff	_dt,___flmul@a
  3622  001896  C0C3  F038         	movff	_dt+1,___flmul@a+1
  3623  00189A  C0C4  F039         	movff	_dt+2,___flmul@a+2
  3624  00189E  C0C5  F03A         	movff	_dt+3,___flmul@a+3
  3625  0018A2  C0A8  F033         	movff	_setPID$1589,___flmul@b
  3626  0018A6  C0A9  F034         	movff	_setPID$1589+1,___flmul@b+1
  3627  0018AA  C0AA  F035         	movff	_setPID$1589+2,___flmul@b+2
  3628  0018AE  C0AB  F036         	movff	_setPID$1589+3,___flmul@b+3
  3629  0018B2  EC0C  F006         	call	___flmul	;wreg free
  3630  0018B6  C033  F071         	movff	?___flmul,___fladd@b
  3631  0018BA  C034  F072         	movff	?___flmul+1,___fladd@b+1
  3632  0018BE  C035  F073         	movff	?___flmul+2,___fladd@b+2
  3633  0018C2  C036  F074         	movff	?___flmul+3,___fladd@b+3
  3634  0018C6  C0D2  F075         	movff	_I,___fladd@a
  3635  0018CA  C0D3  F076         	movff	_I+1,___fladd@a+1
  3636  0018CE  C0D4  F077         	movff	_I+2,___fladd@a+2
  3637  0018D2  C0D5  F078         	movff	_I+3,___fladd@a+3
  3638  0018D6  EC72  F001         	call	___fladd	;wreg free
  3639  0018DA  C071  F0D2         	movff	?___fladd,_I
  3640  0018DE  C072  F0D3         	movff	?___fladd+1,_I+1
  3641  0018E2  C073  F0D4         	movff	?___fladd+2,_I+2
  3642  0018E6  C074  F0D5         	movff	?___fladd+3,_I+3
  3643  0018EA                     
  3644                           ;./Seguidor.h: 126:     D = kd * de / dt;
  3645  0018EA  0E00               	movlw	0
  3646  0018EC  6E37               	movwf	___flmul@a^0,c
  3647  0018EE  0E00               	movlw	0
  3648  0018F0  6E38               	movwf	(___flmul@a+1)^0,c
  3649  0018F2  0E00               	movlw	0
  3650  0018F4  6E39               	movwf	(___flmul@a+2)^0,c
  3651  0018F6  0E00               	movlw	0
  3652  0018F8  6E3A               	movwf	(___flmul@a+3)^0,c
  3653  0018FA  C0BE  F033         	movff	_de,___flmul@b
  3654  0018FE  C0BF  F034         	movff	_de+1,___flmul@b+1
  3655  001902  C0C0  F035         	movff	_de+2,___flmul@b+2
  3656  001906  C0C1  F036         	movff	_de+3,___flmul@b+3
  3657  00190A  EC0C  F006         	call	___flmul	;wreg free
  3658  00190E  C033  F089         	movff	?___flmul,___fldiv@b
  3659  001912  C034  F08A         	movff	?___flmul+1,___fldiv@b+1
  3660  001916  C035  F08B         	movff	?___flmul+2,___fldiv@b+2
  3661  00191A  C036  F08C         	movff	?___flmul+3,___fldiv@b+3
  3662  00191E  C0C2  F08D         	movff	_dt,___fldiv@a
  3663  001922  C0C3  F08E         	movff	_dt+1,___fldiv@a+1
  3664  001926  C0C4  F08F         	movff	_dt+2,___fldiv@a+2
  3665  00192A  C0C5  F090         	movff	_dt+3,___fldiv@a+3
  3666  00192E  EC22  F008         	call	___fldiv	;wreg free
  3667  001932  C089  F0CE         	movff	?___fldiv,_D
  3668  001936  C08A  F0CF         	movff	?___fldiv+1,_D+1
  3669  00193A  C08B  F0D0         	movff	?___fldiv+2,_D+2
  3670  00193E  C08C  F0D1         	movff	?___fldiv+3,_D+3
  3671  001942                     
  3672                           ;./Seguidor.h: 128:     PID = P + I + D;
  3673  001942  C0D2  F075         	movff	_I,___fladd@a
  3674  001946  C0D3  F076         	movff	_I+1,___fladd@a+1
  3675  00194A  C0D4  F077         	movff	_I+2,___fladd@a+2
  3676  00194E  C0D5  F078         	movff	_I+3,___fladd@a+3
  3677  001952  C0D6  F071         	movff	_P,___fladd@b
  3678  001956  C0D7  F072         	movff	_P+1,___fladd@b+1
  3679  00195A  C0D8  F073         	movff	_P+2,___fladd@b+2
  3680  00195E  C0D9  F074         	movff	_P+3,___fladd@b+3
  3681  001962  EC72  F001         	call	___fladd	;wreg free
  3682  001966  C071  F0AC         	movff	?___fladd,_setPID$1590
  3683  00196A  C072  F0AD         	movff	?___fladd+1,_setPID$1590+1
  3684  00196E  C073  F0AE         	movff	?___fladd+2,_setPID$1590+2
  3685  001972  C074  F0AF         	movff	?___fladd+3,_setPID$1590+3
  3686  001976                     
  3687                           ;./Seguidor.h: 128:     PID = P + I + D;
  3688  001976  C0AC  F071         	movff	_setPID$1590,___fladd@b
  3689  00197A  C0AD  F072         	movff	_setPID$1590+1,___fladd@b+1
  3690  00197E  C0AE  F073         	movff	_setPID$1590+2,___fladd@b+2
  3691  001982  C0AF  F074         	movff	_setPID$1590+3,___fladd@b+3
  3692  001986  C0CE  F075         	movff	_D,___fladd@a
  3693  00198A  C0CF  F076         	movff	_D+1,___fladd@a+1
  3694  00198E  C0D0  F077         	movff	_D+2,___fladd@a+2
  3695  001992  C0D1  F078         	movff	_D+3,___fladd@a+3
  3696  001996  EC72  F001         	call	___fladd	;wreg free
  3697  00199A  C071  F0CA         	movff	?___fladd,_PID
  3698  00199E  C072  F0CB         	movff	?___fladd+1,_PID+1
  3699  0019A2  C073  F0CC         	movff	?___fladd+2,_PID+2
  3700  0019A6  C074  F0CD         	movff	?___fladd+3,_PID+3
  3701  0019AA                     
  3702                           ;./Seguidor.h: 130:     moverMotor(PID);
  3703  0019AA  C0CA  F081         	movff	_PID,___fltol@f1
  3704  0019AE  C0CB  F082         	movff	_PID+1,___fltol@f1+1
  3705  0019B2  C0CC  F083         	movff	_PID+2,___fltol@f1+2
  3706  0019B6  C0CD  F084         	movff	_PID+3,___fltol@f1+3
  3707  0019BA  EC40  F013         	call	___fltol	;wreg free
  3708  0019BE  C081  F0B0         	movff	?___fltol,_setPID$1591
  3709  0019C2  C082  F0B1         	movff	?___fltol+1,_setPID$1591+1
  3710  0019C6                     
  3711                           ;./Seguidor.h: 130:     moverMotor(PID);
  3712  0019C6  C0B0  F08D         	movff	_setPID$1591,moverMotor@PID
  3713  0019CA  C0B1  F08E         	movff	_setPID$1591+1,moverMotor@PID+1
  3714  0019CE  EC33  F015         	call	_moverMotor	;wreg free
  3715  0019D2  0012               	return		;funcret
  3716  0019D4                     __end_of_setPID:
  3717                           	callstack 0
  3718                           
  3719 ;; *************** function _posicao *****************
  3720 ;; Defined at:
  3721 ;;		line 53 in file "./Seguidor.h"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;		None
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;  total           4    8[BANK1 ] void 
  3726 ;;  pos             4    4[BANK1 ] void 
  3727 ;;  local           4    0[BANK1 ] void 
  3728 ;;  i               2   12[BANK1 ] int 
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  4   66[BANK0 ] int 
  3731 ;; Registers used:
  3732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3738 ;;      Params:         0       4       0       0
  3739 ;;      Locals:         0       0      14       0
  3740 ;;      Temps:          0       2       0       0
  3741 ;;      Totals:         0       6      14       0
  3742 ;;Total ram usage:       20 bytes
  3743 ;; Hardware stack levels used: 1
  3744 ;; Hardware stack levels required when called: 5
  3745 ;; This function calls:
  3746 ;;		___fladd
  3747 ;;		___fldiv
  3748 ;;		___fleq
  3749 ;;		___xxtofl
  3750 ;; This function is called by:
  3751 ;;		_setPID
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754                           
  3755                           	psect	text9
  3756  002050                     __ptext9:
  3757                           	callstack 0
  3758  002050                     _posicao:
  3759                           	callstack 24
  3760  002050                     
  3761                           ;./Seguidor.h: 54:     int i;;./Seguidor.h: 55:     double pos = 0;
  3762  002050  0E00               	movlw	0
  3763  002052  0101               	movlb	1	; () banked
  3764  002054  6F2C               	movwf	posicao@pos& (0+255),b
  3765  002056  0E00               	movlw	0
  3766  002058  6F2D               	movwf	(posicao@pos+1)& (0+255),b
  3767  00205A  0E00               	movlw	0
  3768  00205C  6F2E               	movwf	(posicao@pos+2)& (0+255),b
  3769  00205E  0E00               	movlw	0
  3770  002060  6F2F               	movwf	(posicao@pos+3)& (0+255),b
  3771                           
  3772                           ;./Seguidor.h: 57:     double total = 0;
  3773  002062  0E00               	movlw	0
  3774  002064  6F30               	movwf	posicao@total& (0+255),b
  3775  002066  0E00               	movlw	0
  3776  002068  6F31               	movwf	(posicao@total+1)& (0+255),b
  3777  00206A  0E00               	movlw	0
  3778  00206C  6F32               	movwf	(posicao@total+2)& (0+255),b
  3779  00206E  0E00               	movlw	0
  3780  002070  6F33               	movwf	(posicao@total+3)& (0+255),b
  3781                           
  3782                           ;./Seguidor.h: 59:     for (i = 1; i < 6; i++) {
  3783  002072  0E00               	movlw	0
  3784  002074  6F35               	movwf	(posicao@i+1)& (0+255),b
  3785  002076  0E01               	movlw	1
  3786  002078  6F34               	movwf	posicao@i& (0+255),b
  3787  00207A                     l4784:
  3788                           
  3789                           ; BSR set to: 1
  3790                           ;./Seguidor.h: 60:         if (leitura[i] == 1) {
  3791  00207A  0E00               	movlw	low _leitura
  3792  00207C  0100               	movlb	0	; () banked
  3793  00207E  6FA6               	movwf	??_posicao& (0+255),b
  3794  002080  0E01               	movlw	high _leitura
  3795  002082  6FA7               	movwf	(??_posicao+1)& (0+255),b
  3796  002084  90D8               	bcf	status,0,c
  3797  002086  0101               	movlb	1	; () banked
  3798  002088  3534               	rlcf	posicao@i& (0+255),w,b
  3799  00208A  6ED9               	movwf	fsr2l,c
  3800  00208C  3535               	rlcf	(posicao@i+1)& (0+255),w,b
  3801  00208E  6EDA               	movwf	fsr2h,c
  3802  002090  90D8               	bcf	status,0,c
  3803  002092  36D9               	rlcf	fsr2l,f,c
  3804  002094  36DA               	rlcf	fsr2h,f,c
  3805  002096  0100               	movlb	0	; () banked
  3806  002098  51A6               	movf	??_posicao& (0+255),w,b
  3807  00209A  26D9               	addwf	fsr2l,f,c
  3808  00209C  51A7               	movf	(??_posicao+1)& (0+255),w,b
  3809  00209E  22DA               	addwfc	fsr2h,f,c
  3810  0020A0  CFDE F013          	movff	postinc2,___fleq@ff1
  3811  0020A4  CFDE F014          	movff	postinc2,___fleq@ff1+1
  3812  0020A8  CFDE F015          	movff	postinc2,___fleq@ff1+2
  3813  0020AC  CFDE F016          	movff	postinc2,___fleq@ff1+3
  3814  0020B0  0E00               	movlw	0
  3815  0020B2  6E17               	movwf	___fleq@ff2^0,c
  3816  0020B4  0E00               	movlw	0
  3817  0020B6  6E18               	movwf	(___fleq@ff2+1)^0,c
  3818  0020B8  0E80               	movlw	128
  3819  0020BA  6E19               	movwf	(___fleq@ff2+2)^0,c
  3820  0020BC  0E3F               	movlw	63
  3821  0020BE  6E1A               	movwf	(___fleq@ff2+3)^0,c
  3822  0020C0  EC7C  F017         	call	___fleq	;wreg free
  3823  0020C4  A0D8               	btfss	status,0,c
  3824  0020C6  EF67  F010         	goto	u5241
  3825  0020CA  EF69  F010         	goto	u5240
  3826  0020CE                     u5241:
  3827  0020CE  EFAA  F010         	goto	l4788
  3828  0020D2                     u5240:
  3829  0020D2                     
  3830                           ;./Seguidor.h: 61:             pos += i;
  3831  0020D2  C12C  F071         	movff	posicao@pos,___fladd@b
  3832  0020D6  C12D  F072         	movff	posicao@pos+1,___fladd@b+1
  3833  0020DA  C12E  F073         	movff	posicao@pos+2,___fladd@b+2
  3834  0020DE  C12F  F074         	movff	posicao@pos+3,___fladd@b+3
  3835  0020E2  C134  F025         	movff	posicao@i,___xxtofl@val
  3836  0020E6  C135  F026         	movff	posicao@i+1,___xxtofl@val+1
  3837  0020EA  0E00               	movlw	0
  3838  0020EC  BE26               	btfsc	(___xxtofl@val+1)^0,7,c
  3839  0020EE  0EFF               	movlw	-1
  3840  0020F0  6E27               	movwf	(___xxtofl@val+2)^0,c
  3841  0020F2  6E28               	movwf	(___xxtofl@val+3)^0,c
  3842  0020F4  0E01               	movlw	1
  3843  0020F6  EC4E  F00F         	call	___xxtofl
  3844  0020FA  C025  F075         	movff	?___xxtofl,___fladd@a
  3845  0020FE  C026  F076         	movff	?___xxtofl+1,___fladd@a+1
  3846  002102  C027  F077         	movff	?___xxtofl+2,___fladd@a+2
  3847  002106  C028  F078         	movff	?___xxtofl+3,___fladd@a+3
  3848  00210A  EC72  F001         	call	___fladd	;wreg free
  3849  00210E  C071  F12C         	movff	?___fladd,posicao@pos
  3850  002112  C072  F12D         	movff	?___fladd+1,posicao@pos+1
  3851  002116  C073  F12E         	movff	?___fladd+2,posicao@pos+2
  3852  00211A  C074  F12F         	movff	?___fladd+3,posicao@pos+3
  3853                           
  3854                           ;./Seguidor.h: 62:             total += 1;
  3855  00211E  C130  F071         	movff	posicao@total,___fladd@b
  3856  002122  C131  F072         	movff	posicao@total+1,___fladd@b+1
  3857  002126  C132  F073         	movff	posicao@total+2,___fladd@b+2
  3858  00212A  C133  F074         	movff	posicao@total+3,___fladd@b+3
  3859  00212E  0E00               	movlw	0
  3860  002130  0100               	movlb	0	; () banked
  3861  002132  6F75               	movwf	___fladd@a& (0+255),b
  3862  002134  0E00               	movlw	0
  3863  002136  6F76               	movwf	(___fladd@a+1)& (0+255),b
  3864  002138  0E80               	movlw	128
  3865  00213A  6F77               	movwf	(___fladd@a+2)& (0+255),b
  3866  00213C  0E3F               	movlw	63
  3867  00213E  6F78               	movwf	(___fladd@a+3)& (0+255),b
  3868  002140  EC72  F001         	call	___fladd	;wreg free
  3869  002144  C071  F130         	movff	?___fladd,posicao@total
  3870  002148  C072  F131         	movff	?___fladd+1,posicao@total+1
  3871  00214C  C073  F132         	movff	?___fladd+2,posicao@total+2
  3872  002150  C074  F133         	movff	?___fladd+3,posicao@total+3
  3873  002154                     l4788:
  3874                           
  3875                           ;./Seguidor.h: 64:     }
  3876  002154  0101               	movlb	1	; () banked
  3877  002156  4B34               	infsnz	posicao@i& (0+255),f,b
  3878  002158  2B35               	incf	(posicao@i+1)& (0+255),f,b
  3879  00215A                     
  3880                           ; BSR set to: 1
  3881  00215A  BF35               	btfsc	(posicao@i+1)& (0+255),7,b
  3882  00215C  EFB9  F010         	goto	u5251
  3883  002160  5135               	movf	(posicao@i+1)& (0+255),w,b
  3884  002162  E109               	bnz	u5250
  3885  002164  0E06               	movlw	6
  3886  002166  5D34               	subwf	posicao@i& (0+255),w,b
  3887  002168  A0D8               	btfss	status,0,c
  3888  00216A  EFB9  F010         	goto	u5251
  3889  00216E  EFBB  F010         	goto	u5250
  3890  002172                     u5251:
  3891  002172  EF3D  F010         	goto	l4784
  3892  002176                     u5250:
  3893  002176                     
  3894                           ; BSR set to: 1
  3895                           ;./Seguidor.h: 65:     if (total != 0) {
  3896  002176  C130  F013         	movff	posicao@total,___fleq@ff1
  3897  00217A  C131  F014         	movff	posicao@total+1,___fleq@ff1+1
  3898  00217E  C132  F015         	movff	posicao@total+2,___fleq@ff1+2
  3899  002182  C133  F016         	movff	posicao@total+3,___fleq@ff1+3
  3900  002186  0E00               	movlw	0
  3901  002188  6E17               	movwf	___fleq@ff2^0,c
  3902  00218A  0E00               	movlw	0
  3903  00218C  6E18               	movwf	(___fleq@ff2+1)^0,c
  3904  00218E  0E00               	movlw	0
  3905  002190  6E19               	movwf	(___fleq@ff2+2)^0,c
  3906  002192  0E00               	movlw	0
  3907  002194  6E1A               	movwf	(___fleq@ff2+3)^0,c
  3908  002196  EC7C  F017         	call	___fleq	;wreg free
  3909  00219A  B0D8               	btfsc	status,0,c
  3910  00219C  EFD2  F010         	goto	u5261
  3911  0021A0  EFD4  F010         	goto	u5260
  3912  0021A4                     u5261:
  3913  0021A4  EFF8  F010         	goto	l321
  3914  0021A8                     u5260:
  3915  0021A8                     
  3916                           ;./Seguidor.h: 66:         local = pos / total;
  3917  0021A8  C12C  F089         	movff	posicao@pos,___fldiv@b
  3918  0021AC  C12D  F08A         	movff	posicao@pos+1,___fldiv@b+1
  3919  0021B0  C12E  F08B         	movff	posicao@pos+2,___fldiv@b+2
  3920  0021B4  C12F  F08C         	movff	posicao@pos+3,___fldiv@b+3
  3921  0021B8  C130  F08D         	movff	posicao@total,___fldiv@a
  3922  0021BC  C131  F08E         	movff	posicao@total+1,___fldiv@a+1
  3923  0021C0  C132  F08F         	movff	posicao@total+2,___fldiv@a+2
  3924  0021C4  C133  F090         	movff	posicao@total+3,___fldiv@a+3
  3925  0021C8  EC22  F008         	call	___fldiv	;wreg free
  3926  0021CC  C089  F128         	movff	?___fldiv,posicao@local
  3927  0021D0  C08A  F129         	movff	?___fldiv+1,posicao@local+1
  3928  0021D4  C08B  F12A         	movff	?___fldiv+2,posicao@local+2
  3929  0021D8  C08C  F12B         	movff	?___fldiv+3,posicao@local+3
  3930  0021DC                     
  3931                           ;./Seguidor.h: 67:         return local;
  3932  0021DC  C128  F0A2         	movff	posicao@local,?_posicao
  3933  0021E0  C129  F0A3         	movff	posicao@local+1,?_posicao+1
  3934  0021E4  C12A  F0A4         	movff	posicao@local+2,?_posicao+2
  3935  0021E8  C12B  F0A5         	movff	posicao@local+3,?_posicao+3
  3936  0021EC  EF00  F011         	goto	l322
  3937  0021F0                     l321:
  3938                           
  3939                           ;./Seguidor.h: 69:         return posin;
  3940  0021F0  C0E2  F0A2         	movff	_posin,?_posicao
  3941  0021F4  C0E3  F0A3         	movff	_posin+1,?_posicao+1
  3942  0021F8  C0E4  F0A4         	movff	_posin+2,?_posicao+2
  3943  0021FC  C0E5  F0A5         	movff	_posin+3,?_posicao+3
  3944  002200                     l322:
  3945  002200  0012               	return		;funcret
  3946  002202                     __end_of_posicao:
  3947                           	callstack 0
  3948                           
  3949 ;; *************** function ___fldiv *****************
  3950 ;; Defined at:
  3951 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;  b               4   41[BANK0 ] int 
  3954 ;;  a               4   45[BANK0 ] int 
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;  grs             4   60[BANK0 ] unsigned long 
  3957 ;;  rem             4   53[BANK0 ] unsigned long 
  3958 ;;  new_exp         2   58[BANK0 ] short 
  3959 ;;  aexp            1   65[BANK0 ] unsigned char 
  3960 ;;  bexp            1   64[BANK0 ] unsigned char 
  3961 ;;  sign            1   57[BANK0 ] unsigned char 
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  4   41[BANK0 ] unsigned char 
  3964 ;; Registers used:
  3965 ;;		wreg, status,2, status,0
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3971 ;;      Params:         0       8       0       0
  3972 ;;      Locals:         0      13       0       0
  3973 ;;      Temps:          0       4       0       0
  3974 ;;      Totals:         0      25       0       0
  3975 ;;Total ram usage:       25 bytes
  3976 ;; Hardware stack levels used: 1
  3977 ;; Hardware stack levels required when called: 4
  3978 ;; This function calls:
  3979 ;;		Nothing
  3980 ;; This function is called by:
  3981 ;;		_posicao
  3982 ;;		_setPID
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986                           	psect	text10
  3987  001044                     __ptext10:
  3988                           	callstack 0
  3989  001044                     ___fldiv:
  3990                           	callstack 24
  3991  001044  0100               	movlb	0	; () banked
  3992  001046  518C               	movf	(___fldiv@b+3)& (0+255),w,b
  3993  001048  0B80               	andlw	128
  3994  00104A  6F99               	movwf	___fldiv@sign& (0+255),b
  3995  00104C  518C               	movf	(___fldiv@b+3)& (0+255),w,b
  3996  00104E  258C               	addwf	(___fldiv@b+3)& (0+255),w,b
  3997  001050  6FA0               	movwf	___fldiv@bexp& (0+255),b
  3998  001052                     
  3999                           ; BSR set to: 0
  4000  001052  AF8B               	btfss	(___fldiv@b+2)& (0+255),7,b
  4001  001054  EF2E  F008         	goto	u4951
  4002  001058  EF30  F008         	goto	u4950
  4003  00105C                     u4951:
  4004  00105C  EF31  F008         	goto	l4600
  4005  001060                     u4950:
  4006  001060                     
  4007                           ; BSR set to: 0
  4008  001060  81A0               	bsf	___fldiv@bexp& (0+255),0,b
  4009  001062                     l4600:
  4010                           
  4011                           ; BSR set to: 0
  4012  001062  51A0               	movf	___fldiv@bexp& (0+255),w,b
  4013  001064  B4D8               	btfsc	status,2,c
  4014  001066  EF37  F008         	goto	u4961
  4015  00106A  EF39  F008         	goto	u4960
  4016  00106E                     u4961:
  4017  00106E  EF4E  F008         	goto	l4610
  4018  001072                     u4960:
  4019  001072                     
  4020                           ; BSR set to: 0
  4021  001072  29A0               	incf	___fldiv@bexp& (0+255),w,b
  4022  001074  A4D8               	btfss	status,2,c
  4023  001076  EF3F  F008         	goto	u4971
  4024  00107A  EF41  F008         	goto	u4970
  4025  00107E                     u4971:
  4026  00107E  EF49  F008         	goto	l4606
  4027  001082                     u4970:
  4028  001082                     
  4029                           ; BSR set to: 0
  4030  001082  0E00               	movlw	0
  4031  001084  6F89               	movwf	___fldiv@b& (0+255),b
  4032  001086  0E00               	movlw	0
  4033  001088  6F8A               	movwf	(___fldiv@b+1)& (0+255),b
  4034  00108A  0E00               	movlw	0
  4035  00108C  6F8B               	movwf	(___fldiv@b+2)& (0+255),b
  4036  00108E  0E00               	movlw	0
  4037  001090  6F8C               	movwf	(___fldiv@b+3)& (0+255),b
  4038  001092                     l4606:
  4039                           
  4040                           ; BSR set to: 0
  4041  001092  8F8B               	bsf	(___fldiv@b+2)& (0+255),7,b
  4042  001094                     
  4043                           ; BSR set to: 0
  4044  001094  0E00               	movlw	0
  4045  001096  6F8C               	movwf	(___fldiv@b+3)& (0+255),b
  4046  001098  EF56  F008         	goto	l4612
  4047  00109C                     l4610:
  4048                           
  4049                           ; BSR set to: 0
  4050  00109C  0E00               	movlw	0
  4051  00109E  6F89               	movwf	___fldiv@b& (0+255),b
  4052  0010A0  0E00               	movlw	0
  4053  0010A2  6F8A               	movwf	(___fldiv@b+1)& (0+255),b
  4054  0010A4  0E00               	movlw	0
  4055  0010A6  6F8B               	movwf	(___fldiv@b+2)& (0+255),b
  4056  0010A8  0E00               	movlw	0
  4057  0010AA  6F8C               	movwf	(___fldiv@b+3)& (0+255),b
  4058  0010AC                     l4612:
  4059                           
  4060                           ; BSR set to: 0
  4061  0010AC  5190               	movf	(___fldiv@a+3)& (0+255),w,b
  4062  0010AE  0B80               	andlw	128
  4063  0010B0  1B99               	xorwf	___fldiv@sign& (0+255),f,b
  4064  0010B2                     
  4065                           ; BSR set to: 0
  4066  0010B2  5190               	movf	(___fldiv@a+3)& (0+255),w,b
  4067  0010B4  2590               	addwf	(___fldiv@a+3)& (0+255),w,b
  4068  0010B6  6FA1               	movwf	___fldiv@aexp& (0+255),b
  4069  0010B8                     
  4070                           ; BSR set to: 0
  4071  0010B8  AF8F               	btfss	(___fldiv@a+2)& (0+255),7,b
  4072  0010BA  EF61  F008         	goto	u4981
  4073  0010BE  EF63  F008         	goto	u4980
  4074  0010C2                     u4981:
  4075  0010C2  EF64  F008         	goto	l4620
  4076  0010C6                     u4980:
  4077  0010C6                     
  4078                           ; BSR set to: 0
  4079  0010C6  81A1               	bsf	___fldiv@aexp& (0+255),0,b
  4080  0010C8                     l4620:
  4081                           
  4082                           ; BSR set to: 0
  4083  0010C8  51A1               	movf	___fldiv@aexp& (0+255),w,b
  4084  0010CA  B4D8               	btfsc	status,2,c
  4085  0010CC  EF6A  F008         	goto	u4991
  4086  0010D0  EF6C  F008         	goto	u4990
  4087  0010D4                     u4991:
  4088  0010D4  EF81  F008         	goto	l4630
  4089  0010D8                     u4990:
  4090  0010D8                     
  4091                           ; BSR set to: 0
  4092  0010D8  29A1               	incf	___fldiv@aexp& (0+255),w,b
  4093  0010DA  A4D8               	btfss	status,2,c
  4094  0010DC  EF72  F008         	goto	u5001
  4095  0010E0  EF74  F008         	goto	u5000
  4096  0010E4                     u5001:
  4097  0010E4  EF7C  F008         	goto	l4626
  4098  0010E8                     u5000:
  4099  0010E8                     
  4100                           ; BSR set to: 0
  4101  0010E8  0E00               	movlw	0
  4102  0010EA  6F8D               	movwf	___fldiv@a& (0+255),b
  4103  0010EC  0E00               	movlw	0
  4104  0010EE  6F8E               	movwf	(___fldiv@a+1)& (0+255),b
  4105  0010F0  0E00               	movlw	0
  4106  0010F2  6F8F               	movwf	(___fldiv@a+2)& (0+255),b
  4107  0010F4  0E00               	movlw	0
  4108  0010F6  6F90               	movwf	(___fldiv@a+3)& (0+255),b
  4109  0010F8                     l4626:
  4110                           
  4111                           ; BSR set to: 0
  4112  0010F8  8F8F               	bsf	(___fldiv@a+2)& (0+255),7,b
  4113  0010FA                     
  4114                           ; BSR set to: 0
  4115  0010FA  0E00               	movlw	0
  4116  0010FC  6F90               	movwf	(___fldiv@a+3)& (0+255),b
  4117  0010FE  EF89  F008         	goto	l4632
  4118  001102                     l4630:
  4119                           
  4120                           ; BSR set to: 0
  4121  001102  0E00               	movlw	0
  4122  001104  6F8D               	movwf	___fldiv@a& (0+255),b
  4123  001106  0E00               	movlw	0
  4124  001108  6F8E               	movwf	(___fldiv@a+1)& (0+255),b
  4125  00110A  0E00               	movlw	0
  4126  00110C  6F8F               	movwf	(___fldiv@a+2)& (0+255),b
  4127  00110E  0E00               	movlw	0
  4128  001110  6F90               	movwf	(___fldiv@a+3)& (0+255),b
  4129  001112                     l4632:
  4130                           
  4131                           ; BSR set to: 0
  4132  001112  518D               	movf	___fldiv@a& (0+255),w,b
  4133  001114  118E               	iorwf	(___fldiv@a+1)& (0+255),w,b
  4134  001116  118F               	iorwf	(___fldiv@a+2)& (0+255),w,b
  4135  001118  1190               	iorwf	(___fldiv@a+3)& (0+255),w,b
  4136  00111A  A4D8               	btfss	status,2,c
  4137  00111C  EF92  F008         	goto	u5011
  4138  001120  EF94  F008         	goto	u5010
  4139  001124                     u5011:
  4140  001124  EFAC  F008         	goto	l4644
  4141  001128                     u5010:
  4142  001128                     
  4143                           ; BSR set to: 0
  4144  001128  0E00               	movlw	0
  4145  00112A  6F89               	movwf	___fldiv@b& (0+255),b
  4146  00112C  0E00               	movlw	0
  4147  00112E  6F8A               	movwf	(___fldiv@b+1)& (0+255),b
  4148  001130  0E00               	movlw	0
  4149  001132  6F8B               	movwf	(___fldiv@b+2)& (0+255),b
  4150  001134  0E00               	movlw	0
  4151  001136  6F8C               	movwf	(___fldiv@b+3)& (0+255),b
  4152  001138                     
  4153                           ; BSR set to: 0
  4154  001138  0E80               	movlw	128
  4155  00113A  138B               	iorwf	(___fldiv@b+2)& (0+255),f,b
  4156  00113C  0E7F               	movlw	127
  4157  00113E  138C               	iorwf	(___fldiv@b+3)& (0+255),f,b
  4158  001140                     l4638:
  4159                           
  4160                           ; BSR set to: 0
  4161  001140  5199               	movf	___fldiv@sign& (0+255),w,b
  4162  001142  138C               	iorwf	(___fldiv@b+3)& (0+255),f,b
  4163  001144                     
  4164                           ; BSR set to: 0
  4165  001144  C089  F089         	movff	___fldiv@b,?___fldiv
  4166  001148  C08A  F08A         	movff	___fldiv@b+1,?___fldiv+1
  4167  00114C  C08B  F08B         	movff	___fldiv@b+2,?___fldiv+2
  4168  001150  C08C  F08C         	movff	___fldiv@b+3,?___fldiv+3
  4169  001154  EFEF  F009         	goto	l979
  4170  001158                     l4644:
  4171                           
  4172                           ; BSR set to: 0
  4173  001158  51A0               	movf	___fldiv@bexp& (0+255),w,b
  4174  00115A  A4D8               	btfss	status,2,c
  4175  00115C  EFB2  F008         	goto	u5021
  4176  001160  EFB4  F008         	goto	u5020
  4177  001164                     u5021:
  4178  001164  EFBE  F008         	goto	l4652
  4179  001168                     u5020:
  4180  001168                     
  4181                           ; BSR set to: 0
  4182  001168  0E00               	movlw	0
  4183  00116A  6F89               	movwf	?___fldiv& (0+255),b
  4184  00116C  0E00               	movlw	0
  4185  00116E  6F8A               	movwf	(?___fldiv+1)& (0+255),b
  4186  001170  0E00               	movlw	0
  4187  001172  6F8B               	movwf	(?___fldiv+2)& (0+255),b
  4188  001174  0E00               	movlw	0
  4189  001176  6F8C               	movwf	(?___fldiv+3)& (0+255),b
  4190  001178  EFEF  F009         	goto	l979
  4191  00117C                     l4652:
  4192                           
  4193                           ; BSR set to: 0
  4194  00117C  51A1               	movf	___fldiv@aexp& (0+255),w,b
  4195  00117E  C0A0  F091         	movff	___fldiv@bexp,??___fldiv
  4196  001182  6B92               	clrf	(??___fldiv+1)& (0+255),b
  4197  001184  5F91               	subwf	??___fldiv& (0+255),f,b
  4198  001186  0E00               	movlw	0
  4199  001188  5B92               	subwfb	(??___fldiv+1)& (0+255),f,b
  4200  00118A  0E7F               	movlw	127
  4201  00118C  2591               	addwf	??___fldiv& (0+255),w,b
  4202  00118E  6F9A               	movwf	___fldiv@new_exp& (0+255),b
  4203  001190  0E00               	movlw	0
  4204  001192  2192               	addwfc	(??___fldiv+1)& (0+255),w,b
  4205  001194  6F9B               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4206  001196                     
  4207                           ; BSR set to: 0
  4208  001196  C089  F095         	movff	___fldiv@b,___fldiv@rem
  4209  00119A  C08A  F096         	movff	___fldiv@b+1,___fldiv@rem+1
  4210  00119E  C08B  F097         	movff	___fldiv@b+2,___fldiv@rem+2
  4211  0011A2  C08C  F098         	movff	___fldiv@b+3,___fldiv@rem+3
  4212  0011A6                     
  4213                           ; BSR set to: 0
  4214  0011A6  0E00               	movlw	0
  4215  0011A8  6F89               	movwf	___fldiv@b& (0+255),b
  4216  0011AA  0E00               	movlw	0
  4217  0011AC  6F8A               	movwf	(___fldiv@b+1)& (0+255),b
  4218  0011AE  0E00               	movlw	0
  4219  0011B0  6F8B               	movwf	(___fldiv@b+2)& (0+255),b
  4220  0011B2  0E00               	movlw	0
  4221  0011B4  6F8C               	movwf	(___fldiv@b+3)& (0+255),b
  4222  0011B6                     
  4223                           ; BSR set to: 0
  4224  0011B6  0E00               	movlw	0
  4225  0011B8  6F9C               	movwf	___fldiv@grs& (0+255),b
  4226  0011BA  0E00               	movlw	0
  4227  0011BC  6F9D               	movwf	(___fldiv@grs+1)& (0+255),b
  4228  0011BE  0E00               	movlw	0
  4229  0011C0  6F9E               	movwf	(___fldiv@grs+2)& (0+255),b
  4230  0011C2  0E00               	movlw	0
  4231  0011C4  6F9F               	movwf	(___fldiv@grs+3)& (0+255),b
  4232  0011C6                     
  4233                           ; BSR set to: 0
  4234  0011C6  0E00               	movlw	0
  4235  0011C8  6FA1               	movwf	___fldiv@aexp& (0+255),b
  4236  0011CA  EF1F  F009         	goto	l981
  4237  0011CE                     l4662:
  4238                           
  4239                           ; BSR set to: 0
  4240  0011CE  51A1               	movf	___fldiv@aexp& (0+255),w,b
  4241  0011D0  B4D8               	btfsc	status,2,c
  4242  0011D2  EFED  F008         	goto	u5031
  4243  0011D6  EFEF  F008         	goto	u5030
  4244  0011DA                     u5031:
  4245  0011DA  EF06  F009         	goto	l4670
  4246  0011DE                     u5030:
  4247  0011DE                     
  4248                           ; BSR set to: 0
  4249  0011DE  90D8               	bcf	status,0,c
  4250  0011E0  3795               	rlcf	___fldiv@rem& (0+255),f,b
  4251  0011E2  3796               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  4252  0011E4  3797               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  4253  0011E6  3798               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  4254  0011E8  90D8               	bcf	status,0,c
  4255  0011EA  3789               	rlcf	___fldiv@b& (0+255),f,b
  4256  0011EC  378A               	rlcf	(___fldiv@b+1)& (0+255),f,b
  4257  0011EE  378B               	rlcf	(___fldiv@b+2)& (0+255),f,b
  4258  0011F0  378C               	rlcf	(___fldiv@b+3)& (0+255),f,b
  4259  0011F2                     
  4260                           ; BSR set to: 0
  4261  0011F2  AF9F               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4262  0011F4  EFFE  F008         	goto	u5041
  4263  0011F8  EF00  F009         	goto	u5040
  4264  0011FC                     u5041:
  4265  0011FC  EF01  F009         	goto	l984
  4266  001200                     u5040:
  4267  001200                     
  4268                           ; BSR set to: 0
  4269  001200  8189               	bsf	___fldiv@b& (0+255),0,b
  4270  001202                     l984:
  4271                           
  4272                           ; BSR set to: 0
  4273  001202  90D8               	bcf	status,0,c
  4274  001204  379C               	rlcf	___fldiv@grs& (0+255),f,b
  4275  001206  379D               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  4276  001208  379E               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  4277  00120A  379F               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  4278  00120C                     l4670:
  4279                           
  4280                           ; BSR set to: 0
  4281  00120C  518D               	movf	___fldiv@a& (0+255),w,b
  4282  00120E  5D95               	subwf	___fldiv@rem& (0+255),w,b
  4283  001210  518E               	movf	(___fldiv@a+1)& (0+255),w,b
  4284  001212  5996               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  4285  001214  518F               	movf	(___fldiv@a+2)& (0+255),w,b
  4286  001216  5997               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  4287  001218  5190               	movf	(___fldiv@a+3)& (0+255),w,b
  4288  00121A  5998               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  4289  00121C  A0D8               	btfss	status,0,c
  4290  00121E  EF13  F009         	goto	u5051
  4291  001222  EF15  F009         	goto	u5050
  4292  001226                     u5051:
  4293  001226  EF1E  F009         	goto	l4676
  4294  00122A                     u5050:
  4295  00122A                     
  4296                           ; BSR set to: 0
  4297  00122A  8D9F               	bsf	(___fldiv@grs+3)& (0+255),6,b
  4298  00122C                     
  4299                           ; BSR set to: 0
  4300  00122C  518D               	movf	___fldiv@a& (0+255),w,b
  4301  00122E  5F95               	subwf	___fldiv@rem& (0+255),f,b
  4302  001230  518E               	movf	(___fldiv@a+1)& (0+255),w,b
  4303  001232  5B96               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  4304  001234  518F               	movf	(___fldiv@a+2)& (0+255),w,b
  4305  001236  5B97               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  4306  001238  5190               	movf	(___fldiv@a+3)& (0+255),w,b
  4307  00123A  5B98               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  4308  00123C                     l4676:
  4309                           
  4310                           ; BSR set to: 0
  4311  00123C  2BA1               	incf	___fldiv@aexp& (0+255),f,b
  4312  00123E                     l981:
  4313                           
  4314                           ; BSR set to: 0
  4315  00123E  0E19               	movlw	25
  4316  001240  65A1               	cpfsgt	___fldiv@aexp& (0+255),b
  4317  001242  EF25  F009         	goto	u5061
  4318  001246  EF27  F009         	goto	u5060
  4319  00124A                     u5061:
  4320  00124A  EFE7  F008         	goto	l4662
  4321  00124E                     u5060:
  4322  00124E                     
  4323                           ; BSR set to: 0
  4324  00124E  5195               	movf	___fldiv@rem& (0+255),w,b
  4325  001250  1196               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  4326  001252  1197               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  4327  001254  1198               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  4328  001256  B4D8               	btfsc	status,2,c
  4329  001258  EF30  F009         	goto	u5071
  4330  00125C  EF32  F009         	goto	u5070
  4331  001260                     u5071:
  4332  001260  EF4A  F009         	goto	l4688
  4333  001264                     u5070:
  4334  001264                     
  4335                           ; BSR set to: 0
  4336  001264  819C               	bsf	___fldiv@grs& (0+255),0,b
  4337  001266  EF4A  F009         	goto	l4688
  4338  00126A                     l4682:
  4339                           
  4340                           ; BSR set to: 0
  4341  00126A  90D8               	bcf	status,0,c
  4342  00126C  3789               	rlcf	___fldiv@b& (0+255),f,b
  4343  00126E  378A               	rlcf	(___fldiv@b+1)& (0+255),f,b
  4344  001270  378B               	rlcf	(___fldiv@b+2)& (0+255),f,b
  4345  001272  378C               	rlcf	(___fldiv@b+3)& (0+255),f,b
  4346  001274                     
  4347                           ; BSR set to: 0
  4348  001274  AF9F               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4349  001276  EF3F  F009         	goto	u5081
  4350  00127A  EF41  F009         	goto	u5080
  4351  00127E                     u5081:
  4352  00127E  EF42  F009         	goto	l990
  4353  001282                     u5080:
  4354  001282                     
  4355                           ; BSR set to: 0
  4356  001282  8189               	bsf	___fldiv@b& (0+255),0,b
  4357  001284                     l990:
  4358                           
  4359                           ; BSR set to: 0
  4360  001284  90D8               	bcf	status,0,c
  4361  001286  379C               	rlcf	___fldiv@grs& (0+255),f,b
  4362  001288  379D               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  4363  00128A  379E               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  4364  00128C  379F               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  4365  00128E  079A               	decf	___fldiv@new_exp& (0+255),f,b
  4366  001290  A0D8               	btfss	status,0,c
  4367  001292  079B               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  4368  001294                     l4688:
  4369                           
  4370                           ; BSR set to: 0
  4371  001294  AF8B               	btfss	(___fldiv@b+2)& (0+255),7,b
  4372  001296  EF4F  F009         	goto	u5091
  4373  00129A  EF51  F009         	goto	u5090
  4374  00129E                     u5091:
  4375  00129E  EF35  F009         	goto	l4682
  4376  0012A2                     u5090:
  4377  0012A2                     
  4378                           ; BSR set to: 0
  4379  0012A2  0E00               	movlw	0
  4380  0012A4  6FA1               	movwf	___fldiv@aexp& (0+255),b
  4381  0012A6                     
  4382                           ; BSR set to: 0
  4383  0012A6  AF9F               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4384  0012A8  EF58  F009         	goto	u5101
  4385  0012AC  EF5A  F009         	goto	u5100
  4386  0012B0                     u5101:
  4387  0012B0  EF7E  F009         	goto	l992
  4388  0012B4                     u5100:
  4389  0012B4                     
  4390                           ; BSR set to: 0
  4391  0012B4  0EFF               	movlw	255
  4392  0012B6  159C               	andwf	___fldiv@grs& (0+255),w,b
  4393  0012B8  6F91               	movwf	??___fldiv& (0+255),b
  4394  0012BA  0EFF               	movlw	255
  4395  0012BC  159D               	andwf	(___fldiv@grs+1)& (0+255),w,b
  4396  0012BE  6F92               	movwf	(??___fldiv+1)& (0+255),b
  4397  0012C0  0EFF               	movlw	255
  4398  0012C2  159E               	andwf	(___fldiv@grs+2)& (0+255),w,b
  4399  0012C4  6F93               	movwf	(??___fldiv+2)& (0+255),b
  4400  0012C6  0E7F               	movlw	127
  4401  0012C8  159F               	andwf	(___fldiv@grs+3)& (0+255),w,b
  4402  0012CA  6F94               	movwf	(??___fldiv+3)& (0+255),b
  4403  0012CC  5191               	movf	??___fldiv& (0+255),w,b
  4404  0012CE  1192               	iorwf	(??___fldiv+1)& (0+255),w,b
  4405  0012D0  1193               	iorwf	(??___fldiv+2)& (0+255),w,b
  4406  0012D2  1194               	iorwf	(??___fldiv+3)& (0+255),w,b
  4407  0012D4  B4D8               	btfsc	status,2,c
  4408  0012D6  EF6F  F009         	goto	u5111
  4409  0012DA  EF71  F009         	goto	u5110
  4410  0012DE                     u5111:
  4411  0012DE  EF75  F009         	goto	l993
  4412  0012E2                     u5110:
  4413  0012E2                     l4696:
  4414                           
  4415                           ; BSR set to: 0
  4416  0012E2  0E01               	movlw	1
  4417  0012E4  6FA1               	movwf	___fldiv@aexp& (0+255),b
  4418  0012E6  EF7E  F009         	goto	l992
  4419  0012EA                     l993:
  4420                           
  4421                           ; BSR set to: 0
  4422  0012EA  A189               	btfss	___fldiv@b& (0+255),0,b
  4423  0012EC  EF7A  F009         	goto	u5121
  4424  0012F0  EF7C  F009         	goto	u5120
  4425  0012F4                     u5121:
  4426  0012F4  EF7E  F009         	goto	l992
  4427  0012F8                     u5120:
  4428  0012F8  EF71  F009         	goto	l4696
  4429  0012FC                     l992:
  4430                           
  4431                           ; BSR set to: 0
  4432  0012FC  51A1               	movf	___fldiv@aexp& (0+255),w,b
  4433  0012FE  B4D8               	btfsc	status,2,c
  4434  001300  EF84  F009         	goto	u5131
  4435  001304  EF86  F009         	goto	u5130
  4436  001308                     u5131:
  4437  001308  EFAA  F009         	goto	l4708
  4438  00130C                     u5130:
  4439  00130C                     
  4440                           ; BSR set to: 0
  4441  00130C  0E01               	movlw	1
  4442  00130E  2789               	addwf	___fldiv@b& (0+255),f,b
  4443  001310  0E00               	movlw	0
  4444  001312  238A               	addwfc	(___fldiv@b+1)& (0+255),f,b
  4445  001314  238B               	addwfc	(___fldiv@b+2)& (0+255),f,b
  4446  001316  238C               	addwfc	(___fldiv@b+3)& (0+255),f,b
  4447  001318                     
  4448                           ; BSR set to: 0
  4449  001318  A18C               	btfss	(___fldiv@b+3)& (0+255),0,b
  4450  00131A  EF91  F009         	goto	u5141
  4451  00131E  EF93  F009         	goto	u5140
  4452  001322                     u5141:
  4453  001322  EFAA  F009         	goto	l4708
  4454  001326                     u5140:
  4455  001326                     
  4456                           ; BSR set to: 0
  4457  001326  C089  F091         	movff	___fldiv@b,??___fldiv
  4458  00132A  C08A  F092         	movff	___fldiv@b+1,??___fldiv+1
  4459  00132E  C08B  F093         	movff	___fldiv@b+2,??___fldiv+2
  4460  001332  C08C  F094         	movff	___fldiv@b+3,??___fldiv+3
  4461  001336  3594               	rlcf	(??___fldiv+3)& (0+255),w,b
  4462  001338  3394               	rrcf	(??___fldiv+3)& (0+255),f,b
  4463  00133A  3393               	rrcf	(??___fldiv+2)& (0+255),f,b
  4464  00133C  3392               	rrcf	(??___fldiv+1)& (0+255),f,b
  4465  00133E  3391               	rrcf	??___fldiv& (0+255),f,b
  4466  001340  C091  F089         	movff	??___fldiv,___fldiv@b
  4467  001344  C092  F08A         	movff	??___fldiv+1,___fldiv@b+1
  4468  001348  C093  F08B         	movff	??___fldiv+2,___fldiv@b+2
  4469  00134C  C094  F08C         	movff	??___fldiv+3,___fldiv@b+3
  4470  001350                     
  4471                           ; BSR set to: 0
  4472  001350  4B9A               	infsnz	___fldiv@new_exp& (0+255),f,b
  4473  001352  2B9B               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  4474  001354                     l4708:
  4475                           
  4476                           ; BSR set to: 0
  4477  001354  BF9B               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  4478  001356  EFB5  F009         	goto	u5151
  4479  00135A  519B               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  4480  00135C  E108               	bnz	u5150
  4481  00135E  299A               	incf	___fldiv@new_exp& (0+255),w,b
  4482  001360  A0D8               	btfss	status,0,c
  4483  001362  EFB5  F009         	goto	u5151
  4484  001366  EFB7  F009         	goto	u5150
  4485  00136A                     u5151:
  4486  00136A  EFC2  F009         	goto	l4712
  4487  00136E                     u5150:
  4488  00136E                     
  4489                           ; BSR set to: 0
  4490  00136E  0E00               	movlw	0
  4491  001370  6F9B               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4492  001372  699A               	setf	___fldiv@new_exp& (0+255),b
  4493  001374  0E00               	movlw	0
  4494  001376  6F89               	movwf	___fldiv@b& (0+255),b
  4495  001378  0E00               	movlw	0
  4496  00137A  6F8A               	movwf	(___fldiv@b+1)& (0+255),b
  4497  00137C  0E00               	movlw	0
  4498  00137E  6F8B               	movwf	(___fldiv@b+2)& (0+255),b
  4499  001380  0E00               	movlw	0
  4500  001382  6F8C               	movwf	(___fldiv@b+3)& (0+255),b
  4501  001384                     l4712:
  4502                           
  4503                           ; BSR set to: 0
  4504  001384  BF9B               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  4505  001386  EFCF  F009         	goto	u5160
  4506  00138A  519B               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  4507  00138C  E106               	bnz	u5161
  4508  00138E  059A               	decf	___fldiv@new_exp& (0+255),w,b
  4509  001390  B0D8               	btfsc	status,0,c
  4510  001392  EFCD  F009         	goto	u5161
  4511  001396  EFCF  F009         	goto	u5160
  4512  00139A                     u5161:
  4513  00139A  EFDD  F009         	goto	l4716
  4514  00139E                     u5160:
  4515  00139E                     
  4516                           ; BSR set to: 0
  4517  00139E  0E00               	movlw	0
  4518  0013A0  6F9B               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4519  0013A2  0E00               	movlw	0
  4520  0013A4  6F9A               	movwf	___fldiv@new_exp& (0+255),b
  4521  0013A6  0E00               	movlw	0
  4522  0013A8  6F89               	movwf	___fldiv@b& (0+255),b
  4523  0013AA  0E00               	movlw	0
  4524  0013AC  6F8A               	movwf	(___fldiv@b+1)& (0+255),b
  4525  0013AE  0E00               	movlw	0
  4526  0013B0  6F8B               	movwf	(___fldiv@b+2)& (0+255),b
  4527  0013B2  0E00               	movlw	0
  4528  0013B4  6F8C               	movwf	(___fldiv@b+3)& (0+255),b
  4529  0013B6  0E00               	movlw	0
  4530  0013B8  6F99               	movwf	___fldiv@sign& (0+255),b
  4531  0013BA                     l4716:
  4532                           
  4533                           ; BSR set to: 0
  4534  0013BA  C09A  F0A0         	movff	___fldiv@new_exp,___fldiv@bexp
  4535  0013BE                     
  4536                           ; BSR set to: 0
  4537  0013BE  A1A0               	btfss	___fldiv@bexp& (0+255),0,b
  4538  0013C0  EFE4  F009         	goto	u5171
  4539  0013C4  EFE6  F009         	goto	u5170
  4540  0013C8                     u5171:
  4541  0013C8  EFE9  F009         	goto	l4722
  4542  0013CC                     u5170:
  4543  0013CC                     
  4544                           ; BSR set to: 0
  4545  0013CC  8F8B               	bsf	(___fldiv@b+2)& (0+255),7,b
  4546  0013CE  EFEA  F009         	goto	l4724
  4547  0013D2                     l4722:
  4548                           
  4549                           ; BSR set to: 0
  4550  0013D2  9F8B               	bcf	(___fldiv@b+2)& (0+255),7,b
  4551  0013D4                     l4724:
  4552                           
  4553                           ; BSR set to: 0
  4554  0013D4  90D8               	bcf	status,0,c
  4555  0013D6  31A0               	rrcf	___fldiv@bexp& (0+255),w,b
  4556  0013D8  6F8C               	movwf	(___fldiv@b+3)& (0+255),b
  4557  0013DA  EFA0  F008         	goto	l4638
  4558  0013DE                     l979:
  4559                           
  4560                           ; BSR set to: 0
  4561  0013DE  0012               	return		;funcret
  4562  0013E0                     __end_of___fldiv:
  4563                           	callstack 0
  4564                           
  4565 ;; *************** function _moverMotor *****************
  4566 ;; Defined at:
  4567 ;;		line 90 in file "./Seguidor.h"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;  PID             2   45[BANK0 ] int 
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;		None
  4572 ;; Return value:  Size  Location     Type
  4573 ;;                  1    wreg      void 
  4574 ;; Registers used:
  4575 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/0
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4581 ;;      Params:         0       2       0       0
  4582 ;;      Locals:         0       0       0       0
  4583 ;;      Temps:          0       0       0       0
  4584 ;;      Totals:         0       2       0       0
  4585 ;;Total ram usage:        2 bytes
  4586 ;; Hardware stack levels used: 1
  4587 ;; Hardware stack levels required when called: 7
  4588 ;; This function calls:
  4589 ;;		___fladd
  4590 ;;		___flmul
  4591 ;;		___fltol
  4592 ;;		___xxtofl
  4593 ;;		_lados
  4594 ;; This function is called by:
  4595 ;;		_setPID
  4596 ;;		_main
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           	psect	text11
  4601  002A66                     __ptext11:
  4602                           	callstack 0
  4603  002A66                     _moverMotor:
  4604                           	callstack 22
  4605  002A66                     
  4606                           ;./Seguidor.h: 90: void moverMotor(int PID);./Seguidor.h: 91: {;./Seguidor.h: 92:     if
      +                           (PID == 0) {
  4607  002A66  0100               	movlb	0	; () banked
  4608  002A68  518D               	movf	moverMotor@PID& (0+255),w,b
  4609  002A6A  118E               	iorwf	(moverMotor@PID+1)& (0+255),w,b
  4610  002A6C  A4D8               	btfss	status,2,c
  4611  002A6E  EF3B  F015         	goto	u5271
  4612  002A72  EF3D  F015         	goto	u5270
  4613  002A76                     u5271:
  4614  002A76  EF4E  F015         	goto	l331
  4615  002A7A                     u5270:
  4616  002A7A                     
  4617                           ; BSR set to: 0
  4618                           ;./Seguidor.h: 93:         lados('e', porcVelo);
  4619  002A7A  0E00               	movlw	0
  4620  002A7C  6F8C               	movwf	(lados@porcVelo+1)& (0+255),b
  4621  002A7E  0E14               	movlw	20
  4622  002A80  6F8B               	movwf	lados@porcVelo& (0+255),b
  4623  002A82  0E65               	movlw	101
  4624  002A84  EC61  F018         	call	_lados
  4625                           
  4626                           ;./Seguidor.h: 94:         lados('d', 1.10 * porcVelo);
  4627  002A88  0E00               	movlw	0
  4628  002A8A  0100               	movlb	0	; () banked
  4629  002A8C  6F8C               	movwf	(lados@porcVelo+1)& (0+255),b
  4630  002A8E  0E16               	movlw	22
  4631  002A90  6F8B               	movwf	lados@porcVelo& (0+255),b
  4632  002A92  0E64               	movlw	100
  4633  002A94  EC61  F018         	call	_lados
  4634                           
  4635                           ;./Seguidor.h: 95:     } else {
  4636  002A98  EF9F  F015         	goto	l333
  4637  002A9C                     l331:
  4638                           
  4639                           ; BSR set to: 0
  4640                           ;./Seguidor.h: 96:         PID_int = PID;
  4641  002A9C  C08D  F0EE         	movff	moverMotor@PID,_PID_int
  4642  002AA0  C08E  F0EF         	movff	moverMotor@PID+1,_PID_int+1
  4643  002AA4                     
  4644                           ; BSR set to: 0
  4645                           ;./Seguidor.h: 97:         lados('e', (porcVelo - PID_int));
  4646  002AA4  51EE               	movf	_PID_int& (0+255),w,b
  4647  002AA6  0814               	sublw	20
  4648  002AA8  6F8B               	movwf	lados@porcVelo& (0+255),b
  4649  002AAA  51EF               	movf	(_PID_int+1)& (0+255),w,b
  4650  002AAC  A0D8               	btfss	status,0,c
  4651  002AAE  2AE8               	incf	wreg,f,c
  4652  002AB0  0800               	sublw	0
  4653  002AB2  6F8C               	movwf	(lados@porcVelo+1)& (0+255),b
  4654  002AB4  0E65               	movlw	101
  4655  002AB6  EC61  F018         	call	_lados
  4656                           
  4657                           ;./Seguidor.h: 98:         lados('d', (porcVelo + 1.10 * PID_int));
  4658  002ABA  0E00               	movlw	0
  4659  002ABC  0100               	movlb	0	; () banked
  4660  002ABE  6F75               	movwf	___fladd@a& (0+255),b
  4661  002AC0  0E00               	movlw	0
  4662  002AC2  6F76               	movwf	(___fladd@a+1)& (0+255),b
  4663  002AC4  0EA0               	movlw	160
  4664  002AC6  6F77               	movwf	(___fladd@a+2)& (0+255),b
  4665  002AC8  0E41               	movlw	65
  4666  002ACA  6F78               	movwf	(___fladd@a+3)& (0+255),b
  4667  002ACC  0ECD               	movlw	205
  4668  002ACE  6E37               	movwf	___flmul@a^0,c
  4669  002AD0  0ECC               	movlw	204
  4670  002AD2  6E38               	movwf	(___flmul@a+1)^0,c
  4671  002AD4  0E8C               	movlw	140
  4672  002AD6  6E39               	movwf	(___flmul@a+2)^0,c
  4673  002AD8  0E3F               	movlw	63
  4674  002ADA  6E3A               	movwf	(___flmul@a+3)^0,c
  4675  002ADC  C0EE  F025         	movff	_PID_int,___xxtofl@val
  4676  002AE0  C0EF  F026         	movff	_PID_int+1,___xxtofl@val+1
  4677  002AE4  0E00               	movlw	0
  4678  002AE6  BE26               	btfsc	(___xxtofl@val+1)^0,7,c
  4679  002AE8  0EFF               	movlw	-1
  4680  002AEA  6E27               	movwf	(___xxtofl@val+2)^0,c
  4681  002AEC  6E28               	movwf	(___xxtofl@val+3)^0,c
  4682  002AEE  0E01               	movlw	1
  4683  002AF0  EC4E  F00F         	call	___xxtofl
  4684  002AF4  C025  F033         	movff	?___xxtofl,___flmul@b
  4685  002AF8  C026  F034         	movff	?___xxtofl+1,___flmul@b+1
  4686  002AFC  C027  F035         	movff	?___xxtofl+2,___flmul@b+2
  4687  002B00  C028  F036         	movff	?___xxtofl+3,___flmul@b+3
  4688  002B04  EC0C  F006         	call	___flmul	;wreg free
  4689  002B08  C033  F071         	movff	?___flmul,___fladd@b
  4690  002B0C  C034  F072         	movff	?___flmul+1,___fladd@b+1
  4691  002B10  C035  F073         	movff	?___flmul+2,___fladd@b+2
  4692  002B14  C036  F074         	movff	?___flmul+3,___fladd@b+3
  4693  002B18  EC72  F001         	call	___fladd	;wreg free
  4694  002B1C  C071  F081         	movff	?___fladd,___fltol@f1
  4695  002B20  C072  F082         	movff	?___fladd+1,___fltol@f1+1
  4696  002B24  C073  F083         	movff	?___fladd+2,___fltol@f1+2
  4697  002B28  C074  F084         	movff	?___fladd+3,___fltol@f1+3
  4698  002B2C  EC40  F013         	call	___fltol	;wreg free
  4699  002B30  C081  F08B         	movff	?___fltol,lados@porcVelo
  4700  002B34  C082  F08C         	movff	?___fltol+1,lados@porcVelo+1
  4701  002B38  0E64               	movlw	100
  4702  002B3A  EC61  F018         	call	_lados
  4703  002B3E                     l333:
  4704  002B3E  0012               	return		;funcret
  4705  002B40                     __end_of_moverMotor:
  4706                           	callstack 0
  4707                           
  4708 ;; *************** function _lados *****************
  4709 ;; Defined at:
  4710 ;;		line 74 in file "./Seguidor.h"
  4711 ;; Parameters:    Size  Location     Type
  4712 ;;  lado            1    wreg     unsigned char 
  4713 ;;  porcVelo        2   43[BANK0 ] int 
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;  lado            1   58[COMRAM] unsigned char 
  4716 ;; Return value:  Size  Location     Type
  4717 ;;                  1    wreg      void 
  4718 ;; Registers used:
  4719 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4725 ;;      Params:         0       2       0       0
  4726 ;;      Locals:         1       0       0       0
  4727 ;;      Temps:          0       0       0       0
  4728 ;;      Totals:         1       2       0       0
  4729 ;;Total ram usage:        3 bytes
  4730 ;; Hardware stack levels used: 1
  4731 ;; Hardware stack levels required when called: 6
  4732 ;; This function calls:
  4733 ;;		_setDutyPWM0
  4734 ;;		_setDutyPWM2
  4735 ;;		_setDutyPWM4
  4736 ;;		_setDutyPWM6
  4737 ;; This function is called by:
  4738 ;;		_moverMotor
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           
  4742                           	psect	text12
  4743  0030C2                     __ptext12:
  4744                           	callstack 0
  4745  0030C2                     _lados:
  4746                           	callstack 22
  4747                           
  4748                           ;incstack = 0
  4749                           ;lados@lado stored from wreg
  4750  0030C2  6E3B               	movwf	lados@lado^0,c
  4751  0030C4                     
  4752                           ;./Seguidor.h: 75:     PORTBbits.RB6 = 1;
  4753  0030C4  8C81               	bsf	129,6,c	;volatile
  4754                           
  4755                           ;./Seguidor.h: 76:     PORTBbits.RB7 = 1;
  4756  0030C6  8E81               	bsf	129,7,c	;volatile
  4757  0030C8                     
  4758                           ;./Seguidor.h: 79:     if (lado == 'e') {
  4759  0030C8  0E65               	movlw	101
  4760  0030CA  183B               	xorwf	lados@lado^0,w,c
  4761  0030CC  A4D8               	btfss	status,2,c
  4762  0030CE  EF6B  F018         	goto	u2571
  4763  0030D2  EF6D  F018         	goto	u2570
  4764  0030D6                     u2571:
  4765  0030D6  EF79  F018         	goto	l2918
  4766  0030DA                     u2570:
  4767  0030DA                     
  4768                           ;./Seguidor.h: 80:         setDutyPWM0(porcVelo);
  4769  0030DA  C08B  F019         	movff	lados@porcVelo,setDutyPWM0@porcVelo
  4770  0030DE  C08C  F01A         	movff	lados@porcVelo+1,setDutyPWM0@porcVelo+1
  4771  0030E2  EC60  F019         	call	_setDutyPWM0	;wreg free
  4772                           
  4773                           ;./Seguidor.h: 81:         setDutyPWM6(0);
  4774  0030E6  0E00               	movlw	0
  4775  0030E8  6E1A               	movwf	(setDutyPWM6@porcVelo+1)^0,c
  4776  0030EA  0E00               	movlw	0
  4777  0030EC  6E19               	movwf	setDutyPWM6@porcVelo^0,c
  4778  0030EE  EC27  F019         	call	_setDutyPWM6	;wreg free
  4779  0030F2                     l2918:
  4780                           
  4781                           ;./Seguidor.h: 83:     if (lado == 'd') {
  4782  0030F2  0E64               	movlw	100
  4783  0030F4  183B               	xorwf	lados@lado^0,w,c
  4784  0030F6  A4D8               	btfss	status,2,c
  4785  0030F8  EF80  F018         	goto	u2581
  4786  0030FC  EF82  F018         	goto	u2580
  4787  003100                     u2581:
  4788  003100  EF8E  F018         	goto	l328
  4789  003104                     u2580:
  4790  003104                     
  4791                           ;./Seguidor.h: 84:         setDutyPWM2(porcVelo);
  4792  003104  C08B  F019         	movff	lados@porcVelo,setDutyPWM2@porcVelo
  4793  003108  C08C  F01A         	movff	lados@porcVelo+1,setDutyPWM2@porcVelo+1
  4794  00310C  EC4D  F019         	call	_setDutyPWM2	;wreg free
  4795                           
  4796                           ;./Seguidor.h: 85:         setDutyPWM4(0);
  4797  003110  0E00               	movlw	0
  4798  003112  6E1A               	movwf	(setDutyPWM4@porcVelo+1)^0,c
  4799  003114  0E00               	movlw	0
  4800  003116  6E19               	movwf	setDutyPWM4@porcVelo^0,c
  4801  003118  EC3A  F019         	call	_setDutyPWM4	;wreg free
  4802  00311C                     l328:
  4803  00311C  0012               	return		;funcret
  4804  00311E                     __end_of_lados:
  4805                           	callstack 0
  4806                           
  4807 ;; *************** function _setDutyPWM6 *****************
  4808 ;; Defined at:
  4809 ;;		line 41 in file "./PWM.h"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;  porcVelo        2   24[COMRAM] unsigned int 
  4812 ;; Auto vars:     Size  Location     Type
  4813 ;;  velo            2   26[COMRAM] unsigned int 
  4814 ;; Return value:  Size  Location     Type
  4815 ;;                  1    wreg      void 
  4816 ;; Registers used:
  4817 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4818 ;; Tracked objects:
  4819 ;;		On entry : 0/0
  4820 ;;		On exit  : 0/0
  4821 ;;		Unchanged: 0/0
  4822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4823 ;;      Params:         2       0       0       0
  4824 ;;      Locals:         2       0       0       0
  4825 ;;      Temps:          0       0       0       0
  4826 ;;      Totals:         4       0       0       0
  4827 ;;Total ram usage:        4 bytes
  4828 ;; Hardware stack levels used: 1
  4829 ;; Hardware stack levels required when called: 5
  4830 ;; This function calls:
  4831 ;;		___wmul
  4832 ;; This function is called by:
  4833 ;;		_testeMotores
  4834 ;;		_lados
  4835 ;;		_main
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           	psect	text13
  4840  00324E                     __ptext13:
  4841                           	callstack 0
  4842  00324E                     _setDutyPWM6:
  4843                           	callstack 24
  4844  00324E                     
  4845                           ;./PWM.h: 42:     unsigned int velo = porcVelo*6;
  4846  00324E  C019  F013         	movff	setDutyPWM6@porcVelo,___wmul@multiplier
  4847  003252  C01A  F014         	movff	setDutyPWM6@porcVelo+1,___wmul@multiplier+1
  4848  003256  0E00               	movlw	0
  4849  003258  6E16               	movwf	(___wmul@multiplicand+1)^0,c
  4850  00325A  0E06               	movlw	6
  4851  00325C  6E15               	movwf	___wmul@multiplicand^0,c
  4852  00325E  EC73  F019         	call	___wmul	;wreg free
  4853  003262  C013  F01B         	movff	?___wmul,setDutyPWM6@velo
  4854  003266  C014  F01C         	movff	?___wmul+1,setDutyPWM6@velo+1
  4855  00326A                     
  4856                           ;./PWM.h: 43:     PDC3L = velo & 0b11111111;
  4857  00326A  C01B  FF73         	movff	setDutyPWM6@velo,3955	;volatile
  4858  00326E                     
  4859                           ;./PWM.h: 44:     PDC3H = (velo >> 8) & 0b11111111;
  4860  00326E  501C               	movf	(setDutyPWM6@velo+1)^0,w,c
  4861  003270  6E72               	movwf	114,c	;volatile
  4862  003272  0012               	return		;funcret
  4863  003274                     __end_of_setDutyPWM6:
  4864                           	callstack 0
  4865                           
  4866 ;; *************** function _setDutyPWM4 *****************
  4867 ;; Defined at:
  4868 ;;		line 35 in file "./PWM.h"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;  porcVelo        2   24[COMRAM] unsigned int 
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;  velo            2   26[COMRAM] unsigned int 
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      void 
  4875 ;; Registers used:
  4876 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4882 ;;      Params:         2       0       0       0
  4883 ;;      Locals:         2       0       0       0
  4884 ;;      Temps:          0       0       0       0
  4885 ;;      Totals:         4       0       0       0
  4886 ;;Total ram usage:        4 bytes
  4887 ;; Hardware stack levels used: 1
  4888 ;; Hardware stack levels required when called: 5
  4889 ;; This function calls:
  4890 ;;		___wmul
  4891 ;; This function is called by:
  4892 ;;		_testeMotores
  4893 ;;		_lados
  4894 ;;		_main
  4895 ;; This function uses a non-reentrant model
  4896 ;;
  4897                           
  4898                           	psect	text14
  4899  003274                     __ptext14:
  4900                           	callstack 0
  4901  003274                     _setDutyPWM4:
  4902                           	callstack 24
  4903  003274                     
  4904                           ;./PWM.h: 36:     unsigned int velo = porcVelo*6;
  4905  003274  C019  F013         	movff	setDutyPWM4@porcVelo,___wmul@multiplier
  4906  003278  C01A  F014         	movff	setDutyPWM4@porcVelo+1,___wmul@multiplier+1
  4907  00327C  0E00               	movlw	0
  4908  00327E  6E16               	movwf	(___wmul@multiplicand+1)^0,c
  4909  003280  0E06               	movlw	6
  4910  003282  6E15               	movwf	___wmul@multiplicand^0,c
  4911  003284  EC73  F019         	call	___wmul	;wreg free
  4912  003288  C013  F01B         	movff	?___wmul,setDutyPWM4@velo
  4913  00328C  C014  F01C         	movff	?___wmul+1,setDutyPWM4@velo+1
  4914  003290                     
  4915                           ;./PWM.h: 37:     PDC2L = velo & 0b11111111;
  4916  003290  C01B  FF75         	movff	setDutyPWM4@velo,3957	;volatile
  4917  003294                     
  4918                           ;./PWM.h: 38:     PDC2H = (velo >> 8) & 0b11111111;
  4919  003294  501C               	movf	(setDutyPWM4@velo+1)^0,w,c
  4920  003296  6E74               	movwf	116,c	;volatile
  4921  003298  0012               	return		;funcret
  4922  00329A                     __end_of_setDutyPWM4:
  4923                           	callstack 0
  4924                           
  4925 ;; *************** function _setDutyPWM2 *****************
  4926 ;; Defined at:
  4927 ;;		line 29 in file "./PWM.h"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;  porcVelo        2   24[COMRAM] unsigned int 
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;  velo            2   26[COMRAM] unsigned int 
  4932 ;; Return value:  Size  Location     Type
  4933 ;;                  1    wreg      void 
  4934 ;; Registers used:
  4935 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4936 ;; Tracked objects:
  4937 ;;		On entry : 0/0
  4938 ;;		On exit  : 0/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4941 ;;      Params:         2       0       0       0
  4942 ;;      Locals:         2       0       0       0
  4943 ;;      Temps:          0       0       0       0
  4944 ;;      Totals:         4       0       0       0
  4945 ;;Total ram usage:        4 bytes
  4946 ;; Hardware stack levels used: 1
  4947 ;; Hardware stack levels required when called: 5
  4948 ;; This function calls:
  4949 ;;		___wmul
  4950 ;; This function is called by:
  4951 ;;		_testeMotores
  4952 ;;		_lados
  4953 ;;		_main
  4954 ;; This function uses a non-reentrant model
  4955 ;;
  4956                           
  4957                           	psect	text15
  4958  00329A                     __ptext15:
  4959                           	callstack 0
  4960  00329A                     _setDutyPWM2:
  4961                           	callstack 24
  4962  00329A                     
  4963                           ;./PWM.h: 30:     unsigned int velo = porcVelo*6;
  4964  00329A  C019  F013         	movff	setDutyPWM2@porcVelo,___wmul@multiplier
  4965  00329E  C01A  F014         	movff	setDutyPWM2@porcVelo+1,___wmul@multiplier+1
  4966  0032A2  0E00               	movlw	0
  4967  0032A4  6E16               	movwf	(___wmul@multiplicand+1)^0,c
  4968  0032A6  0E06               	movlw	6
  4969  0032A8  6E15               	movwf	___wmul@multiplicand^0,c
  4970  0032AA  EC73  F019         	call	___wmul	;wreg free
  4971  0032AE  C013  F01B         	movff	?___wmul,setDutyPWM2@velo
  4972  0032B2  C014  F01C         	movff	?___wmul+1,setDutyPWM2@velo+1
  4973  0032B6                     
  4974                           ;./PWM.h: 31:     PDC1L = velo & 0b11111111;
  4975  0032B6  C01B  FF77         	movff	setDutyPWM2@velo,3959	;volatile
  4976  0032BA                     
  4977                           ;./PWM.h: 32:     PDC1H = (velo >> 8) & 0b11111111;
  4978  0032BA  501C               	movf	(setDutyPWM2@velo+1)^0,w,c
  4979  0032BC  6E76               	movwf	118,c	;volatile
  4980  0032BE  0012               	return		;funcret
  4981  0032C0                     __end_of_setDutyPWM2:
  4982                           	callstack 0
  4983                           
  4984 ;; *************** function _setDutyPWM0 *****************
  4985 ;; Defined at:
  4986 ;;		line 23 in file "./PWM.h"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;  porcVelo        2   24[COMRAM] unsigned int 
  4989 ;; Auto vars:     Size  Location     Type
  4990 ;;  velo            2   26[COMRAM] unsigned int 
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  1    wreg      void 
  4993 ;; Registers used:
  4994 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4995 ;; Tracked objects:
  4996 ;;		On entry : 0/0
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5000 ;;      Params:         2       0       0       0
  5001 ;;      Locals:         2       0       0       0
  5002 ;;      Temps:          0       0       0       0
  5003 ;;      Totals:         4       0       0       0
  5004 ;;Total ram usage:        4 bytes
  5005 ;; Hardware stack levels used: 1
  5006 ;; Hardware stack levels required when called: 5
  5007 ;; This function calls:
  5008 ;;		___wmul
  5009 ;; This function is called by:
  5010 ;;		_testeMotores
  5011 ;;		_lados
  5012 ;;		_main
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016                           	psect	text16
  5017  0032C0                     __ptext16:
  5018                           	callstack 0
  5019  0032C0                     _setDutyPWM0:
  5020                           	callstack 24
  5021  0032C0                     
  5022                           ;./PWM.h: 24:     unsigned int velo = porcVelo*6;
  5023  0032C0  C019  F013         	movff	setDutyPWM0@porcVelo,___wmul@multiplier
  5024  0032C4  C01A  F014         	movff	setDutyPWM0@porcVelo+1,___wmul@multiplier+1
  5025  0032C8  0E00               	movlw	0
  5026  0032CA  6E16               	movwf	(___wmul@multiplicand+1)^0,c
  5027  0032CC  0E06               	movlw	6
  5028  0032CE  6E15               	movwf	___wmul@multiplicand^0,c
  5029  0032D0  EC73  F019         	call	___wmul	;wreg free
  5030  0032D4  C013  F01B         	movff	?___wmul,setDutyPWM0@velo
  5031  0032D8  C014  F01C         	movff	?___wmul+1,setDutyPWM0@velo+1
  5032  0032DC                     
  5033                           ;./PWM.h: 25:     PDC0L = velo & 0b11111111;
  5034  0032DC  C01B  FF79         	movff	setDutyPWM0@velo,3961	;volatile
  5035  0032E0                     
  5036                           ;./PWM.h: 26:     PDC0H = (velo >> 8) & 0b11111111;
  5037  0032E0  501C               	movf	(setDutyPWM0@velo+1)^0,w,c
  5038  0032E2  6E78               	movwf	120,c	;volatile
  5039  0032E4  0012               	return		;funcret
  5040  0032E6                     __end_of_setDutyPWM0:
  5041                           	callstack 0
  5042                           
  5043 ;; *************** function ___wmul *****************
  5044 ;; Defined at:
  5045 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;  multiplier      2   18[COMRAM] unsigned int 
  5048 ;;  multiplicand    2   20[COMRAM] unsigned int 
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;  product         2   22[COMRAM] unsigned int 
  5051 ;; Return value:  Size  Location     Type
  5052 ;;                  2   18[COMRAM] unsigned int 
  5053 ;; Registers used:
  5054 ;;		wreg, status,2, status,0, prodl, prodh
  5055 ;; Tracked objects:
  5056 ;;		On entry : 0/0
  5057 ;;		On exit  : 0/0
  5058 ;;		Unchanged: 0/0
  5059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5060 ;;      Params:         4       0       0       0
  5061 ;;      Locals:         2       0       0       0
  5062 ;;      Temps:          0       0       0       0
  5063 ;;      Totals:         6       0       0       0
  5064 ;;Total ram usage:        6 bytes
  5065 ;; Hardware stack levels used: 1
  5066 ;; Hardware stack levels required when called: 4
  5067 ;; This function calls:
  5068 ;;		Nothing
  5069 ;; This function is called by:
  5070 ;;		_setDutyPWM0
  5071 ;;		_setDutyPWM2
  5072 ;;		_setDutyPWM4
  5073 ;;		_setDutyPWM6
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           	psect	text17
  5078  0032E6                     __ptext17:
  5079                           	callstack 0
  5080  0032E6                     ___wmul:
  5081                           	callstack 24
  5082  0032E6  5013               	movf	___wmul@multiplier^0,w,c
  5083  0032E8  0215               	mulwf	___wmul@multiplicand^0,c
  5084  0032EA  CFF3 F017          	movff	prodl,___wmul@product
  5085  0032EE  CFF4 F018          	movff	prodh,___wmul@product+1
  5086  0032F2  5013               	movf	___wmul@multiplier^0,w,c
  5087  0032F4  0216               	mulwf	(___wmul@multiplicand+1)^0,c
  5088  0032F6  50F3               	movf	243,w,c
  5089  0032F8  2618               	addwf	(___wmul@product+1)^0,f,c
  5090  0032FA  5014               	movf	(___wmul@multiplier+1)^0,w,c
  5091  0032FC  0215               	mulwf	___wmul@multiplicand^0,c
  5092  0032FE  50F3               	movf	243,w,c
  5093  003300  2618               	addwf	(___wmul@product+1)^0,f,c
  5094  003302  C017  F013         	movff	___wmul@product,?___wmul
  5095  003306  C018  F014         	movff	___wmul@product+1,?___wmul+1
  5096  00330A  0012               	return		;funcret
  5097  00330C                     __end_of___wmul:
  5098                           	callstack 0
  5099                           
  5100 ;; *************** function _configDA *****************
  5101 ;; Defined at:
  5102 ;;		line 37 in file "./Seguidor.h"
  5103 ;; Parameters:    Size  Location     Type
  5104 ;;		None
  5105 ;; Auto vars:     Size  Location     Type
  5106 ;;  i               2   52[COMRAM] int 
  5107 ;; Return value:  Size  Location     Type
  5108 ;;                  1    wreg      void 
  5109 ;; Registers used:
  5110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5111 ;; Tracked objects:
  5112 ;;		On entry : 0/0
  5113 ;;		On exit  : 0/0
  5114 ;;		Unchanged: 0/0
  5115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5116 ;;      Params:         0       0       0       0
  5117 ;;      Locals:         2       0       0       0
  5118 ;;      Temps:          2       0       0       0
  5119 ;;      Totals:         4       0       0       0
  5120 ;;Total ram usage:        4 bytes
  5121 ;; Hardware stack levels used: 1
  5122 ;; Hardware stack levels required when called: 6
  5123 ;; This function calls:
  5124 ;;		___flge
  5125 ;;		___xxtofl
  5126 ;;		_getAD_ANbit
  5127 ;; This function is called by:
  5128 ;;		_setPID
  5129 ;;		_main
  5130 ;; This function uses a non-reentrant model
  5131 ;;
  5132                           
  5133                           	psect	text18
  5134  002202                     __ptext18:
  5135                           	callstack 0
  5136  002202                     _configDA:
  5137                           	callstack 23
  5138  002202                     
  5139                           ;./Seguidor.h: 39:     int i;;./Seguidor.h: 40:     for (i = 1; i < 6; i++)
  5140  002202  0E00               	movlw	0
  5141  002204  6E36               	movwf	(configDA@i+1)^0,c
  5142  002206  0E01               	movlw	1
  5143  002208  6E35               	movwf	configDA@i^0,c
  5144  00220A                     l4768:
  5145                           
  5146                           ;./Seguidor.h: 41:     {;./Seguidor.h: 42:         sensor[i] = getAD_ANbit(i);
  5147  00220A  C035  F021         	movff	configDA@i,getAD_ANbit@porta
  5148  00220E  C036  F022         	movff	configDA@i+1,getAD_ANbit@porta+1
  5149  002212  EC46  F014         	call	_getAD_ANbit	;wreg free
  5150  002216  C021  F025         	movff	?_getAD_ANbit,___xxtofl@val
  5151  00221A  C022  F026         	movff	?_getAD_ANbit+1,___xxtofl@val+1
  5152  00221E  0E00               	movlw	0
  5153  002220  BE26               	btfsc	(___xxtofl@val+1)^0,7,c
  5154  002222  0EFF               	movlw	-1
  5155  002224  6E27               	movwf	(___xxtofl@val+2)^0,c
  5156  002226  6E28               	movwf	(___xxtofl@val+3)^0,c
  5157  002228  0E01               	movlw	1
  5158  00222A  EC4E  F00F         	call	___xxtofl
  5159  00222E  0E14               	movlw	low _sensor
  5160  002230  6E33               	movwf	??_configDA^0,c
  5161  002232  0E01               	movlw	high _sensor
  5162  002234  6E34               	movwf	(??_configDA+1)^0,c
  5163  002236  90D8               	bcf	status,0,c
  5164  002238  3435               	rlcf	configDA@i^0,w,c
  5165  00223A  6ED9               	movwf	fsr2l,c
  5166  00223C  3436               	rlcf	(configDA@i+1)^0,w,c
  5167  00223E  6EDA               	movwf	fsr2h,c
  5168  002240  90D8               	bcf	status,0,c
  5169  002242  36D9               	rlcf	fsr2l,f,c
  5170  002244  36DA               	rlcf	fsr2h,f,c
  5171  002246  5033               	movf	??_configDA^0,w,c
  5172  002248  26D9               	addwf	fsr2l,f,c
  5173  00224A  5034               	movf	(??_configDA+1)^0,w,c
  5174  00224C  22DA               	addwfc	fsr2h,f,c
  5175  00224E  C025  FFDE         	movff	?___xxtofl,postinc2
  5176  002252  C026  FFDE         	movff	?___xxtofl+1,postinc2
  5177  002256  C027  FFDE         	movff	?___xxtofl+2,postinc2
  5178  00225A  C028  FFDE         	movff	?___xxtofl+3,postinc2
  5179                           
  5180                           ;./Seguidor.h: 43:         if (sensor[i] > 860)
  5181  00225E  0E00               	movlw	0
  5182  002260  6E13               	movwf	___flge@ff1^0,c
  5183  002262  0E00               	movlw	0
  5184  002264  6E14               	movwf	(___flge@ff1+1)^0,c
  5185  002266  0E57               	movlw	87
  5186  002268  6E15               	movwf	(___flge@ff1+2)^0,c
  5187  00226A  0E44               	movlw	68
  5188  00226C  6E16               	movwf	(___flge@ff1+3)^0,c
  5189  00226E  0E14               	movlw	low _sensor
  5190  002270  6E33               	movwf	??_configDA^0,c
  5191  002272  0E01               	movlw	high _sensor
  5192  002274  6E34               	movwf	(??_configDA+1)^0,c
  5193  002276  90D8               	bcf	status,0,c
  5194  002278  3435               	rlcf	configDA@i^0,w,c
  5195  00227A  6ED9               	movwf	fsr2l,c
  5196  00227C  3436               	rlcf	(configDA@i+1)^0,w,c
  5197  00227E  6EDA               	movwf	fsr2h,c
  5198  002280  90D8               	bcf	status,0,c
  5199  002282  36D9               	rlcf	fsr2l,f,c
  5200  002284  36DA               	rlcf	fsr2h,f,c
  5201  002286  5033               	movf	??_configDA^0,w,c
  5202  002288  26D9               	addwf	fsr2l,f,c
  5203  00228A  5034               	movf	(??_configDA+1)^0,w,c
  5204  00228C  22DA               	addwfc	fsr2h,f,c
  5205  00228E  CFDE F017          	movff	postinc2,___flge@ff2
  5206  002292  CFDE F018          	movff	postinc2,___flge@ff2+1
  5207  002296  CFDE F019          	movff	postinc2,___flge@ff2+2
  5208  00229A  CFDE F01A          	movff	postinc2,___flge@ff2+3
  5209  00229E  ECC4  F013         	call	___flge	;wreg free
  5210  0022A2  B0D8               	btfsc	status,0,c
  5211  0022A4  EF56  F011         	goto	u5221
  5212  0022A8  EF58  F011         	goto	u5220
  5213  0022AC                     u5221:
  5214  0022AC  EF72  F011         	goto	l4772
  5215  0022B0                     u5220:
  5216  0022B0                     
  5217                           ;./Seguidor.h: 44:         {;./Seguidor.h: 45:             leitura[i] = 1;
  5218  0022B0  0E00               	movlw	low _leitura
  5219  0022B2  6E33               	movwf	??_configDA^0,c
  5220  0022B4  0E01               	movlw	high _leitura
  5221  0022B6  6E34               	movwf	(??_configDA+1)^0,c
  5222  0022B8  90D8               	bcf	status,0,c
  5223  0022BA  3435               	rlcf	configDA@i^0,w,c
  5224  0022BC  6ED9               	movwf	fsr2l,c
  5225  0022BE  3436               	rlcf	(configDA@i+1)^0,w,c
  5226  0022C0  6EDA               	movwf	fsr2h,c
  5227  0022C2  90D8               	bcf	status,0,c
  5228  0022C4  36D9               	rlcf	fsr2l,f,c
  5229  0022C6  36DA               	rlcf	fsr2h,f,c
  5230  0022C8  5033               	movf	??_configDA^0,w,c
  5231  0022CA  26D9               	addwf	fsr2l,f,c
  5232  0022CC  5034               	movf	(??_configDA+1)^0,w,c
  5233  0022CE  22DA               	addwfc	fsr2h,f,c
  5234  0022D0  0E00               	movlw	0
  5235  0022D2  6EDE               	movwf	postinc2,c
  5236  0022D4  0E00               	movlw	0
  5237  0022D6  6EDE               	movwf	postinc2,c
  5238  0022D8  0E80               	movlw	128
  5239  0022DA  6EDE               	movwf	postinc2,c
  5240  0022DC  0E3F               	movlw	63
  5241  0022DE  6EDD               	movwf	postdec2,c
  5242                           
  5243                           ;./Seguidor.h: 46:         } else {
  5244  0022E0  EF8A  F011         	goto	l4774
  5245  0022E4                     l4772:
  5246                           
  5247                           ;./Seguidor.h: 47:             leitura[i] = 0;
  5248  0022E4  0E00               	movlw	low _leitura
  5249  0022E6  6E33               	movwf	??_configDA^0,c
  5250  0022E8  0E01               	movlw	high _leitura
  5251  0022EA  6E34               	movwf	(??_configDA+1)^0,c
  5252  0022EC  90D8               	bcf	status,0,c
  5253  0022EE  3435               	rlcf	configDA@i^0,w,c
  5254  0022F0  6ED9               	movwf	fsr2l,c
  5255  0022F2  3436               	rlcf	(configDA@i+1)^0,w,c
  5256  0022F4  6EDA               	movwf	fsr2h,c
  5257  0022F6  90D8               	bcf	status,0,c
  5258  0022F8  36D9               	rlcf	fsr2l,f,c
  5259  0022FA  36DA               	rlcf	fsr2h,f,c
  5260  0022FC  5033               	movf	??_configDA^0,w,c
  5261  0022FE  26D9               	addwf	fsr2l,f,c
  5262  002300  5034               	movf	(??_configDA+1)^0,w,c
  5263  002302  22DA               	addwfc	fsr2h,f,c
  5264  002304  0E00               	movlw	0
  5265  002306  6EDE               	movwf	postinc2,c
  5266  002308  0E00               	movlw	0
  5267  00230A  6EDE               	movwf	postinc2,c
  5268  00230C  0E00               	movlw	0
  5269  00230E  6EDE               	movwf	postinc2,c
  5270  002310  0E00               	movlw	0
  5271  002312  6EDD               	movwf	postdec2,c
  5272  002314                     l4774:
  5273                           
  5274                           ;./Seguidor.h: 49:     }
  5275  002314  4A35               	infsnz	configDA@i^0,f,c
  5276  002316  2A36               	incf	(configDA@i+1)^0,f,c
  5277  002318  BE36               	btfsc	(configDA@i+1)^0,7,c
  5278  00231A  EF98  F011         	goto	u5231
  5279  00231E  5036               	movf	(configDA@i+1)^0,w,c
  5280  002320  E109               	bnz	u5230
  5281  002322  0E06               	movlw	6
  5282  002324  5C35               	subwf	configDA@i^0,w,c
  5283  002326  A0D8               	btfss	status,0,c
  5284  002328  EF98  F011         	goto	u5231
  5285  00232C  EF9A  F011         	goto	u5230
  5286  002330                     u5231:
  5287  002330  EF05  F011         	goto	l4768
  5288  002334                     u5230:
  5289  002334  0012               	return		;funcret
  5290  002336                     __end_of_configDA:
  5291                           	callstack 0
  5292                           
  5293 ;; *************** function _getAD_ANbit *****************
  5294 ;; Defined at:
  5295 ;;		line 122 in file "./ADC.h"
  5296 ;; Parameters:    Size  Location     Type
  5297 ;;  porta           2   32[COMRAM] int 
  5298 ;; Auto vars:     Size  Location     Type
  5299 ;;  ANread          2   34[COMRAM] int 
  5300 ;; Return value:  Size  Location     Type
  5301 ;;                  2   32[COMRAM] int 
  5302 ;; Registers used:
  5303 ;;		wreg, status,2, status,0, cstack
  5304 ;; Tracked objects:
  5305 ;;		On entry : 0/0
  5306 ;;		On exit  : 0/0
  5307 ;;		Unchanged: 0/0
  5308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5309 ;;      Params:         2       0       0       0
  5310 ;;      Locals:         2       0       0       0
  5311 ;;      Temps:          0       0       0       0
  5312 ;;      Totals:         4       0       0       0
  5313 ;;Total ram usage:        4 bytes
  5314 ;; Hardware stack levels used: 1
  5315 ;; Hardware stack levels required when called: 5
  5316 ;; This function calls:
  5317 ;;		_bitExtract
  5318 ;;		_readAD_ANbit
  5319 ;; This function is called by:
  5320 ;;		_testeADbit
  5321 ;;		_configDA
  5322 ;; This function uses a non-reentrant model
  5323 ;;
  5324                           
  5325                           	psect	text19
  5326  00288C                     __ptext19:
  5327                           	callstack 0
  5328  00288C                     _getAD_ANbit:
  5329                           	callstack 24
  5330  00288C                     
  5331                           ;./ADC.h: 124:     ADCON0bits.ACMOD = bitExtract(porta, 2, 0);
  5332  00288C  C021  F013         	movff	getAD_ANbit@porta,bitExtract@numero
  5333  002890  C022  F014         	movff	getAD_ANbit@porta+1,bitExtract@numero+1
  5334  002894  0E00               	movlw	0
  5335  002896  6E16               	movwf	(bitExtract@k+1)^0,c
  5336  002898  0E02               	movlw	2
  5337  00289A  6E15               	movwf	bitExtract@k^0,c
  5338  00289C  0E00               	movlw	0
  5339  00289E  6E18               	movwf	(bitExtract@posicao+1)^0,c
  5340  0028A0  0E00               	movlw	0
  5341  0028A2  6E17               	movwf	bitExtract@posicao^0,c
  5342  0028A4  EC8F  F018         	call	_bitExtract	;wreg free
  5343  0028A8  4613               	rlncf	?_bitExtract^0,f,c
  5344  0028AA  4613               	rlncf	?_bitExtract^0,f,c
  5345  0028AC  50C2               	movf	194,w,c	;volatile
  5346  0028AE  1813               	xorwf	?_bitExtract^0,w,c
  5347  0028B0  0BF3               	andlw	-13
  5348  0028B2  1813               	xorwf	?_bitExtract^0,w,c
  5349  0028B4  6EC2               	movwf	194,c	;volatile
  5350                           
  5351                           ;./ADC.h: 126:     ADCHSbits.GASEL0 = bitExtract(porta, 1, 2);
  5352  0028B6  C021  F013         	movff	getAD_ANbit@porta,bitExtract@numero
  5353  0028BA  C022  F014         	movff	getAD_ANbit@porta+1,bitExtract@numero+1
  5354  0028BE  0E00               	movlw	0
  5355  0028C0  6E16               	movwf	(bitExtract@k+1)^0,c
  5356  0028C2  0E01               	movlw	1
  5357  0028C4  6E15               	movwf	bitExtract@k^0,c
  5358  0028C6  0E00               	movlw	0
  5359  0028C8  6E18               	movwf	(bitExtract@posicao+1)^0,c
  5360  0028CA  0E02               	movlw	2
  5361  0028CC  6E17               	movwf	bitExtract@posicao^0,c
  5362  0028CE  EC8F  F018         	call	_bitExtract	;wreg free
  5363  0028D2  5099               	movf	153,w,c	;volatile
  5364  0028D4  1813               	xorwf	?_bitExtract^0,w,c
  5365  0028D6  0BFE               	andlw	-2
  5366  0028D8  1813               	xorwf	?_bitExtract^0,w,c
  5367  0028DA  6E99               	movwf	153,c	;volatile
  5368                           
  5369                           ;./ADC.h: 127:     ADCHSbits.GBSEL0 = bitExtract(porta, 1, 2);
  5370  0028DC  C021  F013         	movff	getAD_ANbit@porta,bitExtract@numero
  5371  0028E0  C022  F014         	movff	getAD_ANbit@porta+1,bitExtract@numero+1
  5372  0028E4  0E00               	movlw	0
  5373  0028E6  6E16               	movwf	(bitExtract@k+1)^0,c
  5374  0028E8  0E01               	movlw	1
  5375  0028EA  6E15               	movwf	bitExtract@k^0,c
  5376  0028EC  0E00               	movlw	0
  5377  0028EE  6E18               	movwf	(bitExtract@posicao+1)^0,c
  5378  0028F0  0E02               	movlw	2
  5379  0028F2  6E17               	movwf	bitExtract@posicao^0,c
  5380  0028F4  EC8F  F018         	call	_bitExtract	;wreg free
  5381  0028F8  3A13               	swapf	?_bitExtract^0,f,c
  5382  0028FA  5099               	movf	153,w,c	;volatile
  5383  0028FC  1813               	xorwf	?_bitExtract^0,w,c
  5384  0028FE  0BEF               	andlw	-17
  5385  002900  1813               	xorwf	?_bitExtract^0,w,c
  5386  002902  6E99               	movwf	153,c	;volatile
  5387                           
  5388                           ;./ADC.h: 128:     ADCHSbits.GCSEL0 = bitExtract(porta, 1, 2);
  5389  002904  C021  F013         	movff	getAD_ANbit@porta,bitExtract@numero
  5390  002908  C022  F014         	movff	getAD_ANbit@porta+1,bitExtract@numero+1
  5391  00290C  0E00               	movlw	0
  5392  00290E  6E16               	movwf	(bitExtract@k+1)^0,c
  5393  002910  0E01               	movlw	1
  5394  002912  6E15               	movwf	bitExtract@k^0,c
  5395  002914  0E00               	movlw	0
  5396  002916  6E18               	movwf	(bitExtract@posicao+1)^0,c
  5397  002918  0E02               	movlw	2
  5398  00291A  6E17               	movwf	bitExtract@posicao^0,c
  5399  00291C  EC8F  F018         	call	_bitExtract	;wreg free
  5400  002920  4613               	rlncf	?_bitExtract^0,f,c
  5401  002922  4613               	rlncf	?_bitExtract^0,f,c
  5402  002924  5099               	movf	153,w,c	;volatile
  5403  002926  1813               	xorwf	?_bitExtract^0,w,c
  5404  002928  0BFB               	andlw	-5
  5405  00292A  1813               	xorwf	?_bitExtract^0,w,c
  5406  00292C  6E99               	movwf	153,c	;volatile
  5407                           
  5408                           ;./ADC.h: 129:     ADCHSbits.GDSEL0 = bitExtract(porta, 1, 2);
  5409  00292E  C021  F013         	movff	getAD_ANbit@porta,bitExtract@numero
  5410  002932  C022  F014         	movff	getAD_ANbit@porta+1,bitExtract@numero+1
  5411  002936  0E00               	movlw	0
  5412  002938  6E16               	movwf	(bitExtract@k+1)^0,c
  5413  00293A  0E01               	movlw	1
  5414  00293C  6E15               	movwf	bitExtract@k^0,c
  5415  00293E  0E00               	movlw	0
  5416  002940  6E18               	movwf	(bitExtract@posicao+1)^0,c
  5417  002942  0E02               	movlw	2
  5418  002944  6E17               	movwf	bitExtract@posicao^0,c
  5419  002946  EC8F  F018         	call	_bitExtract	;wreg free
  5420  00294A  3A13               	swapf	?_bitExtract^0,f,c
  5421  00294C  4613               	rlncf	?_bitExtract^0,f,c
  5422  00294E  4613               	rlncf	?_bitExtract^0,f,c
  5423  002950  5099               	movf	153,w,c	;volatile
  5424  002952  1813               	xorwf	?_bitExtract^0,w,c
  5425  002954  0BBF               	andlw	-65
  5426  002956  1813               	xorwf	?_bitExtract^0,w,c
  5427  002958  6E99               	movwf	153,c	;volatile
  5428  00295A                     
  5429                           ;./ADC.h: 131:     ADCON0bits.ADON = 1;
  5430  00295A  80C2               	bsf	194,0,c	;volatile
  5431  00295C                     
  5432                           ;./ADC.h: 132:     ADCON0bits.GODONE = 1;
  5433  00295C  82C2               	bsf	194,1,c	;volatile
  5434  00295E                     l172:
  5435  00295E  B2C2               	btfsc	194,1,c	;volatile
  5436  002960  EFB4  F014         	goto	u2541
  5437  002964  EFB6  F014         	goto	u2540
  5438  002968                     u2541:
  5439  002968  EFAF  F014         	goto	l172
  5440  00296C                     u2540:
  5441  00296C                     
  5442                           ;./ADC.h: 135:     int ANread = readAD_ANbit();
  5443  00296C  EC09  F01A         	call	_readAD_ANbit	;wreg free
  5444  002970  C013  F023         	movff	?_readAD_ANbit,getAD_ANbit@ANread
  5445  002974  C014  F024         	movff	?_readAD_ANbit+1,getAD_ANbit@ANread+1
  5446  002978                     
  5447                           ;./ADC.h: 136:     ADCON0bits.ADON = 0;
  5448  002978  90C2               	bcf	194,0,c	;volatile
  5449  00297A                     
  5450                           ;./ADC.h: 138:     return (int) ANread;
  5451  00297A  C023  F021         	movff	getAD_ANbit@ANread,?_getAD_ANbit
  5452  00297E  C024  F022         	movff	getAD_ANbit@ANread+1,?_getAD_ANbit+1
  5453  002982  0012               	return		;funcret
  5454  002984                     __end_of_getAD_ANbit:
  5455                           	callstack 0
  5456                           
  5457 ;; *************** function _readAD_ANbit *****************
  5458 ;; Defined at:
  5459 ;;		line 83 in file "./ADC.h"
  5460 ;; Parameters:    Size  Location     Type
  5461 ;;		None
  5462 ;; Auto vars:     Size  Location     Type
  5463 ;;		None
  5464 ;; Return value:  Size  Location     Type
  5465 ;;                  2   18[COMRAM] int 
  5466 ;; Registers used:
  5467 ;;		wreg, status,2, status,0
  5468 ;; Tracked objects:
  5469 ;;		On entry : 0/0
  5470 ;;		On exit  : 0/0
  5471 ;;		Unchanged: 0/0
  5472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5473 ;;      Params:         2       0       0       0
  5474 ;;      Locals:         0       0       0       0
  5475 ;;      Temps:          0       0       0       0
  5476 ;;      Totals:         2       0       0       0
  5477 ;;Total ram usage:        2 bytes
  5478 ;; Hardware stack levels used: 1
  5479 ;; Hardware stack levels required when called: 4
  5480 ;; This function calls:
  5481 ;;		Nothing
  5482 ;; This function is called by:
  5483 ;;		_getAD_ANbit
  5484 ;; This function uses a non-reentrant model
  5485 ;;
  5486                           
  5487                           	psect	text20
  5488  003412                     __ptext20:
  5489                           	callstack 0
  5490  003412                     _readAD_ANbit:
  5491                           	callstack 24
  5492  003412                     
  5493                           ;./ADC.h: 85:     vdig_AN = ADRESH;
  5494  003412  CFC4 F0F2          	movff	4036,_vdig_AN	;volatile
  5495  003416  0100               	movlb	0	; () banked
  5496  003418  6BF3               	clrf	(_vdig_AN+1)& (0+255),b
  5497  00341A                     
  5498                           ; BSR set to: 0
  5499                           ;./ADC.h: 86:     vdig_AN = vdig_AN << 8;
  5500  00341A  51F2               	movf	_vdig_AN& (0+255),w,b
  5501  00341C  6FF3               	movwf	(_vdig_AN+1)& (0+255),b
  5502  00341E  6BF2               	clrf	_vdig_AN& (0+255),b
  5503  003420                     
  5504                           ; BSR set to: 0
  5505                           ;./ADC.h: 87:     vdig_AN += ADRESL;
  5506  003420  50C3               	movf	195,w,c	;volatile
  5507  003422  27F2               	addwf	_vdig_AN& (0+255),f,b
  5508  003424  0E00               	movlw	0
  5509  003426  23F3               	addwfc	(_vdig_AN+1)& (0+255),f,b
  5510  003428                     
  5511                           ; BSR set to: 0
  5512                           ;./ADC.h: 89:     return vdig_AN;
  5513  003428  C0F2  F013         	movff	_vdig_AN,?_readAD_ANbit
  5514  00342C  C0F3  F014         	movff	_vdig_AN+1,?_readAD_ANbit+1
  5515  003430                     
  5516                           ; BSR set to: 0
  5517  003430  0012               	return		;funcret
  5518  003432                     __end_of_readAD_ANbit:
  5519                           	callstack 0
  5520                           
  5521 ;; *************** function ___flge *****************
  5522 ;; Defined at:
  5523 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;  ff1             4   18[COMRAM] int 
  5526 ;;  ff2             4   22[COMRAM] int 
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;		None
  5529 ;; Return value:  Size  Location     Type
  5530 ;;		None               void
  5531 ;; Registers used:
  5532 ;;		wreg, status,2, status,0
  5533 ;; Tracked objects:
  5534 ;;		On entry : 0/0
  5535 ;;		On exit  : 0/0
  5536 ;;		Unchanged: 0/0
  5537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5538 ;;      Params:         8       0       0       0
  5539 ;;      Locals:         0       0       0       0
  5540 ;;      Temps:          4       0       0       0
  5541 ;;      Totals:        12       0       0       0
  5542 ;;Total ram usage:       12 bytes
  5543 ;; Hardware stack levels used: 1
  5544 ;; Hardware stack levels required when called: 4
  5545 ;; This function calls:
  5546 ;;		Nothing
  5547 ;; This function is called by:
  5548 ;;		_configDA
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552                           	psect	text21
  5553  002788                     __ptext21:
  5554                           	callstack 0
  5555  002788                     ___flge:
  5556                           	callstack 24
  5557  002788  0E00               	movlw	0
  5558  00278A  1413               	andwf	___flge@ff1^0,w,c
  5559  00278C  6E1B               	movwf	??___flge^0,c
  5560  00278E  0E00               	movlw	0
  5561  002790  1414               	andwf	(___flge@ff1+1)^0,w,c
  5562  002792  6E1C               	movwf	(??___flge+1)^0,c
  5563  002794  0E80               	movlw	128
  5564  002796  1415               	andwf	(___flge@ff1+2)^0,w,c
  5565  002798  6E1D               	movwf	(??___flge+2)^0,c
  5566  00279A  0E7F               	movlw	127
  5567  00279C  1416               	andwf	(___flge@ff1+3)^0,w,c
  5568  00279E  6E1E               	movwf	(??___flge+3)^0,c
  5569  0027A0  501B               	movf	??___flge^0,w,c
  5570  0027A2  101C               	iorwf	(??___flge+1)^0,w,c
  5571  0027A4  101D               	iorwf	(??___flge+2)^0,w,c
  5572  0027A6  101E               	iorwf	(??___flge+3)^0,w,c
  5573  0027A8  A4D8               	btfss	status,2,c
  5574  0027AA  EFD9  F013         	goto	u3361
  5575  0027AE  EFDB  F013         	goto	u3360
  5576  0027B2                     u3361:
  5577  0027B2  EFE3  F013         	goto	l3362
  5578  0027B6                     u3360:
  5579  0027B6  0E00               	movlw	0
  5580  0027B8  6E13               	movwf	___flge@ff1^0,c
  5581  0027BA  0E00               	movlw	0
  5582  0027BC  6E14               	movwf	(___flge@ff1+1)^0,c
  5583  0027BE  0E00               	movlw	0
  5584  0027C0  6E15               	movwf	(___flge@ff1+2)^0,c
  5585  0027C2  0E00               	movlw	0
  5586  0027C4  6E16               	movwf	(___flge@ff1+3)^0,c
  5587  0027C6                     l3362:
  5588  0027C6  0E00               	movlw	0
  5589  0027C8  1417               	andwf	___flge@ff2^0,w,c
  5590  0027CA  6E1B               	movwf	??___flge^0,c
  5591  0027CC  0E00               	movlw	0
  5592  0027CE  1418               	andwf	(___flge@ff2+1)^0,w,c
  5593  0027D0  6E1C               	movwf	(??___flge+1)^0,c
  5594  0027D2  0E80               	movlw	128
  5595  0027D4  1419               	andwf	(___flge@ff2+2)^0,w,c
  5596  0027D6  6E1D               	movwf	(??___flge+2)^0,c
  5597  0027D8  0E7F               	movlw	127
  5598  0027DA  141A               	andwf	(___flge@ff2+3)^0,w,c
  5599  0027DC  6E1E               	movwf	(??___flge+3)^0,c
  5600  0027DE  501B               	movf	??___flge^0,w,c
  5601  0027E0  101C               	iorwf	(??___flge+1)^0,w,c
  5602  0027E2  101D               	iorwf	(??___flge+2)^0,w,c
  5603  0027E4  101E               	iorwf	(??___flge+3)^0,w,c
  5604  0027E6  A4D8               	btfss	status,2,c
  5605  0027E8  EFF8  F013         	goto	u3371
  5606  0027EC  EFFA  F013         	goto	u3370
  5607  0027F0                     u3371:
  5608  0027F0  EF02  F014         	goto	l3366
  5609  0027F4                     u3370:
  5610  0027F4  0E00               	movlw	0
  5611  0027F6  6E17               	movwf	___flge@ff2^0,c
  5612  0027F8  0E00               	movlw	0
  5613  0027FA  6E18               	movwf	(___flge@ff2+1)^0,c
  5614  0027FC  0E00               	movlw	0
  5615  0027FE  6E19               	movwf	(___flge@ff2+2)^0,c
  5616  002800  0E00               	movlw	0
  5617  002802  6E1A               	movwf	(___flge@ff2+3)^0,c
  5618  002804                     l3366:
  5619  002804  AE16               	btfss	(___flge@ff1+3)^0,7,c
  5620  002806  EF07  F014         	goto	u3381
  5621  00280A  EF09  F014         	goto	u3380
  5622  00280E                     u3381:
  5623  00280E  EF12  F014         	goto	l3370
  5624  002812                     u3380:
  5625  002812  6C13               	negf	___flge@ff1^0,c
  5626  002814  1E14               	comf	(___flge@ff1+1)^0,f,c
  5627  002816  B0D8               	btfsc	status,0,c
  5628  002818  2A14               	incf	(___flge@ff1+1)^0,f,c
  5629  00281A  1E15               	comf	(___flge@ff1+2)^0,f,c
  5630  00281C  B0D8               	btfsc	status,0,c
  5631  00281E  2A15               	incf	(___flge@ff1+2)^0,f,c
  5632  002820  0E80               	movlw	128
  5633  002822  5616               	subfwb	(___flge@ff1+3)^0,f,c
  5634  002824                     l3370:
  5635  002824  AE1A               	btfss	(___flge@ff2+3)^0,7,c
  5636  002826  EF17  F014         	goto	u3391
  5637  00282A  EF19  F014         	goto	u3390
  5638  00282E                     u3391:
  5639  00282E  EF22  F014         	goto	l662
  5640  002832                     u3390:
  5641  002832  6C17               	negf	___flge@ff2^0,c
  5642  002834  1E18               	comf	(___flge@ff2+1)^0,f,c
  5643  002836  B0D8               	btfsc	status,0,c
  5644  002838  2A18               	incf	(___flge@ff2+1)^0,f,c
  5645  00283A  1E19               	comf	(___flge@ff2+2)^0,f,c
  5646  00283C  B0D8               	btfsc	status,0,c
  5647  00283E  2A19               	incf	(___flge@ff2+2)^0,f,c
  5648  002840  0E80               	movlw	128
  5649  002842  561A               	subfwb	(___flge@ff2+3)^0,f,c
  5650  002844                     l662:
  5651  002844  0E00               	movlw	0
  5652  002846  1A13               	xorwf	___flge@ff1^0,f,c
  5653  002848  0E00               	movlw	0
  5654  00284A  1A14               	xorwf	(___flge@ff1+1)^0,f,c
  5655  00284C  0E00               	movlw	0
  5656  00284E  1A15               	xorwf	(___flge@ff1+2)^0,f,c
  5657  002850  0E80               	movlw	128
  5658  002852  1A16               	xorwf	(___flge@ff1+3)^0,f,c
  5659  002854  0E00               	movlw	0
  5660  002856  1A17               	xorwf	___flge@ff2^0,f,c
  5661  002858  0E00               	movlw	0
  5662  00285A  1A18               	xorwf	(___flge@ff2+1)^0,f,c
  5663  00285C  0E00               	movlw	0
  5664  00285E  1A19               	xorwf	(___flge@ff2+2)^0,f,c
  5665  002860  0E80               	movlw	128
  5666  002862  1A1A               	xorwf	(___flge@ff2+3)^0,f,c
  5667  002864  5017               	movf	___flge@ff2^0,w,c
  5668  002866  5C13               	subwf	___flge@ff1^0,w,c
  5669  002868  5018               	movf	(___flge@ff2+1)^0,w,c
  5670  00286A  5814               	subwfb	(___flge@ff1+1)^0,w,c
  5671  00286C  5019               	movf	(___flge@ff2+2)^0,w,c
  5672  00286E  5815               	subwfb	(___flge@ff1+2)^0,w,c
  5673  002870  501A               	movf	(___flge@ff2+3)^0,w,c
  5674  002872  5816               	subwfb	(___flge@ff1+3)^0,w,c
  5675  002874  B0D8               	btfsc	status,0,c
  5676  002876  EF3F  F014         	goto	u3401
  5677  00287A  EF41  F014         	goto	u3400
  5678  00287E                     u3401:
  5679  00287E  EF44  F014         	goto	l3376
  5680  002882                     u3400:
  5681  002882  90D8               	bcf	status,0,c
  5682  002884  EF45  F014         	goto	l667
  5683  002888                     l3376:
  5684  002888  80D8               	bsf	status,0,c
  5685  00288A                     l667:
  5686  00288A  0012               	return		;funcret
  5687  00288C                     __end_of___flge:
  5688                           	callstack 0
  5689                           
  5690 ;; *************** function ___flsub *****************
  5691 ;; Defined at:
  5692 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5693 ;; Parameters:    Size  Location     Type
  5694 ;;  b               4   33[BANK0 ] int 
  5695 ;;  a               4   37[BANK0 ] int 
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;		None
  5698 ;; Return value:  Size  Location     Type
  5699 ;;                  4   33[BANK0 ] int 
  5700 ;; Registers used:
  5701 ;;		wreg, status,2, status,0, cstack
  5702 ;; Tracked objects:
  5703 ;;		On entry : 0/0
  5704 ;;		On exit  : 0/0
  5705 ;;		Unchanged: 0/0
  5706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5707 ;;      Params:         0       8       0       0
  5708 ;;      Locals:         0       0       0       0
  5709 ;;      Temps:          0       0       0       0
  5710 ;;      Totals:         0       8       0       0
  5711 ;;Total ram usage:        8 bytes
  5712 ;; Hardware stack levels used: 1
  5713 ;; Hardware stack levels required when called: 5
  5714 ;; This function calls:
  5715 ;;		___fladd
  5716 ;; This function is called by:
  5717 ;;		_setPID
  5718 ;; This function uses a non-reentrant model
  5719 ;;
  5720                           
  5721                           	psect	text22
  5722  0031CA                     __ptext22:
  5723                           	callstack 0
  5724  0031CA                     ___flsub:
  5725                           	callstack 24
  5726  0031CA  0E00               	movlw	0
  5727  0031CC  0100               	movlb	0	; () banked
  5728  0031CE  1B85               	xorwf	___flsub@a& (0+255),f,b
  5729  0031D0  0E00               	movlw	0
  5730  0031D2  1B86               	xorwf	(___flsub@a+1)& (0+255),f,b
  5731  0031D4  0E00               	movlw	0
  5732  0031D6  1B87               	xorwf	(___flsub@a+2)& (0+255),f,b
  5733  0031D8  0E80               	movlw	128
  5734  0031DA  1B88               	xorwf	(___flsub@a+3)& (0+255),f,b
  5735  0031DC                     
  5736                           ; BSR set to: 0
  5737  0031DC  C081  F071         	movff	___flsub@b,___fladd@b
  5738  0031E0  C082  F072         	movff	___flsub@b+1,___fladd@b+1
  5739  0031E4  C083  F073         	movff	___flsub@b+2,___fladd@b+2
  5740  0031E8  C084  F074         	movff	___flsub@b+3,___fladd@b+3
  5741  0031EC  C085  F075         	movff	___flsub@a,___fladd@a
  5742  0031F0  C086  F076         	movff	___flsub@a+1,___fladd@a+1
  5743  0031F4  C087  F077         	movff	___flsub@a+2,___fladd@a+2
  5744  0031F8  C088  F078         	movff	___flsub@a+3,___fladd@a+3
  5745  0031FC  EC72  F001         	call	___fladd	;wreg free
  5746  003200  C071  F081         	movff	?___fladd,?___flsub
  5747  003204  C072  F082         	movff	?___fladd+1,?___flsub+1
  5748  003208  C073  F083         	movff	?___fladd+2,?___flsub+2
  5749  00320C  C074  F084         	movff	?___fladd+3,?___flsub+3
  5750  003210  0012               	return		;funcret
  5751  003212                     __end_of___flsub:
  5752                           	callstack 0
  5753                           
  5754 ;; *************** function ___fladd *****************
  5755 ;; Defined at:
  5756 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5757 ;; Parameters:    Size  Location     Type
  5758 ;;  b               4   17[BANK0 ] int 
  5759 ;;  a               4   21[BANK0 ] int 
  5760 ;; Auto vars:     Size  Location     Type
  5761 ;;  grs             1   32[BANK0 ] unsigned char 
  5762 ;;  bexp            1   31[BANK0 ] unsigned char 
  5763 ;;  aexp            1   30[BANK0 ] unsigned char 
  5764 ;;  signs           1   29[BANK0 ] unsigned char 
  5765 ;; Return value:  Size  Location     Type
  5766 ;;                  4   17[BANK0 ] unsigned char 
  5767 ;; Registers used:
  5768 ;;		wreg, status,2, status,0
  5769 ;; Tracked objects:
  5770 ;;		On entry : 0/0
  5771 ;;		On exit  : 0/0
  5772 ;;		Unchanged: 0/0
  5773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5774 ;;      Params:         0       8       0       0
  5775 ;;      Locals:         0       4       0       0
  5776 ;;      Temps:          0       4       0       0
  5777 ;;      Totals:         0      16       0       0
  5778 ;;Total ram usage:       16 bytes
  5779 ;; Hardware stack levels used: 1
  5780 ;; Hardware stack levels required when called: 4
  5781 ;; This function calls:
  5782 ;;		Nothing
  5783 ;; This function is called by:
  5784 ;;		_posicao
  5785 ;;		_moverMotor
  5786 ;;		_setPID
  5787 ;;		___flsub
  5788 ;; This function uses a non-reentrant model
  5789 ;;
  5790                           
  5791                           	psect	text23
  5792  0002E4                     __ptext23:
  5793                           	callstack 0
  5794  0002E4                     ___fladd:
  5795                           	callstack 24
  5796  0002E4  0100               	movlb	0	; () banked
  5797  0002E6  5174               	movf	(___fladd@b+3)& (0+255),w,b
  5798  0002E8  0B80               	andlw	128
  5799  0002EA  6F7D               	movwf	___fladd@signs& (0+255),b
  5800  0002EC  5174               	movf	(___fladd@b+3)& (0+255),w,b
  5801  0002EE  2574               	addwf	(___fladd@b+3)& (0+255),w,b
  5802  0002F0  6F7F               	movwf	___fladd@bexp& (0+255),b
  5803  0002F2                     
  5804                           ; BSR set to: 0
  5805  0002F2  AF73               	btfss	(___fladd@b+2)& (0+255),7,b
  5806  0002F4  EF7E  F001         	goto	u4561
  5807  0002F8  EF80  F001         	goto	u4560
  5808  0002FC                     u4561:
  5809  0002FC  EF81  F001         	goto	l4398
  5810  000300                     u4560:
  5811  000300                     
  5812                           ; BSR set to: 0
  5813  000300  817F               	bsf	___fladd@bexp& (0+255),0,b
  5814  000302                     l4398:
  5815                           
  5816                           ; BSR set to: 0
  5817  000302  517F               	movf	___fladd@bexp& (0+255),w,b
  5818  000304  B4D8               	btfsc	status,2,c
  5819  000306  EF87  F001         	goto	u4571
  5820  00030A  EF89  F001         	goto	u4570
  5821  00030E                     u4571:
  5822  00030E  EF9E  F001         	goto	l4408
  5823  000312                     u4570:
  5824  000312                     
  5825                           ; BSR set to: 0
  5826  000312  297F               	incf	___fladd@bexp& (0+255),w,b
  5827  000314  A4D8               	btfss	status,2,c
  5828  000316  EF8F  F001         	goto	u4581
  5829  00031A  EF91  F001         	goto	u4580
  5830  00031E                     u4581:
  5831  00031E  EF99  F001         	goto	l4404
  5832  000322                     u4580:
  5833  000322                     
  5834                           ; BSR set to: 0
  5835  000322  0E00               	movlw	0
  5836  000324  6F71               	movwf	___fladd@b& (0+255),b
  5837  000326  0E00               	movlw	0
  5838  000328  6F72               	movwf	(___fladd@b+1)& (0+255),b
  5839  00032A  0E00               	movlw	0
  5840  00032C  6F73               	movwf	(___fladd@b+2)& (0+255),b
  5841  00032E  0E00               	movlw	0
  5842  000330  6F74               	movwf	(___fladd@b+3)& (0+255),b
  5843  000332                     l4404:
  5844                           
  5845                           ; BSR set to: 0
  5846  000332  8F73               	bsf	(___fladd@b+2)& (0+255),7,b
  5847  000334                     
  5848                           ; BSR set to: 0
  5849  000334  0E00               	movlw	0
  5850  000336  6F74               	movwf	(___fladd@b+3)& (0+255),b
  5851  000338  EFA6  F001         	goto	l4410
  5852  00033C                     l4408:
  5853                           
  5854                           ; BSR set to: 0
  5855  00033C  0E00               	movlw	0
  5856  00033E  6F71               	movwf	___fladd@b& (0+255),b
  5857  000340  0E00               	movlw	0
  5858  000342  6F72               	movwf	(___fladd@b+1)& (0+255),b
  5859  000344  0E00               	movlw	0
  5860  000346  6F73               	movwf	(___fladd@b+2)& (0+255),b
  5861  000348  0E00               	movlw	0
  5862  00034A  6F74               	movwf	(___fladd@b+3)& (0+255),b
  5863  00034C                     l4410:
  5864                           
  5865                           ; BSR set to: 0
  5866  00034C  5178               	movf	(___fladd@a+3)& (0+255),w,b
  5867  00034E  0B80               	andlw	128
  5868  000350  6F7E               	movwf	___fladd@aexp& (0+255),b
  5869  000352                     
  5870                           ; BSR set to: 0
  5871  000352  517D               	movf	___fladd@signs& (0+255),w,b
  5872  000354  197E               	xorwf	___fladd@aexp& (0+255),w,b
  5873  000356  B4D8               	btfsc	status,2,c
  5874  000358  EFB0  F001         	goto	u4591
  5875  00035C  EFB2  F001         	goto	u4590
  5876  000360                     u4591:
  5877  000360  EFB3  F001         	goto	l4416
  5878  000364                     u4590:
  5879  000364                     
  5880                           ; BSR set to: 0
  5881  000364  8D7D               	bsf	___fladd@signs& (0+255),6,b
  5882  000366                     l4416:
  5883                           
  5884                           ; BSR set to: 0
  5885  000366  5178               	movf	(___fladd@a+3)& (0+255),w,b
  5886  000368  2578               	addwf	(___fladd@a+3)& (0+255),w,b
  5887  00036A  6F7E               	movwf	___fladd@aexp& (0+255),b
  5888  00036C                     
  5889                           ; BSR set to: 0
  5890  00036C  AF77               	btfss	(___fladd@a+2)& (0+255),7,b
  5891  00036E  EFBB  F001         	goto	u4601
  5892  000372  EFBD  F001         	goto	u4600
  5893  000376                     u4601:
  5894  000376  EFBE  F001         	goto	l4422
  5895  00037A                     u4600:
  5896  00037A                     
  5897                           ; BSR set to: 0
  5898  00037A  817E               	bsf	___fladd@aexp& (0+255),0,b
  5899  00037C                     l4422:
  5900                           
  5901                           ; BSR set to: 0
  5902  00037C  517E               	movf	___fladd@aexp& (0+255),w,b
  5903  00037E  B4D8               	btfsc	status,2,c
  5904  000380  EFC4  F001         	goto	u4611
  5905  000384  EFC6  F001         	goto	u4610
  5906  000388                     u4611:
  5907  000388  EFDB  F001         	goto	l4432
  5908  00038C                     u4610:
  5909  00038C                     
  5910                           ; BSR set to: 0
  5911  00038C  297E               	incf	___fladd@aexp& (0+255),w,b
  5912  00038E  A4D8               	btfss	status,2,c
  5913  000390  EFCC  F001         	goto	u4621
  5914  000394  EFCE  F001         	goto	u4620
  5915  000398                     u4621:
  5916  000398  EFD6  F001         	goto	l4428
  5917  00039C                     u4620:
  5918  00039C                     
  5919                           ; BSR set to: 0
  5920  00039C  0E00               	movlw	0
  5921  00039E  6F75               	movwf	___fladd@a& (0+255),b
  5922  0003A0  0E00               	movlw	0
  5923  0003A2  6F76               	movwf	(___fladd@a+1)& (0+255),b
  5924  0003A4  0E00               	movlw	0
  5925  0003A6  6F77               	movwf	(___fladd@a+2)& (0+255),b
  5926  0003A8  0E00               	movlw	0
  5927  0003AA  6F78               	movwf	(___fladd@a+3)& (0+255),b
  5928  0003AC                     l4428:
  5929                           
  5930                           ; BSR set to: 0
  5931  0003AC  8F77               	bsf	(___fladd@a+2)& (0+255),7,b
  5932  0003AE                     
  5933                           ; BSR set to: 0
  5934  0003AE  0E00               	movlw	0
  5935  0003B0  6F78               	movwf	(___fladd@a+3)& (0+255),b
  5936  0003B2  EFE3  F001         	goto	l4434
  5937  0003B6                     l4432:
  5938                           
  5939                           ; BSR set to: 0
  5940  0003B6  0E00               	movlw	0
  5941  0003B8  6F75               	movwf	___fladd@a& (0+255),b
  5942  0003BA  0E00               	movlw	0
  5943  0003BC  6F76               	movwf	(___fladd@a+1)& (0+255),b
  5944  0003BE  0E00               	movlw	0
  5945  0003C0  6F77               	movwf	(___fladd@a+2)& (0+255),b
  5946  0003C2  0E00               	movlw	0
  5947  0003C4  6F78               	movwf	(___fladd@a+3)& (0+255),b
  5948  0003C6                     l4434:
  5949                           
  5950                           ; BSR set to: 0
  5951  0003C6  517F               	movf	___fladd@bexp& (0+255),w,b
  5952  0003C8  5D7E               	subwf	___fladd@aexp& (0+255),w,b
  5953  0003CA  B0D8               	btfsc	status,0,c
  5954  0003CC  EFEA  F001         	goto	u4631
  5955  0003D0  EFEC  F001         	goto	u4630
  5956  0003D4                     u4631:
  5957  0003D4  EF13  F002         	goto	l4470
  5958  0003D8                     u4630:
  5959  0003D8                     
  5960                           ; BSR set to: 0
  5961  0003D8  AD7D               	btfss	___fladd@signs& (0+255),6,b
  5962  0003DA  EFF1  F001         	goto	u4641
  5963  0003DE  EFF3  F001         	goto	u4640
  5964  0003E2                     u4641:
  5965  0003E2  EFF5  F001         	goto	l4440
  5966  0003E6                     u4640:
  5967  0003E6                     
  5968                           ; BSR set to: 0
  5969  0003E6  0E80               	movlw	128
  5970  0003E8  1B7D               	xorwf	___fladd@signs& (0+255),f,b
  5971  0003EA                     l4440:
  5972                           
  5973                           ; BSR set to: 0
  5974  0003EA  C07F  F080         	movff	___fladd@bexp,___fladd@grs
  5975  0003EE                     
  5976                           ; BSR set to: 0
  5977  0003EE  C07E  F07F         	movff	___fladd@aexp,___fladd@bexp
  5978  0003F2                     
  5979                           ; BSR set to: 0
  5980  0003F2  C080  F07E         	movff	___fladd@grs,___fladd@aexp
  5981  0003F6                     
  5982                           ; BSR set to: 0
  5983  0003F6  C071  F080         	movff	___fladd@b,___fladd@grs
  5984  0003FA                     
  5985                           ; BSR set to: 0
  5986  0003FA  C075  F071         	movff	___fladd@a,___fladd@b
  5987  0003FE                     
  5988                           ; BSR set to: 0
  5989  0003FE  C080  F075         	movff	___fladd@grs,___fladd@a
  5990  000402                     
  5991                           ; BSR set to: 0
  5992  000402  C072  F080         	movff	___fladd@b+1,___fladd@grs
  5993  000406                     
  5994                           ; BSR set to: 0
  5995  000406  C076  F072         	movff	___fladd@a+1,___fladd@b+1
  5996  00040A                     
  5997                           ; BSR set to: 0
  5998  00040A  C080  F076         	movff	___fladd@grs,___fladd@a+1
  5999  00040E                     
  6000                           ; BSR set to: 0
  6001  00040E  C073  F080         	movff	___fladd@b+2,___fladd@grs
  6002  000412                     
  6003                           ; BSR set to: 0
  6004  000412  C077  F073         	movff	___fladd@a+2,___fladd@b+2
  6005  000416                     
  6006                           ; BSR set to: 0
  6007  000416  C080  F077         	movff	___fladd@grs,___fladd@a+2
  6008  00041A                     
  6009                           ; BSR set to: 0
  6010  00041A  C074  F080         	movff	___fladd@b+3,___fladd@grs
  6011  00041E                     
  6012                           ; BSR set to: 0
  6013  00041E  C078  F074         	movff	___fladd@a+3,___fladd@b+3
  6014  000422                     
  6015                           ; BSR set to: 0
  6016  000422  C080  F078         	movff	___fladd@grs,___fladd@a+3
  6017  000426                     l4470:
  6018                           
  6019                           ; BSR set to: 0
  6020  000426  0E00               	movlw	0
  6021  000428  6F80               	movwf	___fladd@grs& (0+255),b
  6022  00042A                     
  6023                           ; BSR set to: 0
  6024  00042A  517F               	movf	___fladd@bexp& (0+255),w,b
  6025  00042C  C07E  F079         	movff	___fladd@aexp,??___fladd
  6026  000430  6B7A               	clrf	(??___fladd+1)& (0+255),b
  6027  000432  5F79               	subwf	??___fladd& (0+255),f,b
  6028  000434  0E00               	movlw	0
  6029  000436  5B7A               	subwfb	(??___fladd+1)& (0+255),f,b
  6030  000438  BF7A               	btfsc	(??___fladd+1)& (0+255),7,b
  6031  00043A  EF28  F002         	goto	u4651
  6032  00043E  517A               	movf	(??___fladd+1)& (0+255),w,b
  6033  000440  E109               	bnz	u4650
  6034  000442  0E1A               	movlw	26
  6035  000444  5D79               	subwf	??___fladd& (0+255),w,b
  6036  000446  A0D8               	btfss	status,0,c
  6037  000448  EF28  F002         	goto	u4651
  6038  00044C  EF2A  F002         	goto	u4650
  6039  000450                     u4651:
  6040  000450  EF61  F002         	goto	l926
  6041  000454                     u4650:
  6042  000454                     
  6043                           ; BSR set to: 0
  6044  000454  5171               	movf	___fladd@b& (0+255),w,b
  6045  000456  1172               	iorwf	(___fladd@b+1)& (0+255),w,b
  6046  000458  1173               	iorwf	(___fladd@b+2)& (0+255),w,b
  6047  00045A  1174               	iorwf	(___fladd@b+3)& (0+255),w,b
  6048  00045C  A4D8               	btfss	status,2,c
  6049  00045E  EF33  F002         	goto	u4661
  6050  000462  EF36  F002         	goto	u4660
  6051  000466                     u4661:
  6052  000466  0E01               	movlw	1
  6053  000468  EF37  F002         	goto	u4670
  6054  00046C                     u4660:
  6055  00046C  0E00               	movlw	0
  6056  00046E                     u4670:
  6057  00046E  6F80               	movwf	___fladd@grs& (0+255),b
  6058  000470                     
  6059                           ; BSR set to: 0
  6060  000470  0E00               	movlw	0
  6061  000472  6F71               	movwf	___fladd@b& (0+255),b
  6062  000474  0E00               	movlw	0
  6063  000476  6F72               	movwf	(___fladd@b+1)& (0+255),b
  6064  000478  0E00               	movlw	0
  6065  00047A  6F73               	movwf	(___fladd@b+2)& (0+255),b
  6066  00047C  0E00               	movlw	0
  6067  00047E  6F74               	movwf	(___fladd@b+3)& (0+255),b
  6068  000480                     
  6069                           ; BSR set to: 0
  6070  000480  C07E  F07F         	movff	___fladd@aexp,___fladd@bexp
  6071  000484  EF6A  F002         	goto	l925
  6072  000488                     l927:
  6073                           
  6074                           ; BSR set to: 0
  6075  000488  A180               	btfss	___fladd@grs& (0+255),0,b
  6076  00048A  EF49  F002         	goto	u4681
  6077  00048E  EF4B  F002         	goto	u4680
  6078  000492                     u4681:
  6079  000492  EF51  F002         	goto	l4482
  6080  000496                     u4680:
  6081  000496                     
  6082                           ; BSR set to: 0
  6083  000496  90D8               	bcf	status,0,c
  6084  000498  3180               	rrcf	___fladd@grs& (0+255),w,b
  6085  00049A  0901               	iorlw	1
  6086  00049C  6F80               	movwf	___fladd@grs& (0+255),b
  6087  00049E  EF53  F002         	goto	l4484
  6088  0004A2                     l4482:
  6089                           
  6090                           ; BSR set to: 0
  6091  0004A2  90D8               	bcf	status,0,c
  6092  0004A4  3380               	rrcf	___fladd@grs& (0+255),f,b
  6093  0004A6                     l4484:
  6094                           
  6095                           ; BSR set to: 0
  6096  0004A6  A171               	btfss	___fladd@b& (0+255),0,b
  6097  0004A8  EF58  F002         	goto	u4691
  6098  0004AC  EF5A  F002         	goto	u4690
  6099  0004B0                     u4691:
  6100  0004B0  EF5B  F002         	goto	l4488
  6101  0004B4                     u4690:
  6102  0004B4                     
  6103                           ; BSR set to: 0
  6104  0004B4  8F80               	bsf	___fladd@grs& (0+255),7,b
  6105  0004B6                     l4488:
  6106                           
  6107                           ; BSR set to: 0
  6108  0004B6  3574               	rlcf	(___fladd@b+3)& (0+255),w,b
  6109  0004B8  3374               	rrcf	(___fladd@b+3)& (0+255),f,b
  6110  0004BA  3373               	rrcf	(___fladd@b+2)& (0+255),f,b
  6111  0004BC  3372               	rrcf	(___fladd@b+1)& (0+255),f,b
  6112  0004BE  3371               	rrcf	___fladd@b& (0+255),f,b
  6113  0004C0                     
  6114                           ; BSR set to: 0
  6115  0004C0  2B7F               	incf	___fladd@bexp& (0+255),f,b
  6116  0004C2                     l926:
  6117                           
  6118                           ; BSR set to: 0
  6119  0004C2  517E               	movf	___fladd@aexp& (0+255),w,b
  6120  0004C4  5D7F               	subwf	___fladd@bexp& (0+255),w,b
  6121  0004C6  A0D8               	btfss	status,0,c
  6122  0004C8  EF68  F002         	goto	u4701
  6123  0004CC  EF6A  F002         	goto	u4700
  6124  0004D0                     u4701:
  6125  0004D0  EF44  F002         	goto	l927
  6126  0004D4                     u4700:
  6127  0004D4                     l925:
  6128                           
  6129                           ; BSR set to: 0
  6130  0004D4  BD7D               	btfsc	___fladd@signs& (0+255),6,b
  6131  0004D6  EF6F  F002         	goto	u4711
  6132  0004DA  EF71  F002         	goto	u4710
  6133  0004DE                     u4711:
  6134  0004DE  EFB1  F002         	goto	l4516
  6135  0004E2                     u4710:
  6136  0004E2                     
  6137                           ; BSR set to: 0
  6138  0004E2  517F               	movf	___fladd@bexp& (0+255),w,b
  6139  0004E4  A4D8               	btfss	status,2,c
  6140  0004E6  EF77  F002         	goto	u4721
  6141  0004EA  EF79  F002         	goto	u4720
  6142  0004EE                     u4721:
  6143  0004EE  EF83  F002         	goto	l4498
  6144  0004F2                     u4720:
  6145  0004F2                     
  6146                           ; BSR set to: 0
  6147  0004F2  0E00               	movlw	0
  6148  0004F4  6F71               	movwf	?___fladd& (0+255),b
  6149  0004F6  0E00               	movlw	0
  6150  0004F8  6F72               	movwf	(?___fladd+1)& (0+255),b
  6151  0004FA  0E00               	movlw	0
  6152  0004FC  6F73               	movwf	(?___fladd+2)& (0+255),b
  6153  0004FE  0E00               	movlw	0
  6154  000500  6F74               	movwf	(?___fladd+3)& (0+255),b
  6155  000502  EFD2  F003         	goto	l934
  6156  000506                     l4498:
  6157                           
  6158                           ; BSR set to: 0
  6159  000506  5175               	movf	___fladd@a& (0+255),w,b
  6160  000508  2771               	addwf	___fladd@b& (0+255),f,b
  6161  00050A  5176               	movf	(___fladd@a+1)& (0+255),w,b
  6162  00050C  2372               	addwfc	(___fladd@b+1)& (0+255),f,b
  6163  00050E  5177               	movf	(___fladd@a+2)& (0+255),w,b
  6164  000510  2373               	addwfc	(___fladd@b+2)& (0+255),f,b
  6165  000512  5178               	movf	(___fladd@a+3)& (0+255),w,b
  6166  000514  2374               	addwfc	(___fladd@b+3)& (0+255),f,b
  6167  000516                     
  6168                           ; BSR set to: 0
  6169  000516  A174               	btfss	(___fladd@b+3)& (0+255),0,b
  6170  000518  EF90  F002         	goto	u4731
  6171  00051C  EF92  F002         	goto	u4730
  6172  000520                     u4731:
  6173  000520  EF3E  F003         	goto	l4552
  6174  000524                     u4730:
  6175  000524                     
  6176                           ; BSR set to: 0
  6177  000524  A180               	btfss	___fladd@grs& (0+255),0,b
  6178  000526  EF97  F002         	goto	u4741
  6179  00052A  EF99  F002         	goto	u4740
  6180  00052E                     u4741:
  6181  00052E  EF9F  F002         	goto	l4506
  6182  000532                     u4740:
  6183  000532                     
  6184                           ; BSR set to: 0
  6185  000532  90D8               	bcf	status,0,c
  6186  000534  3180               	rrcf	___fladd@grs& (0+255),w,b
  6187  000536  0901               	iorlw	1
  6188  000538  6F80               	movwf	___fladd@grs& (0+255),b
  6189  00053A  EFA1  F002         	goto	l4508
  6190  00053E                     l4506:
  6191                           
  6192                           ; BSR set to: 0
  6193  00053E  90D8               	bcf	status,0,c
  6194  000540  3380               	rrcf	___fladd@grs& (0+255),f,b
  6195  000542                     l4508:
  6196                           
  6197                           ; BSR set to: 0
  6198  000542  A171               	btfss	___fladd@b& (0+255),0,b
  6199  000544  EFA6  F002         	goto	u4751
  6200  000548  EFA8  F002         	goto	u4750
  6201  00054C                     u4751:
  6202  00054C  EFA9  F002         	goto	l4512
  6203  000550                     u4750:
  6204  000550                     
  6205                           ; BSR set to: 0
  6206  000550  8F80               	bsf	___fladd@grs& (0+255),7,b
  6207  000552                     l4512:
  6208                           
  6209                           ; BSR set to: 0
  6210  000552  3574               	rlcf	(___fladd@b+3)& (0+255),w,b
  6211  000554  3374               	rrcf	(___fladd@b+3)& (0+255),f,b
  6212  000556  3373               	rrcf	(___fladd@b+2)& (0+255),f,b
  6213  000558  3372               	rrcf	(___fladd@b+1)& (0+255),f,b
  6214  00055A  3371               	rrcf	___fladd@b& (0+255),f,b
  6215  00055C                     
  6216                           ; BSR set to: 0
  6217  00055C  2B7F               	incf	___fladd@bexp& (0+255),f,b
  6218  00055E  EF3E  F003         	goto	l4552
  6219  000562                     l4516:
  6220                           
  6221                           ; BSR set to: 0
  6222  000562  5175               	movf	___fladd@a& (0+255),w,b
  6223  000564  5D71               	subwf	___fladd@b& (0+255),w,b
  6224  000566  5176               	movf	(___fladd@a+1)& (0+255),w,b
  6225  000568  5972               	subwfb	(___fladd@b+1)& (0+255),w,b
  6226  00056A  5177               	movf	(___fladd@a+2)& (0+255),w,b
  6227  00056C  5973               	subwfb	(___fladd@b+2)& (0+255),w,b
  6228  00056E  5174               	movf	(___fladd@b+3)& (0+255),w,b
  6229  000570  0A80               	xorlw	128
  6230  000572  6F79               	movwf	??___fladd& (0+255),b
  6231  000574  5178               	movf	(___fladd@a+3)& (0+255),w,b
  6232  000576  0A80               	xorlw	128
  6233  000578  5979               	subwfb	??___fladd& (0+255),w,b
  6234  00057A  B0D8               	btfsc	status,0,c
  6235  00057C  EFC2  F002         	goto	u4761
  6236  000580  EFC4  F002         	goto	u4760
  6237  000584                     u4761:
  6238  000584  EFEF  F002         	goto	l4526
  6239  000588                     u4760:
  6240  000588                     
  6241                           ; BSR set to: 0
  6242  000588  5171               	movf	___fladd@b& (0+255),w,b
  6243  00058A  5D75               	subwf	___fladd@a& (0+255),w,b
  6244  00058C  6F79               	movwf	??___fladd& (0+255),b
  6245  00058E  5172               	movf	(___fladd@b+1)& (0+255),w,b
  6246  000590  5976               	subwfb	(___fladd@a+1)& (0+255),w,b
  6247  000592  6F7A               	movwf	(??___fladd+1)& (0+255),b
  6248  000594  5173               	movf	(___fladd@b+2)& (0+255),w,b
  6249  000596  5977               	subwfb	(___fladd@a+2)& (0+255),w,b
  6250  000598  6F7B               	movwf	(??___fladd+2)& (0+255),b
  6251  00059A  5174               	movf	(___fladd@b+3)& (0+255),w,b
  6252  00059C  5978               	subwfb	(___fladd@a+3)& (0+255),w,b
  6253  00059E  6F7C               	movwf	(??___fladd+3)& (0+255),b
  6254  0005A0  0EFF               	movlw	255
  6255  0005A2  2579               	addwf	??___fladd& (0+255),w,b
  6256  0005A4  6F71               	movwf	___fladd@b& (0+255),b
  6257  0005A6  0EFF               	movlw	255
  6258  0005A8  217A               	addwfc	(??___fladd+1)& (0+255),w,b
  6259  0005AA  6F72               	movwf	(___fladd@b+1)& (0+255),b
  6260  0005AC  0EFF               	movlw	255
  6261  0005AE  217B               	addwfc	(??___fladd+2)& (0+255),w,b
  6262  0005B0  6F73               	movwf	(___fladd@b+2)& (0+255),b
  6263  0005B2  0EFF               	movlw	255
  6264  0005B4  217C               	addwfc	(??___fladd+3)& (0+255),w,b
  6265  0005B6  6F74               	movwf	(___fladd@b+3)& (0+255),b
  6266  0005B8  0E80               	movlw	128
  6267  0005BA  1B7D               	xorwf	___fladd@signs& (0+255),f,b
  6268  0005BC                     
  6269                           ; BSR set to: 0
  6270  0005BC  6D80               	negf	___fladd@grs& (0+255),b
  6271  0005BE                     
  6272                           ; BSR set to: 0
  6273  0005BE  5180               	movf	___fladd@grs& (0+255),w,b
  6274  0005C0  A4D8               	btfss	status,2,c
  6275  0005C2  EFE5  F002         	goto	u4771
  6276  0005C6  EFE7  F002         	goto	u4770
  6277  0005CA                     u4771:
  6278  0005CA  EFF7  F002         	goto	l942
  6279  0005CE                     u4770:
  6280  0005CE                     
  6281                           ; BSR set to: 0
  6282  0005CE  0E01               	movlw	1
  6283  0005D0  2771               	addwf	___fladd@b& (0+255),f,b
  6284  0005D2  0E00               	movlw	0
  6285  0005D4  2372               	addwfc	(___fladd@b+1)& (0+255),f,b
  6286  0005D6  2373               	addwfc	(___fladd@b+2)& (0+255),f,b
  6287  0005D8  2374               	addwfc	(___fladd@b+3)& (0+255),f,b
  6288  0005DA  EFF7  F002         	goto	l942
  6289  0005DE                     l4526:
  6290                           
  6291                           ; BSR set to: 0
  6292  0005DE  5175               	movf	___fladd@a& (0+255),w,b
  6293  0005E0  5F71               	subwf	___fladd@b& (0+255),f,b
  6294  0005E2  5176               	movf	(___fladd@a+1)& (0+255),w,b
  6295  0005E4  5B72               	subwfb	(___fladd@b+1)& (0+255),f,b
  6296  0005E6  5177               	movf	(___fladd@a+2)& (0+255),w,b
  6297  0005E8  5B73               	subwfb	(___fladd@b+2)& (0+255),f,b
  6298  0005EA  5178               	movf	(___fladd@a+3)& (0+255),w,b
  6299  0005EC  5B74               	subwfb	(___fladd@b+3)& (0+255),f,b
  6300  0005EE                     l942:
  6301                           
  6302                           ; BSR set to: 0
  6303  0005EE  5171               	movf	___fladd@b& (0+255),w,b
  6304  0005F0  1172               	iorwf	(___fladd@b+1)& (0+255),w,b
  6305  0005F2  1173               	iorwf	(___fladd@b+2)& (0+255),w,b
  6306  0005F4  1174               	iorwf	(___fladd@b+3)& (0+255),w,b
  6307  0005F6  A4D8               	btfss	status,2,c
  6308  0005F8  EF00  F003         	goto	u4781
  6309  0005FC  EF02  F003         	goto	u4780
  6310  000600                     u4781:
  6311  000600  EF37  F003         	goto	l4550
  6312  000604                     u4780:
  6313  000604                     
  6314                           ; BSR set to: 0
  6315  000604  5180               	movf	___fladd@grs& (0+255),w,b
  6316  000606  A4D8               	btfss	status,2,c
  6317  000608  EF08  F003         	goto	u4791
  6318  00060C  EF0A  F003         	goto	u4790
  6319  000610                     u4791:
  6320  000610  EF37  F003         	goto	l4550
  6321  000614                     u4790:
  6322  000614                     
  6323                           ; BSR set to: 0
  6324  000614  0E00               	movlw	0
  6325  000616  6F71               	movwf	?___fladd& (0+255),b
  6326  000618  0E00               	movlw	0
  6327  00061A  6F72               	movwf	(?___fladd+1)& (0+255),b
  6328  00061C  0E00               	movlw	0
  6329  00061E  6F73               	movwf	(?___fladd+2)& (0+255),b
  6330  000620  0E00               	movlw	0
  6331  000622  6F74               	movwf	(?___fladd+3)& (0+255),b
  6332  000624  EFD2  F003         	goto	l934
  6333  000628                     l4534:
  6334                           
  6335                           ; BSR set to: 0
  6336  000628  90D8               	bcf	status,0,c
  6337  00062A  3771               	rlcf	___fladd@b& (0+255),f,b
  6338  00062C  3772               	rlcf	(___fladd@b+1)& (0+255),f,b
  6339  00062E  3773               	rlcf	(___fladd@b+2)& (0+255),f,b
  6340  000630  3774               	rlcf	(___fladd@b+3)& (0+255),f,b
  6341  000632                     
  6342                           ; BSR set to: 0
  6343  000632  AF80               	btfss	___fladd@grs& (0+255),7,b
  6344  000634  EF1E  F003         	goto	u4801
  6345  000638  EF20  F003         	goto	u4800
  6346  00063C                     u4801:
  6347  00063C  EF21  F003         	goto	l4540
  6348  000640                     u4800:
  6349  000640                     
  6350                           ; BSR set to: 0
  6351  000640  8171               	bsf	___fladd@b& (0+255),0,b
  6352  000642                     l4540:
  6353                           
  6354                           ; BSR set to: 0
  6355  000642  A180               	btfss	___fladd@grs& (0+255),0,b
  6356  000644  EF26  F003         	goto	u4811
  6357  000648  EF28  F003         	goto	u4810
  6358  00064C                     u4811:
  6359  00064C  EF2C  F003         	goto	l4544
  6360  000650                     u4810:
  6361  000650                     
  6362                           ; BSR set to: 0
  6363  000650  80D8               	bsf	status,0,c
  6364  000652  3780               	rlcf	___fladd@grs& (0+255),f,b
  6365  000654  EF2E  F003         	goto	l4546
  6366  000658                     l4544:
  6367                           
  6368                           ; BSR set to: 0
  6369  000658  90D8               	bcf	status,0,c
  6370  00065A  3780               	rlcf	___fladd@grs& (0+255),f,b
  6371  00065C                     l4546:
  6372                           
  6373                           ; BSR set to: 0
  6374  00065C  517F               	movf	___fladd@bexp& (0+255),w,b
  6375  00065E  B4D8               	btfsc	status,2,c
  6376  000660  EF34  F003         	goto	u4821
  6377  000664  EF36  F003         	goto	u4820
  6378  000668                     u4821:
  6379  000668  EF37  F003         	goto	l4550
  6380  00066C                     u4820:
  6381  00066C                     
  6382                           ; BSR set to: 0
  6383  00066C  077F               	decf	___fladd@bexp& (0+255),f,b
  6384  00066E                     l4550:
  6385                           
  6386                           ; BSR set to: 0
  6387  00066E  AF73               	btfss	(___fladd@b+2)& (0+255),7,b
  6388  000670  EF3C  F003         	goto	u4831
  6389  000674  EF3E  F003         	goto	u4830
  6390  000678                     u4831:
  6391  000678  EF14  F003         	goto	l4534
  6392  00067C                     u4830:
  6393  00067C                     l4552:
  6394                           
  6395                           ; BSR set to: 0
  6396  00067C  0E00               	movlw	0
  6397  00067E  6F7E               	movwf	___fladd@aexp& (0+255),b
  6398  000680                     
  6399                           ; BSR set to: 0
  6400  000680  AF80               	btfss	___fladd@grs& (0+255),7,b
  6401  000682  EF45  F003         	goto	u4841
  6402  000686  EF47  F003         	goto	u4840
  6403  00068A                     u4841:
  6404  00068A  EF5F  F003         	goto	l951
  6405  00068E                     u4840:
  6406  00068E                     
  6407                           ; BSR set to: 0
  6408  00068E  C080  F079         	movff	___fladd@grs,??___fladd
  6409  000692  0E7F               	movlw	127
  6410  000694  1779               	andwf	??___fladd& (0+255),f,b
  6411  000696  B4D8               	btfsc	status,2,c
  6412  000698  EF50  F003         	goto	u4851
  6413  00069C  EF52  F003         	goto	u4850
  6414  0006A0                     u4851:
  6415  0006A0  EF56  F003         	goto	l952
  6416  0006A4                     u4850:
  6417  0006A4                     l4558:
  6418                           
  6419                           ; BSR set to: 0
  6420  0006A4  0E01               	movlw	1
  6421  0006A6  6F7E               	movwf	___fladd@aexp& (0+255),b
  6422  0006A8  EF5F  F003         	goto	l951
  6423  0006AC                     l952:
  6424                           
  6425                           ; BSR set to: 0
  6426  0006AC  A171               	btfss	___fladd@b& (0+255),0,b
  6427  0006AE  EF5B  F003         	goto	u4861
  6428  0006B2  EF5D  F003         	goto	u4860
  6429  0006B6                     u4861:
  6430  0006B6  EF5F  F003         	goto	l951
  6431  0006BA                     u4860:
  6432  0006BA  EF52  F003         	goto	l4558
  6433  0006BE                     l951:
  6434                           
  6435                           ; BSR set to: 0
  6436  0006BE  517E               	movf	___fladd@aexp& (0+255),w,b
  6437  0006C0  B4D8               	btfsc	status,2,c
  6438  0006C2  EF65  F003         	goto	u4871
  6439  0006C6  EF67  F003         	goto	u4870
  6440  0006CA                     u4871:
  6441  0006CA  EF92  F003         	goto	l4570
  6442  0006CE                     u4870:
  6443  0006CE                     
  6444                           ; BSR set to: 0
  6445  0006CE  0E01               	movlw	1
  6446  0006D0  2771               	addwf	___fladd@b& (0+255),f,b
  6447  0006D2  0E00               	movlw	0
  6448  0006D4  2372               	addwfc	(___fladd@b+1)& (0+255),f,b
  6449  0006D6  2373               	addwfc	(___fladd@b+2)& (0+255),f,b
  6450  0006D8  2374               	addwfc	(___fladd@b+3)& (0+255),f,b
  6451  0006DA                     
  6452                           ; BSR set to: 0
  6453  0006DA  A174               	btfss	(___fladd@b+3)& (0+255),0,b
  6454  0006DC  EF72  F003         	goto	u4881
  6455  0006E0  EF74  F003         	goto	u4880
  6456  0006E4                     u4881:
  6457  0006E4  EF92  F003         	goto	l4570
  6458  0006E8                     u4880:
  6459  0006E8                     
  6460                           ; BSR set to: 0
  6461  0006E8  C071  F079         	movff	___fladd@b,??___fladd
  6462  0006EC  C072  F07A         	movff	___fladd@b+1,??___fladd+1
  6463  0006F0  C073  F07B         	movff	___fladd@b+2,??___fladd+2
  6464  0006F4  C074  F07C         	movff	___fladd@b+3,??___fladd+3
  6465  0006F8  357C               	rlcf	(??___fladd+3)& (0+255),w,b
  6466  0006FA  337C               	rrcf	(??___fladd+3)& (0+255),f,b
  6467  0006FC  337B               	rrcf	(??___fladd+2)& (0+255),f,b
  6468  0006FE  337A               	rrcf	(??___fladd+1)& (0+255),f,b
  6469  000700  3379               	rrcf	??___fladd& (0+255),f,b
  6470  000702  C079  F071         	movff	??___fladd,___fladd@b
  6471  000706  C07A  F072         	movff	??___fladd+1,___fladd@b+1
  6472  00070A  C07B  F073         	movff	??___fladd+2,___fladd@b+2
  6473  00070E  C07C  F074         	movff	??___fladd+3,___fladd@b+3
  6474  000712  297F               	incf	___fladd@bexp& (0+255),w,b
  6475  000714  B4D8               	btfsc	status,2,c
  6476  000716  EF8F  F003         	goto	u4891
  6477  00071A  EF91  F003         	goto	u4890
  6478  00071E                     u4891:
  6479  00071E  EF92  F003         	goto	l4570
  6480  000722                     u4890:
  6481  000722                     
  6482                           ; BSR set to: 0
  6483  000722  2B7F               	incf	___fladd@bexp& (0+255),f,b
  6484  000724                     l4570:
  6485                           
  6486                           ; BSR set to: 0
  6487  000724  297F               	incf	___fladd@bexp& (0+255),w,b
  6488  000726  B4D8               	btfsc	status,2,c
  6489  000728  EF98  F003         	goto	u4901
  6490  00072C  EF9A  F003         	goto	u4900
  6491  000730                     u4901:
  6492  000730  EFA2  F003         	goto	l4574
  6493  000734                     u4900:
  6494  000734                     
  6495                           ; BSR set to: 0
  6496  000734  517F               	movf	___fladd@bexp& (0+255),w,b
  6497  000736  A4D8               	btfss	status,2,c
  6498  000738  EFA0  F003         	goto	u4911
  6499  00073C  EFA2  F003         	goto	u4910
  6500  000740                     u4911:
  6501  000740  EFB4  F003         	goto	l4578
  6502  000744                     u4910:
  6503  000744                     l4574:
  6504                           
  6505                           ; BSR set to: 0
  6506  000744  0E00               	movlw	0
  6507  000746  6F71               	movwf	___fladd@b& (0+255),b
  6508  000748  0E00               	movlw	0
  6509  00074A  6F72               	movwf	(___fladd@b+1)& (0+255),b
  6510  00074C  0E00               	movlw	0
  6511  00074E  6F73               	movwf	(___fladd@b+2)& (0+255),b
  6512  000750  0E00               	movlw	0
  6513  000752  6F74               	movwf	(___fladd@b+3)& (0+255),b
  6514  000754  517F               	movf	___fladd@bexp& (0+255),w,b
  6515  000756  A4D8               	btfss	status,2,c
  6516  000758  EFB0  F003         	goto	u4921
  6517  00075C  EFB2  F003         	goto	u4920
  6518  000760                     u4921:
  6519  000760  EFB4  F003         	goto	l4578
  6520  000764                     u4920:
  6521  000764                     
  6522                           ; BSR set to: 0
  6523  000764  0E00               	movlw	0
  6524  000766  6F7D               	movwf	___fladd@signs& (0+255),b
  6525  000768                     l4578:
  6526                           
  6527                           ; BSR set to: 0
  6528  000768  A17F               	btfss	___fladd@bexp& (0+255),0,b
  6529  00076A  EFB9  F003         	goto	u4931
  6530  00076E  EFBB  F003         	goto	u4930
  6531  000772                     u4931:
  6532  000772  EFBE  F003         	goto	l4582
  6533  000776                     u4930:
  6534  000776                     
  6535                           ; BSR set to: 0
  6536  000776  8F73               	bsf	(___fladd@b+2)& (0+255),7,b
  6537  000778  EFBF  F003         	goto	l4584
  6538  00077C                     l4582:
  6539                           
  6540                           ; BSR set to: 0
  6541  00077C  9F73               	bcf	(___fladd@b+2)& (0+255),7,b
  6542  00077E                     l4584:
  6543                           
  6544                           ; BSR set to: 0
  6545  00077E  90D8               	bcf	status,0,c
  6546  000780  317F               	rrcf	___fladd@bexp& (0+255),w,b
  6547  000782  6F74               	movwf	(___fladd@b+3)& (0+255),b
  6548  000784                     
  6549                           ; BSR set to: 0
  6550  000784  AF7D               	btfss	___fladd@signs& (0+255),7,b
  6551  000786  EFC7  F003         	goto	u4941
  6552  00078A  EFC9  F003         	goto	u4940
  6553  00078E                     u4941:
  6554  00078E  EFCA  F003         	goto	l4590
  6555  000792                     u4940:
  6556  000792                     
  6557                           ; BSR set to: 0
  6558  000792  8F74               	bsf	(___fladd@b+3)& (0+255),7,b
  6559  000794                     l4590:
  6560                           
  6561                           ; BSR set to: 0
  6562  000794  C071  F071         	movff	___fladd@b,?___fladd
  6563  000798  C072  F072         	movff	___fladd@b+1,?___fladd+1
  6564  00079C  C073  F073         	movff	___fladd@b+2,?___fladd+2
  6565  0007A0  C074  F074         	movff	___fladd@b+3,?___fladd+3
  6566  0007A4                     l934:
  6567                           
  6568                           ; BSR set to: 0
  6569  0007A4  0012               	return		;funcret
  6570  0007A6                     __end_of___fladd:
  6571                           	callstack 0
  6572                           
  6573 ;; *************** function _initTimer0 *****************
  6574 ;; Defined at:
  6575 ;;		line 10 in file "./Timer0.h"
  6576 ;; Parameters:    Size  Location     Type
  6577 ;;  tempoInicial    2   18[COMRAM] int 
  6578 ;; Auto vars:     Size  Location     Type
  6579 ;;		None
  6580 ;; Return value:  Size  Location     Type
  6581 ;;                  1    wreg      void 
  6582 ;; Registers used:
  6583 ;;		wreg, status,2
  6584 ;; Tracked objects:
  6585 ;;		On entry : 0/0
  6586 ;;		On exit  : 0/0
  6587 ;;		Unchanged: 0/0
  6588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6589 ;;      Params:         2       0       0       0
  6590 ;;      Locals:         0       0       0       0
  6591 ;;      Temps:          0       0       0       0
  6592 ;;      Totals:         2       0       0       0
  6593 ;;Total ram usage:        2 bytes
  6594 ;; Hardware stack levels used: 1
  6595 ;; Hardware stack levels required when called: 4
  6596 ;; This function calls:
  6597 ;;		Nothing
  6598 ;; This function is called by:
  6599 ;;		_main
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602                           
  6603                           	psect	text24
  6604  003494                     __ptext24:
  6605                           	callstack 0
  6606  003494                     _initTimer0:
  6607                           	callstack 26
  6608  003494                     
  6609                           ;./Timer0.h: 13:     T0CON = 0b11010100;
  6610  003494  0ED4               	movlw	212
  6611  003496  6ED5               	movwf	213,c	;volatile
  6612  003498                     
  6613                           ;./Timer0.h: 14:     TMR0L = tempoInicial;
  6614  003498  C013  FFD6         	movff	initTimer0@tempoInicial,4054	;volatile
  6615  00349C  0012               	return		;funcret
  6616  00349E                     __end_of_initTimer0:
  6617                           	callstack 0
  6618                           
  6619 ;; *************** function _configUSART *****************
  6620 ;; Defined at:
  6621 ;;		line 9 in file "./bluetooth.h"
  6622 ;; Parameters:    Size  Location     Type
  6623 ;;		None
  6624 ;; Auto vars:     Size  Location     Type
  6625 ;;		None
  6626 ;; Return value:  Size  Location     Type
  6627 ;;                  1    wreg      void 
  6628 ;; Registers used:
  6629 ;;		wreg, status,2
  6630 ;; Tracked objects:
  6631 ;;		On entry : 0/0
  6632 ;;		On exit  : 0/0
  6633 ;;		Unchanged: 0/0
  6634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6635 ;;      Params:         0       0       0       0
  6636 ;;      Locals:         0       0       0       0
  6637 ;;      Temps:          0       0       0       0
  6638 ;;      Totals:         0       0       0       0
  6639 ;;Total ram usage:        0 bytes
  6640 ;; Hardware stack levels used: 1
  6641 ;; Hardware stack levels required when called: 4
  6642 ;; This function calls:
  6643 ;;		Nothing
  6644 ;; This function is called by:
  6645 ;;		_main
  6646 ;; This function uses a non-reentrant model
  6647 ;;
  6648                           
  6649                           	psect	text25
  6650  003432                     __ptext25:
  6651                           	callstack 0
  6652  003432                     _configUSART:
  6653                           	callstack 26
  6654  003432                     
  6655                           ;./bluetooth.h: 10:     SPBRG = 0x81;
  6656  003432  0E81               	movlw	129
  6657  003434  6EAF               	movwf	175,c	;volatile
  6658  003436                     
  6659                           ;./bluetooth.h: 22:     TXSTAbits.BRGH = 1;
  6660  003436  84AC               	bsf	172,2,c	;volatile
  6661  003438                     
  6662                           ;./bluetooth.h: 24:     TXSTAbits.SYNC = 0;
  6663  003438  98AC               	bcf	172,4,c	;volatile
  6664  00343A                     
  6665                           ;./bluetooth.h: 25:     TXSTAbits.TX9 = 0;
  6666  00343A  9CAC               	bcf	172,6,c	;volatile
  6667  00343C                     
  6668                           ;./bluetooth.h: 26:     TXSTAbits.TXEN = 1;
  6669  00343C  8AAC               	bsf	172,5,c	;volatile
  6670  00343E                     
  6671                           ;./bluetooth.h: 27:     PIE1bits.TXIE = 0;
  6672  00343E  989D               	bcf	157,4,c	;volatile
  6673  003440                     
  6674                           ;./bluetooth.h: 29:     RCSTAbits.SPEN = 1;
  6675  003440  8EAB               	bsf	171,7,c	;volatile
  6676  003442                     
  6677                           ;./bluetooth.h: 30:     RCSTAbits.RX9 = 0;
  6678  003442  9CAB               	bcf	171,6,c	;volatile
  6679  003444                     
  6680                           ;./bluetooth.h: 31:     RCSTAbits.CREN = 1;
  6681  003444  88AB               	bsf	171,4,c	;volatile
  6682  003446                     
  6683                           ;./bluetooth.h: 32:     TRISCbits.TRISC6 = 0;
  6684  003446  9C94               	bcf	148,6,c	;volatile
  6685  003448                     
  6686                           ;./bluetooth.h: 33:     TRISCbits.TRISC7 = 1;
  6687  003448  8E94               	bsf	148,7,c	;volatile
  6688  00344A                     
  6689                           ;./bluetooth.h: 35:     PIR1bits.RCIF = 0;
  6690  00344A  9A9E               	bcf	158,5,c	;volatile
  6691  00344C                     
  6692                           ;./bluetooth.h: 36:     PIE1bits.RCIE = 1;
  6693  00344C  8A9D               	bsf	157,5,c	;volatile
  6694  00344E  0012               	return		;funcret
  6695  003450                     __end_of_configUSART:
  6696                           	callstack 0
  6697                           
  6698 ;; *************** function _configPWM *****************
  6699 ;; Defined at:
  6700 ;;		line 9 in file "./PWM.h"
  6701 ;; Parameters:    Size  Location     Type
  6702 ;;		None
  6703 ;; Auto vars:     Size  Location     Type
  6704 ;;		None
  6705 ;; Return value:  Size  Location     Type
  6706 ;;                  1    wreg      void 
  6707 ;; Registers used:
  6708 ;;		wreg, status,2
  6709 ;; Tracked objects:
  6710 ;;		On entry : 0/0
  6711 ;;		On exit  : 0/0
  6712 ;;		Unchanged: 0/0
  6713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6714 ;;      Params:         0       0       0       0
  6715 ;;      Locals:         0       0       0       0
  6716 ;;      Temps:          0       0       0       0
  6717 ;;      Totals:         0       0       0       0
  6718 ;;Total ram usage:        0 bytes
  6719 ;; Hardware stack levels used: 1
  6720 ;; Hardware stack levels required when called: 4
  6721 ;; This function calls:
  6722 ;;		Nothing
  6723 ;; This function is called by:
  6724 ;;		_main
  6725 ;; This function uses a non-reentrant model
  6726 ;;
  6727                           
  6728                           	psect	text26
  6729  0033CA                     __ptext26:
  6730                           	callstack 0
  6731  0033CA                     _configPWM:
  6732                           	callstack 26
  6733  0033CA                     
  6734                           ;./PWM.h: 11:     PTCON0 = 0b00000000;
  6735  0033CA  0E00               	movlw	0
  6736  0033CC  6E7F               	movwf	127,c	;volatile
  6737                           
  6738                           ;./PWM.h: 12:     PTCON1 = 0b10000000;
  6739  0033CE  0E80               	movlw	128
  6740  0033D0  6E7E               	movwf	126,c	;volatile
  6741                           
  6742                           ;./PWM.h: 13:     PWMCON0 = 0b01011111;
  6743  0033D2  0E5F               	movlw	95
  6744  0033D4  6E6F               	movwf	111,c	;volatile
  6745                           
  6746                           ;./PWM.h: 14:     PWMCON1 = 0b00000001;
  6747  0033D6  0E01               	movlw	1
  6748  0033D8  6E6E               	movwf	110,c	;volatile
  6749                           
  6750                           ;./PWM.h: 15:     DTCON = 0b00010000;
  6751  0033DA  0E10               	movlw	16
  6752  0033DC  6E6D               	movwf	109,c	;volatile
  6753  0033DE                     
  6754                           ;./PWM.h: 16:     OVDCOND = 0b11111111;
  6755  0033DE  686B               	setf	107,c	;volatile
  6756                           
  6757                           ;./PWM.h: 17:     OVDCONS = 0b00000000;
  6758  0033E0  0E00               	movlw	0
  6759  0033E2  6E6A               	movwf	106,c	;volatile
  6760                           
  6761                           ;./PWM.h: 18:     PTPERL = 0b10010110;
  6762  0033E4  0E96               	movlw	150
  6763  0033E6  6E7B               	movwf	123,c	;volatile
  6764                           
  6765                           ;./PWM.h: 19:     PTPERH = 0b00000000;
  6766  0033E8  0E00               	movlw	0
  6767  0033EA  6E7A               	movwf	122,c	;volatile
  6768  0033EC  0012               	return		;funcret
  6769  0033EE                     __end_of_configPWM:
  6770                           	callstack 0
  6771                           
  6772 ;; *************** function _configBits *****************
  6773 ;; Defined at:
  6774 ;;		line 11 in file "./geral.h"
  6775 ;; Parameters:    Size  Location     Type
  6776 ;;		None
  6777 ;; Auto vars:     Size  Location     Type
  6778 ;;		None
  6779 ;; Return value:  Size  Location     Type
  6780 ;;                  1    wreg      void 
  6781 ;; Registers used:
  6782 ;;		None
  6783 ;; Tracked objects:
  6784 ;;		On entry : 0/0
  6785 ;;		On exit  : 0/0
  6786 ;;		Unchanged: 0/0
  6787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6788 ;;      Params:         0       0       0       0
  6789 ;;      Locals:         0       0       0       0
  6790 ;;      Temps:          0       0       0       0
  6791 ;;      Totals:         0       0       0       0
  6792 ;;Total ram usage:        0 bytes
  6793 ;; Hardware stack levels used: 1
  6794 ;; Hardware stack levels required when called: 4
  6795 ;; This function calls:
  6796 ;;		Nothing
  6797 ;; This function is called by:
  6798 ;;		_main
  6799 ;; This function uses a non-reentrant model
  6800 ;;
  6801                           
  6802                           	psect	text27
  6803  0034BC                     __ptext27:
  6804                           	callstack 0
  6805  0034BC                     _configBits:
  6806                           	callstack 26
  6807  0034BC  0012               	return		;funcret
  6808  0034BE                     __end_of_configBits:
  6809                           	callstack 0
  6810                           
  6811 ;; *************** function _configAD *****************
  6812 ;; Defined at:
  6813 ;;		line 11 in file "./ADC.h"
  6814 ;; Parameters:    Size  Location     Type
  6815 ;;		None
  6816 ;; Auto vars:     Size  Location     Type
  6817 ;;		None
  6818 ;; Return value:  Size  Location     Type
  6819 ;;                  1    wreg      void 
  6820 ;; Registers used:
  6821 ;;		wreg, status,2
  6822 ;; Tracked objects:
  6823 ;;		On entry : 0/0
  6824 ;;		On exit  : 0/0
  6825 ;;		Unchanged: 0/0
  6826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6827 ;;      Params:         0       0       0       0
  6828 ;;      Locals:         0       0       0       0
  6829 ;;      Temps:          0       0       0       0
  6830 ;;      Totals:         0       0       0       0
  6831 ;;Total ram usage:        0 bytes
  6832 ;; Hardware stack levels used: 1
  6833 ;; Hardware stack levels required when called: 4
  6834 ;; This function calls:
  6835 ;;		Nothing
  6836 ;; This function is called by:
  6837 ;;		_main
  6838 ;; This function uses a non-reentrant model
  6839 ;;
  6840                           
  6841                           	psect	text28
  6842  0033EE                     __ptext28:
  6843                           	callstack 0
  6844  0033EE                     _configAD:
  6845                           	callstack 26
  6846  0033EE                     
  6847                           ;./ADC.h: 13:     ADCON1bits.VCFG0 = 0;
  6848  0033EE  9CC1               	bcf	193,6,c	;volatile
  6849                           
  6850                           ;./ADC.h: 14:     ADCON1bits.VCFG1 = 0;
  6851  0033F0  9EC1               	bcf	193,7,c	;volatile
  6852                           
  6853                           ;./ADC.h: 18:     ADCON0bits.ACONV = 0;
  6854  0033F2  9AC2               	bcf	194,5,c	;volatile
  6855                           
  6856                           ;./ADC.h: 19:     ADCON0bits.ACSCH = 0;
  6857  0033F4  98C2               	bcf	194,4,c	;volatile
  6858  0033F6                     
  6859                           ;./ADC.h: 21:     ADCON0bits.ACMOD = 0b00;
  6860  0033F6  0EF3               	movlw	-13
  6861  0033F8  16C2               	andwf	194,f,c	;volatile
  6862  0033FA                     
  6863                           ;./ADC.h: 23:     ADCON2bits.ADFM = 1;
  6864  0033FA  8EC0               	bsf	192,7,c	;volatile
  6865                           
  6866                           ;./ADC.h: 25:     ADCON2bits.ACQT = 0b0110;
  6867  0033FC  50C0               	movf	192,w,c	;volatile
  6868  0033FE  0B87               	andlw	-121
  6869  003400  0930               	iorlw	48
  6870  003402  6EC0               	movwf	192,c	;volatile
  6871                           
  6872                           ;./ADC.h: 26:     ADCON2bits.ADCS = 0b101;
  6873  003404  50C0               	movf	192,w,c	;volatile
  6874  003406  0BF8               	andlw	-8
  6875  003408  0905               	iorlw	5
  6876  00340A  6EC0               	movwf	192,c	;volatile
  6877                           
  6878                           ;./ADC.h: 32:     ADCON3 = 0b00000000;
  6879  00340C  0E00               	movlw	0
  6880  00340E  6E9A               	movwf	154,c	;volatile
  6881  003410  0012               	return		;funcret
  6882  003412                     __end_of_configAD:
  6883                           	callstack 0
  6884                           
  6885 ;; *************** function _UARTReadChar *****************
  6886 ;; Defined at:
  6887 ;;		line 43 in file "./bluetooth.h"
  6888 ;; Parameters:    Size  Location     Type
  6889 ;;		None
  6890 ;; Auto vars:     Size  Location     Type
  6891 ;;  ler             1   18[COMRAM] unsigned char 
  6892 ;; Return value:  Size  Location     Type
  6893 ;;                  1    wreg      unsigned char 
  6894 ;; Registers used:
  6895 ;;		wreg, status,2
  6896 ;; Tracked objects:
  6897 ;;		On entry : 0/0
  6898 ;;		On exit  : 0/0
  6899 ;;		Unchanged: 0/0
  6900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6901 ;;      Params:         0       0       0       0
  6902 ;;      Locals:         1       0       0       0
  6903 ;;      Temps:          0       0       0       0
  6904 ;;      Totals:         1       0       0       0
  6905 ;;Total ram usage:        1 bytes
  6906 ;; Hardware stack levels used: 1
  6907 ;; Hardware stack levels required when called: 4
  6908 ;; This function calls:
  6909 ;;		Nothing
  6910 ;; This function is called by:
  6911 ;;		_main
  6912 ;; This function uses a non-reentrant model
  6913 ;;
  6914                           
  6915                           	psect	text29
  6916  0034A8                     __ptext29:
  6917                           	callstack 0
  6918  0034A8                     _UARTReadChar:
  6919                           	callstack 26
  6920  0034A8                     
  6921                           ;./bluetooth.h: 44:     char ler = RCREG;
  6922  0034A8  CFAE F013          	movff	4014,UARTReadChar@ler	;volatile
  6923  0034AC                     
  6924                           ;./bluetooth.h: 45:     return ler;
  6925  0034AC  5013               	movf	UARTReadChar@ler^0,w,c
  6926  0034AE  0012               	return		;funcret
  6927  0034B0                     __end_of_UARTReadChar:
  6928                           	callstack 0
  6929                           
  6930 ;; *************** function _PrintSensores *****************
  6931 ;; Defined at:
  6932 ;;		line 136 in file "./Seguidor.h"
  6933 ;; Parameters:    Size  Location     Type
  6934 ;;		None
  6935 ;; Auto vars:     Size  Location     Type
  6936 ;;  millisAtual     4   76[BANK0 ] unsigned long 
  6937 ;; Return value:  Size  Location     Type
  6938 ;;                  1    wreg      void 
  6939 ;; Registers used:
  6940 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6941 ;; Tracked objects:
  6942 ;;		On entry : 0/0
  6943 ;;		On exit  : 0/0
  6944 ;;		Unchanged: 0/0
  6945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6946 ;;      Params:         0       0       0       0
  6947 ;;      Locals:         0       4       0       0
  6948 ;;      Temps:          0       4       0       0
  6949 ;;      Totals:         0       8       0       0
  6950 ;;Total ram usage:        8 bytes
  6951 ;; Hardware stack levels used: 1
  6952 ;; Hardware stack levels required when called: 7
  6953 ;; This function calls:
  6954 ;;		_UARTSendString
  6955 ;;		___fleq
  6956 ;;		_getAD_AN
  6957 ;;		_valorConvUART
  6958 ;; This function is called by:
  6959 ;;		_main
  6960 ;; This function uses a non-reentrant model
  6961 ;;
  6962                           
  6963                           	psect	text30
  6964  0019D4                     __ptext30:
  6965                           	callstack 0
  6966  0019D4                     _PrintSensores:
  6967                           	callstack 23
  6968  0019D4                     
  6969                           ;./Seguidor.h: 138:     unsigned long millisAtual = millis;
  6970  0019D4  C0E6  F0AC         	movff	_millis,PrintSensores@millisAtual
  6971  0019D8  C0E7  F0AD         	movff	_millis+1,PrintSensores@millisAtual+1
  6972  0019DC  C0E8  F0AE         	movff	_millis+2,PrintSensores@millisAtual+2
  6973  0019E0  C0E9  F0AF         	movff	_millis+3,PrintSensores@millisAtual+3
  6974  0019E4                     
  6975                           ;./Seguidor.h: 139:     if (millisAtual - millisPassado > 500) {
  6976  0019E4  0100               	movlb	0	; () banked
  6977  0019E6  51B2               	movf	_millisPassado& (0+255),w,b
  6978  0019E8  5DAC               	subwf	PrintSensores@millisAtual& (0+255),w,b
  6979  0019EA  6FA8               	movwf	??_PrintSensores& (0+255),b
  6980  0019EC  51B3               	movf	(_millisPassado+1)& (0+255),w,b
  6981  0019EE  59AD               	subwfb	(PrintSensores@millisAtual+1)& (0+255),w,b
  6982  0019F0  6FA9               	movwf	(??_PrintSensores+1)& (0+255),b
  6983  0019F2  51B4               	movf	(_millisPassado+2)& (0+255),w,b
  6984  0019F4  59AE               	subwfb	(PrintSensores@millisAtual+2)& (0+255),w,b
  6985  0019F6  6FAA               	movwf	(??_PrintSensores+2)& (0+255),b
  6986  0019F8  51B5               	movf	(_millisPassado+3)& (0+255),w,b
  6987  0019FA  59AF               	subwfb	(PrintSensores@millisAtual+3)& (0+255),w,b
  6988  0019FC  6FAB               	movwf	(??_PrintSensores+3)& (0+255),b
  6989  0019FE  51AB               	movf	(??_PrintSensores+3)& (0+255),w,b
  6990  001A00  11AA               	iorwf	(??_PrintSensores+2)& (0+255),w,b
  6991  001A02  E10B               	bnz	u5280
  6992  001A04  0EF5               	movlw	245
  6993  001A06  5DA8               	subwf	??_PrintSensores& (0+255),w,b
  6994  001A08  0E01               	movlw	1
  6995  001A0A  59A9               	subwfb	(??_PrintSensores+1)& (0+255),w,b
  6996  001A0C  A0D8               	btfss	status,0,c
  6997  001A0E  EF0B  F00D         	goto	u5281
  6998  001A12  EF0D  F00D         	goto	u5280
  6999  001A16                     u5281:
  7000  001A16  EF43  F00E         	goto	l352
  7001  001A1A                     u5280:
  7002  001A1A                     
  7003                           ; BSR set to: 0
  7004                           ;./Seguidor.h: 140:         millisPassado = millisAtual;
  7005  001A1A  C0AC  F0B2         	movff	PrintSensores@millisAtual,_millisPassado
  7006  001A1E  C0AD  F0B3         	movff	PrintSensores@millisAtual+1,_millisPassado+1
  7007  001A22  C0AE  F0B4         	movff	PrintSensores@millisAtual+2,_millisPassado+2
  7008  001A26  C0AF  F0B5         	movff	PrintSensores@millisAtual+3,_millisPassado+3
  7009  001A2A                     
  7010                           ; BSR set to: 0
  7011                           ;./Seguidor.h: 141:         if (leitura[1] == 1) {
  7012  001A2A  C104  F013         	movff	_leitura+4,___fleq@ff1
  7013  001A2E  C105  F014         	movff	_leitura+5,___fleq@ff1+1
  7014  001A32  C106  F015         	movff	_leitura+6,___fleq@ff1+2
  7015  001A36  C107  F016         	movff	_leitura+7,___fleq@ff1+3
  7016  001A3A  0E00               	movlw	0
  7017  001A3C  6E17               	movwf	___fleq@ff2^0,c
  7018  001A3E  0E00               	movlw	0
  7019  001A40  6E18               	movwf	(___fleq@ff2+1)^0,c
  7020  001A42  0E80               	movlw	128
  7021  001A44  6E19               	movwf	(___fleq@ff2+2)^0,c
  7022  001A46  0E3F               	movlw	63
  7023  001A48  6E1A               	movwf	(___fleq@ff2+3)^0,c
  7024  001A4A  EC7C  F017         	call	___fleq	;wreg free
  7025  001A4E  A0D8               	btfss	status,0,c
  7026  001A50  EF2C  F00D         	goto	u5291
  7027  001A54  EF2E  F00D         	goto	u5290
  7028  001A58                     u5291:
  7029  001A58  EF3B  F00D         	goto	l4882
  7030  001A5C                     u5290:
  7031  001A5C                     
  7032                           ;./Seguidor.h: 142:             UARTSendString("\nAN1:preto ", 16);
  7033  001A5C  0E59               	movlw	low STR_39
  7034  001A5E  0100               	movlb	0	; () banked
  7035  001A60  6FA0               	movwf	UARTSendString@str& (0+255),b
  7036  001A62  0E3F               	movlw	high STR_39
  7037  001A64  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  7038  001A66  0E00               	movlw	0
  7039  001A68  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  7040  001A6A  0E10               	movlw	16
  7041  001A6C  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  7042  001A6E  ECA0  F015         	call	_UARTSendString	;wreg free
  7043                           
  7044                           ;./Seguidor.h: 143:         } else {
  7045  001A72  EF46  F00D         	goto	l4884
  7046  001A76                     l4882:
  7047                           
  7048                           ;./Seguidor.h: 144:             UARTSendString("\nAN1:branco ", 16);
  7049  001A76  0E18               	movlw	low STR_40
  7050  001A78  0100               	movlb	0	; () banked
  7051  001A7A  6FA0               	movwf	UARTSendString@str& (0+255),b
  7052  001A7C  0E3F               	movlw	high STR_40
  7053  001A7E  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  7054  001A80  0E00               	movlw	0
  7055  001A82  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  7056  001A84  0E10               	movlw	16
  7057  001A86  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  7058  001A88  ECA0  F015         	call	_UARTSendString	;wreg free
  7059  001A8C                     l4884:
  7060                           
  7061                           ;./Seguidor.h: 147:         if (leitura[2] == 1) {
  7062  001A8C  C108  F013         	movff	_leitura+8,___fleq@ff1
  7063  001A90  C109  F014         	movff	_leitura+9,___fleq@ff1+1
  7064  001A94  C10A  F015         	movff	_leitura+10,___fleq@ff1+2
  7065  001A98  C10B  F016         	movff	_leitura+11,___fleq@ff1+3
  7066  001A9C  0E00               	movlw	0
  7067  001A9E  6E17               	movwf	___fleq@ff2^0,c
  7068  001AA0  0E00               	movlw	0
  7069  001AA2  6E18               	movwf	(___fleq@ff2+1)^0,c
  7070  001AA4  0E80               	movlw	128
  7071  001AA6  6E19               	movwf	(___fleq@ff2+2)^0,c
  7072  001AA8  0E3F               	movlw	63
  7073  001AAA  6E1A               	movwf	(___fleq@ff2+3)^0,c
  7074  001AAC  EC7C  F017         	call	___fleq	;wreg free
  7075  001AB0  A0D8               	btfss	status,0,c
  7076  001AB2  EF5D  F00D         	goto	u5301
  7077  001AB6  EF5F  F00D         	goto	u5300
  7078  001ABA                     u5301:
  7079  001ABA  EF6C  F00D         	goto	l4888
  7080  001ABE                     u5300:
  7081  001ABE                     
  7082                           ;./Seguidor.h: 148:             UARTSendString("\nAN2:preto", 16);
  7083  001ABE  0EA1               	movlw	low STR_41
  7084  001AC0  0100               	movlb	0	; () banked
  7085  001AC2  6FA0               	movwf	UARTSendString@str& (0+255),b
  7086  001AC4  0E3F               	movlw	high STR_41
  7087  001AC6  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  7088  001AC8  0E00               	movlw	0
  7089  001ACA  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  7090  001ACC  0E10               	movlw	16
  7091  001ACE  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  7092  001AD0  ECA0  F015         	call	_UARTSendString	;wreg free
  7093                           
  7094                           ;./Seguidor.h: 149:         } else {
  7095  001AD4  EF77  F00D         	goto	l4890
  7096  001AD8                     l4888:
  7097                           
  7098                           ;./Seguidor.h: 150:             UARTSendString("\nAN2:branco", 16);
  7099  001AD8  0E95               	movlw	low STR_42
  7100  001ADA  0100               	movlb	0	; () banked
  7101  001ADC  6FA0               	movwf	UARTSendString@str& (0+255),b
  7102  001ADE  0E3F               	movlw	high STR_42
  7103  001AE0  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  7104  001AE2  0E00               	movlw	0
  7105  001AE4  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  7106  001AE6  0E10               	movlw	16
  7107  001AE8  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  7108  001AEA  ECA0  F015         	call	_UARTSendString	;wreg free
  7109  001AEE                     l4890:
  7110                           
  7111                           ;./Seguidor.h: 153:         if (leitura[3] == 1) {
  7112  001AEE  C10C  F013         	movff	_leitura+12,___fleq@ff1
  7113  001AF2  C10D  F014         	movff	_leitura+13,___fleq@ff1+1
  7114  001AF6  C10E  F015         	movff	_leitura+14,___fleq@ff1+2
  7115  001AFA  C10F  F016         	movff	_leitura+15,___fleq@ff1+3
  7116  001AFE  0E00               	movlw	0
  7117  001B00  6E17               	movwf	___fleq@ff2^0,c
  7118  001B02  0E00               	movlw	0
  7119  001B04  6E18               	movwf	(___fleq@ff2+1)^0,c
  7120  001B06  0E80               	movlw	128
  7121  001B08  6E19               	movwf	(___fleq@ff2+2)^0,c
  7122  001B0A  0E3F               	movlw	63
  7123  001B0C  6E1A               	movwf	(___fleq@ff2+3)^0,c
  7124  001B0E  EC7C  F017         	call	___fleq	;wreg free
  7125  001B12  A0D8               	btfss	status,0,c
  7126  001B14  EF8E  F00D         	goto	u5311
  7127  001B18  EF90  F00D         	goto	u5310
  7128  001B1C                     u5311:
  7129  001B1C  EF9D  F00D         	goto	l4894
  7130  001B20                     u5310:
  7131  001B20                     
  7132                           ;./Seguidor.h: 154:             UARTSendString("\nAN3:preto ", 16);
  7133  001B20  0E65               	movlw	low STR_43
  7134  001B22  0100               	movlb	0	; () banked
  7135  001B24  6FA0               	movwf	UARTSendString@str& (0+255),b
  7136  001B26  0E3F               	movlw	high STR_43
  7137  001B28  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  7138  001B2A  0E00               	movlw	0
  7139  001B2C  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  7140  001B2E  0E10               	movlw	16
  7141  001B30  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  7142  001B32  ECA0  F015         	call	_UARTSendString	;wreg free
  7143                           
  7144                           ;./Seguidor.h: 155:         } else {
  7145  001B36  EFA8  F00D         	goto	l4896
  7146  001B3A                     l4894:
  7147                           
  7148                           ;./Seguidor.h: 156:             UARTSendString("\nAN3:branco ", 16);
  7149  001B3A  0E25               	movlw	low STR_44
  7150  001B3C  0100               	movlb	0	; () banked
  7151  001B3E  6FA0               	movwf	UARTSendString@str& (0+255),b
  7152  001B40  0E3F               	movlw	high STR_44
  7153  001B42  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  7154  001B44  0E00               	movlw	0
  7155  001B46  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  7156  001B48  0E10               	movlw	16
  7157  001B4A  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  7158  001B4C  ECA0  F015         	call	_UARTSendString	;wreg free
  7159  001B50                     l4896:
  7160                           
  7161                           ;./Seguidor.h: 159:         if (leitura[4] == 1) {
  7162  001B50  C110  F013         	movff	_leitura+16,___fleq@ff1
  7163  001B54  C111  F014         	movff	_leitura+17,___fleq@ff1+1
  7164  001B58  C112  F015         	movff	_leitura+18,___fleq@ff1+2
  7165  001B5C  C113  F016         	movff	_leitura+19,___fleq@ff1+3
  7166  001B60  0E00               	movlw	0
  7167  001B62  6E17               	movwf	___fleq@ff2^0,c
  7168  001B64  0E00               	movlw	0
  7169  001B66  6E18               	movwf	(___fleq@ff2+1)^0,c
  7170  001B68  0E80               	movlw	128
  7171  001B6A  6E19               	movwf	(___fleq@ff2+2)^0,c
  7172  001B6C  0E3F               	movlw	63
  7173  001B6E  6E1A               	movwf	(___fleq@ff2+3)^0,c
  7174  001B70  EC7C  F017         	call	___fleq	;wreg free
  7175  001B74  A0D8               	btfss	status,0,c
  7176  001B76  EFBF  F00D         	goto	u5321
  7177  001B7A  EFC1  F00D         	goto	u5320
  7178  001B7E                     u5321:
  7179  001B7E  EFCE  F00D         	goto	l4900
  7180  001B82                     u5320:
  7181  001B82                     
  7182                           ;./Seguidor.h: 160:             UARTSendString("\nAN4:preto ", 16);
  7183  001B82  0E71               	movlw	low STR_45
  7184  001B84  0100               	movlb	0	; () banked
  7185  001B86  6FA0               	movwf	UARTSendString@str& (0+255),b
  7186  001B88  0E3F               	movlw	high STR_45
  7187  001B8A  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  7188  001B8C  0E00               	movlw	0
  7189  001B8E  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  7190  001B90  0E10               	movlw	16
  7191  001B92  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  7192  001B94  ECA0  F015         	call	_UARTSendString	;wreg free
  7193                           
  7194                           ;./Seguidor.h: 161:         } else {
  7195  001B98  EFD9  F00D         	goto	l4902
  7196  001B9C                     l4900:
  7197                           
  7198                           ;./Seguidor.h: 162:             UARTSendString("\nAN4:branco ", 16);
  7199  001B9C  0E32               	movlw	low STR_46
  7200  001B9E  0100               	movlb	0	; () banked
  7201  001BA0  6FA0               	movwf	UARTSendString@str& (0+255),b
  7202  001BA2  0E3F               	movlw	high STR_46
  7203  001BA4  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  7204  001BA6  0E00               	movlw	0
  7205  001BA8  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  7206  001BAA  0E10               	movlw	16
  7207  001BAC  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  7208  001BAE  ECA0  F015         	call	_UARTSendString	;wreg free
  7209  001BB2                     l4902:
  7210                           
  7211                           ;./Seguidor.h: 165:         if (leitura[5] == 1) {
  7212  001BB2  C114  F013         	movff	_leitura+20,___fleq@ff1
  7213  001BB6  C115  F014         	movff	_leitura+21,___fleq@ff1+1
  7214  001BBA  C116  F015         	movff	_leitura+22,___fleq@ff1+2
  7215  001BBE  C117  F016         	movff	_leitura+23,___fleq@ff1+3
  7216  001BC2  0E00               	movlw	0
  7217  001BC4  6E17               	movwf	___fleq@ff2^0,c
  7218  001BC6  0E00               	movlw	0
  7219  001BC8  6E18               	movwf	(___fleq@ff2+1)^0,c
  7220  001BCA  0E80               	movlw	128
  7221  001BCC  6E19               	movwf	(___fleq@ff2+2)^0,c
  7222  001BCE  0E3F               	movlw	63
  7223  001BD0  6E1A               	movwf	(___fleq@ff2+3)^0,c
  7224  001BD2  EC7C  F017         	call	___fleq	;wreg free
  7225  001BD6  A0D8               	btfss	status,0,c
  7226  001BD8  EFF0  F00D         	goto	u5331
  7227  001BDC  EFF2  F00D         	goto	u5330
  7228  001BE0                     u5331:
  7229  001BE0  EFFF  F00D         	goto	l4906
  7230  001BE4                     u5330:
  7231  001BE4                     
  7232                           ;./Seguidor.h: 166:             UARTSendString("\nAN5:preto ", 16);
  7233  001BE4  0E7D               	movlw	low STR_47
  7234  001BE6  0100               	movlb	0	; () banked
  7235  001BE8  6FA0               	movwf	UARTSendString@str& (0+255),b
  7236  001BEA  0E3F               	movlw	high STR_47
  7237  001BEC  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  7238  001BEE  0E00               	movlw	0
  7239  001BF0  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  7240  001BF2  0E10               	movlw	16
  7241  001BF4  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  7242  001BF6  ECA0  F015         	call	_UARTSendString	;wreg free
  7243                           
  7244                           ;./Seguidor.h: 167:         } else {
  7245  001BFA  EF0A  F00E         	goto	l351
  7246  001BFE                     l4906:
  7247                           
  7248                           ;./Seguidor.h: 168:             UARTSendString("\nAN5:branco ", 16);
  7249  001BFE  0E3F               	movlw	low STR_48
  7250  001C00  0100               	movlb	0	; () banked
  7251  001C02  6FA0               	movwf	UARTSendString@str& (0+255),b
  7252  001C04  0E3F               	movlw	high STR_48
  7253  001C06  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  7254  001C08  0E00               	movlw	0
  7255  001C0A  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  7256  001C0C  0E10               	movlw	16
  7257  001C0E  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  7258  001C10  ECA0  F015         	call	_UARTSendString	;wreg free
  7259  001C14                     l351:
  7260                           
  7261                           ;./Seguidor.h: 171:         UARTSendString("\nBAT: ", 16);
  7262  001C14  0EC1               	movlw	low STR_49
  7263  001C16  0100               	movlb	0	; () banked
  7264  001C18  6FA0               	movwf	UARTSendString@str& (0+255),b
  7265  001C1A  0E3F               	movlw	high STR_49
  7266  001C1C  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  7267  001C1E  0E00               	movlw	0
  7268  001C20  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  7269  001C22  0E10               	movlw	16
  7270  001C24  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  7271  001C26  ECA0  F015         	call	_UARTSendString	;wreg free
  7272  001C2A                     
  7273                           ;./Seguidor.h: 172:         UARTSendString(valorConvUART(getAD_AN(6)), 16);
  7274  001C2A  0E00               	movlw	0
  7275  001C2C  0100               	movlb	0	; () banked
  7276  001C2E  6F8C               	movwf	(getAD_AN@porta+1)& (0+255),b
  7277  001C30  0E06               	movlw	6
  7278  001C32  6F8B               	movwf	getAD_AN@porta& (0+255),b
  7279  001C34  EC32  F012         	call	_getAD_AN	;wreg free
  7280  001C38  C08B  F091         	movff	?_getAD_AN,valorConvUART@valor
  7281  001C3C  C08C  F092         	movff	?_getAD_AN+1,valorConvUART@valor+1
  7282  001C40  ECCB  F016         	call	_valorConvUART	;wreg free
  7283  001C44  C091  F0A0         	movff	?_valorConvUART,UARTSendString@str
  7284  001C48  C092  F0A1         	movff	?_valorConvUART+1,UARTSendString@str+1
  7285  001C4C  0E00               	movlw	0
  7286  001C4E  0100               	movlb	0	; () banked
  7287  001C50  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  7288  001C52  0E10               	movlw	16
  7289  001C54  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  7290  001C56  ECA0  F015         	call	_UARTSendString	;wreg free
  7291  001C5A                     
  7292                           ;./Seguidor.h: 175:         UARTSendString("\n----------", 16);
  7293  001C5A  0E89               	movlw	low STR_50
  7294  001C5C  0100               	movlb	0	; () banked
  7295  001C5E  6FA0               	movwf	UARTSendString@str& (0+255),b
  7296  001C60  0E3F               	movlw	high STR_50
  7297  001C62  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  7298  001C64  0E00               	movlw	0
  7299  001C66  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  7300  001C68  0E10               	movlw	16
  7301  001C6A  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  7302  001C6C  ECA0  F015         	call	_UARTSendString	;wreg free
  7303  001C70                     
  7304                           ;./Seguidor.h: 176:         UARTSendString("\n", 16);
  7305  001C70  0EDA               	movlw	low (STR_5+14)
  7306  001C72  0100               	movlb	0	; () banked
  7307  001C74  6FA0               	movwf	UARTSendString@str& (0+255),b
  7308  001C76  0E3E               	movlw	high (STR_5+14)
  7309  001C78  6FA1               	movwf	(UARTSendString@str+1)& (0+255),b
  7310  001C7A  0E00               	movlw	0
  7311  001C7C  6FA3               	movwf	(UARTSendString@max_length+1)& (0+255),b
  7312  001C7E  0E10               	movlw	16
  7313  001C80  6FA2               	movwf	UARTSendString@max_length& (0+255),b
  7314  001C82  ECA0  F015         	call	_UARTSendString	;wreg free
  7315  001C86                     l352:
  7316  001C86  0012               	return		;funcret
  7317  001C88                     __end_of_PrintSensores:
  7318                           	callstack 0
  7319                           
  7320 ;; *************** function _valorConvUART *****************
  7321 ;; Defined at:
  7322 ;;		line 35 in file "./ADC.h"
  7323 ;; Parameters:    Size  Location     Type
  7324 ;;  valor           2   49[BANK0 ] int 
  7325 ;; Auto vars:     Size  Location     Type
  7326 ;;  string          5   51[BANK0 ] unsigned char [5]
  7327 ;;  unidade         2   60[BANK0 ] int 
  7328 ;;  dezena          2   58[BANK0 ] int 
  7329 ;;  centena         2   56[BANK0 ] int 
  7330 ;; Return value:  Size  Location     Type
  7331 ;;                  2   49[BANK0 ] PTR const unsigned char 
  7332 ;; Registers used:
  7333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7334 ;; Tracked objects:
  7335 ;;		On entry : 0/0
  7336 ;;		On exit  : 0/0
  7337 ;;		Unchanged: 0/0
  7338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7339 ;;      Params:         0       2       0       0
  7340 ;;      Locals:         0      13       0       0
  7341 ;;      Temps:          0       0       0       0
  7342 ;;      Totals:         0      15       0       0
  7343 ;;Total ram usage:       15 bytes
  7344 ;; Hardware stack levels used: 1
  7345 ;; Hardware stack levels required when called: 5
  7346 ;; This function calls:
  7347 ;;		___awdiv
  7348 ;;		___awmod
  7349 ;; This function is called by:
  7350 ;;		_testeAD
  7351 ;;		_PrintSensores
  7352 ;; This function uses a non-reentrant model
  7353 ;;
  7354                           
  7355                           	psect	text31
  7356  002D96                     __ptext31:
  7357                           	callstack 0
  7358  002D96                     _valorConvUART:
  7359                           	callstack 24
  7360  002D96                     
  7361                           ;./ADC.h: 37:     int centena = valor / 100;
  7362  002D96  C091  F013         	movff	valorConvUART@valor,___awdiv@dividend
  7363  002D9A  C092  F014         	movff	valorConvUART@valor+1,___awdiv@dividend+1
  7364  002D9E  0E00               	movlw	0
  7365  002DA0  6E16               	movwf	(___awdiv@divisor+1)^0,c
  7366  002DA2  0E64               	movlw	100
  7367  002DA4  6E15               	movwf	___awdiv@divisor^0,c
  7368  002DA6  EC69  F016         	call	___awdiv	;wreg free
  7369  002DAA  C013  F098         	movff	?___awdiv,valorConvUART@centena
  7370  002DAE  C014  F099         	movff	?___awdiv+1,valorConvUART@centena+1
  7371                           
  7372                           ;./ADC.h: 38:     int dezena = (valor / 10) % 10;
  7373  002DB2  0E00               	movlw	0
  7374  002DB4  6E16               	movwf	(___awdiv@divisor+1)^0,c
  7375  002DB6  0E0A               	movlw	10
  7376  002DB8  6E15               	movwf	___awdiv@divisor^0,c
  7377  002DBA  C091  F013         	movff	valorConvUART@valor,___awdiv@dividend
  7378  002DBE  C092  F014         	movff	valorConvUART@valor+1,___awdiv@dividend+1
  7379  002DC2  EC69  F016         	call	___awdiv	;wreg free
  7380  002DC6  C013  F01B         	movff	?___awdiv,___awmod@dividend
  7381  002DCA  C014  F01C         	movff	?___awdiv+1,___awmod@dividend+1
  7382  002DCE  0E00               	movlw	0
  7383  002DD0  6E1E               	movwf	(___awmod@divisor+1)^0,c
  7384  002DD2  0E0A               	movlw	10
  7385  002DD4  6E1D               	movwf	___awmod@divisor^0,c
  7386  002DD6  EC24  F017         	call	___awmod	;wreg free
  7387  002DDA  C01B  F09A         	movff	?___awmod,valorConvUART@dezena
  7388  002DDE  C01C  F09B         	movff	?___awmod+1,valorConvUART@dezena+1
  7389                           
  7390                           ;./ADC.h: 39:     int unidade = (valor % 100) % 10;
  7391  002DE2  0E00               	movlw	0
  7392  002DE4  6E1E               	movwf	(___awmod@divisor+1)^0,c
  7393  002DE6  0E64               	movlw	100
  7394  002DE8  6E1D               	movwf	___awmod@divisor^0,c
  7395  002DEA  C091  F01B         	movff	valorConvUART@valor,___awmod@dividend
  7396  002DEE  C092  F01C         	movff	valorConvUART@valor+1,___awmod@dividend+1
  7397  002DF2  EC24  F017         	call	___awmod	;wreg free
  7398  002DF6  C01B  F09E         	movff	?___awmod,_valorConvUART$1586
  7399  002DFA  C01C  F09F         	movff	?___awmod+1,_valorConvUART$1586+1
  7400                           
  7401                           ;./ADC.h: 39:     int unidade = (valor % 100) % 10;
  7402  002DFE  C09E  F01B         	movff	_valorConvUART$1586,___awmod@dividend
  7403  002E02  C09F  F01C         	movff	_valorConvUART$1586+1,___awmod@dividend+1
  7404  002E06  0E00               	movlw	0
  7405  002E08  6E1E               	movwf	(___awmod@divisor+1)^0,c
  7406  002E0A  0E0A               	movlw	10
  7407  002E0C  6E1D               	movwf	___awmod@divisor^0,c
  7408  002E0E  EC24  F017         	call	___awmod	;wreg free
  7409  002E12  C01B  F09C         	movff	?___awmod,valorConvUART@unidade
  7410  002E16  C01C  F09D         	movff	?___awmod+1,valorConvUART@unidade+1
  7411  002E1A                     
  7412                           ;./ADC.h: 41:     char string[5] = {'\0'};
  7413  002E1A  EE20  F093         	lfsr	2,valorConvUART@string
  7414  002E1E  0E04               	movlw	4
  7415  002E20                     u3541:
  7416  002E20  6ADE               	clrf	postinc2,c
  7417  002E22  06E8               	decf	wreg,f,c
  7418  002E24  E2FD               	bc	u3541
  7419  002E26                     
  7420                           ;./ADC.h: 43:     string[0] = centena + '0';
  7421  002E26  0100               	movlb	0	; () banked
  7422  002E28  5198               	movf	valorConvUART@centena& (0+255),w,b
  7423  002E2A  0F30               	addlw	48
  7424  002E2C  6F93               	movwf	valorConvUART@string& (0+255),b
  7425  002E2E                     
  7426                           ; BSR set to: 0
  7427                           ;./ADC.h: 44:     string[1] = '.';
  7428  002E2E  0E2E               	movlw	46
  7429  002E30  6F94               	movwf	(valorConvUART@string+1)& (0+255),b
  7430  002E32                     
  7431                           ; BSR set to: 0
  7432                           ;./ADC.h: 45:     string[2] = dezena + '0';
  7433  002E32  519A               	movf	valorConvUART@dezena& (0+255),w,b
  7434  002E34  0F30               	addlw	48
  7435  002E36  6F95               	movwf	(valorConvUART@string+2)& (0+255),b
  7436  002E38                     
  7437                           ; BSR set to: 0
  7438                           ;./ADC.h: 46:     string[3] = unidade + '0';
  7439  002E38  519C               	movf	valorConvUART@unidade& (0+255),w,b
  7440  002E3A  0F30               	addlw	48
  7441  002E3C  6F96               	movwf	(valorConvUART@string+3)& (0+255),b
  7442  002E3E                     
  7443                           ; BSR set to: 0
  7444                           ;./ADC.h: 48:     return string;
  7445  002E3E  0E93               	movlw	low valorConvUART@string
  7446  002E40  6F91               	movwf	?_valorConvUART& (0+255),b
  7447  002E42  0E00               	movlw	high valorConvUART@string
  7448  002E44  6F92               	movwf	(?_valorConvUART+1)& (0+255),b
  7449  002E46                     
  7450                           ; BSR set to: 0
  7451  002E46  0012               	return		;funcret
  7452  002E48                     __end_of_valorConvUART:
  7453                           	callstack 0
  7454                           
  7455 ;; *************** function ___awmod *****************
  7456 ;; Defined at:
  7457 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  7458 ;; Parameters:    Size  Location     Type
  7459 ;;  dividend        2   26[COMRAM] int 
  7460 ;;  divisor         2   28[COMRAM] int 
  7461 ;; Auto vars:     Size  Location     Type
  7462 ;;  sign            1   31[COMRAM] unsigned char 
  7463 ;;  counter         1   30[COMRAM] unsigned char 
  7464 ;; Return value:  Size  Location     Type
  7465 ;;                  2   26[COMRAM] int 
  7466 ;; Registers used:
  7467 ;;		wreg, status,2, status,0
  7468 ;; Tracked objects:
  7469 ;;		On entry : 0/0
  7470 ;;		On exit  : 0/0
  7471 ;;		Unchanged: 0/0
  7472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7473 ;;      Params:         4       0       0       0
  7474 ;;      Locals:         2       0       0       0
  7475 ;;      Temps:          0       0       0       0
  7476 ;;      Totals:         6       0       0       0
  7477 ;;Total ram usage:        6 bytes
  7478 ;; Hardware stack levels used: 1
  7479 ;; Hardware stack levels required when called: 4
  7480 ;; This function calls:
  7481 ;;		Nothing
  7482 ;; This function is called by:
  7483 ;;		_valorConvUART
  7484 ;;		_valorConvUARTbit
  7485 ;; This function uses a non-reentrant model
  7486 ;;
  7487                           
  7488                           	psect	text32
  7489  002E48                     __ptext32:
  7490                           	callstack 0
  7491  002E48                     ___awmod:
  7492                           	callstack 24
  7493  002E48  0E00               	movlw	0
  7494  002E4A  6E20               	movwf	___awmod@sign^0,c
  7495  002E4C  BE1C               	btfsc	(___awmod@dividend+1)^0,7,c
  7496  002E4E  EF2D  F017         	goto	u3270
  7497  002E52  EF2B  F017         	goto	u3271
  7498  002E56                     u3271:
  7499  002E56  EF33  F017         	goto	l3314
  7500  002E5A                     u3270:
  7501  002E5A  6C1B               	negf	___awmod@dividend^0,c
  7502  002E5C  1E1C               	comf	(___awmod@dividend+1)^0,f,c
  7503  002E5E  B0D8               	btfsc	status,0,c
  7504  002E60  2A1C               	incf	(___awmod@dividend+1)^0,f,c
  7505  002E62  0E01               	movlw	1
  7506  002E64  6E20               	movwf	___awmod@sign^0,c
  7507  002E66                     l3314:
  7508  002E66  BE1E               	btfsc	(___awmod@divisor+1)^0,7,c
  7509  002E68  EF3A  F017         	goto	u3280
  7510  002E6C  EF38  F017         	goto	u3281
  7511  002E70                     u3281:
  7512  002E70  EF3E  F017         	goto	l3318
  7513  002E74                     u3280:
  7514  002E74  6C1D               	negf	___awmod@divisor^0,c
  7515  002E76  1E1E               	comf	(___awmod@divisor+1)^0,f,c
  7516  002E78  B0D8               	btfsc	status,0,c
  7517  002E7A  2A1E               	incf	(___awmod@divisor+1)^0,f,c
  7518  002E7C                     l3318:
  7519  002E7C  501D               	movf	___awmod@divisor^0,w,c
  7520  002E7E  101E               	iorwf	(___awmod@divisor+1)^0,w,c
  7521  002E80  B4D8               	btfsc	status,2,c
  7522  002E82  EF45  F017         	goto	u3291
  7523  002E86  EF47  F017         	goto	u3290
  7524  002E8A                     u3291:
  7525  002E8A  EF6B  F017         	goto	l3334
  7526  002E8E                     u3290:
  7527  002E8E  0E01               	movlw	1
  7528  002E90  6E1F               	movwf	___awmod@counter^0,c
  7529  002E92  EF4F  F017         	goto	l3324
  7530  002E96                     l3322:
  7531  002E96  90D8               	bcf	status,0,c
  7532  002E98  361D               	rlcf	___awmod@divisor^0,f,c
  7533  002E9A  361E               	rlcf	(___awmod@divisor+1)^0,f,c
  7534  002E9C  2A1F               	incf	___awmod@counter^0,f,c
  7535  002E9E                     l3324:
  7536  002E9E  AE1E               	btfss	(___awmod@divisor+1)^0,7,c
  7537  002EA0  EF54  F017         	goto	u3301
  7538  002EA4  EF56  F017         	goto	u3300
  7539  002EA8                     u3301:
  7540  002EA8  EF4B  F017         	goto	l3322
  7541  002EAC                     u3300:
  7542  002EAC                     l3326:
  7543  002EAC  501D               	movf	___awmod@divisor^0,w,c
  7544  002EAE  5C1B               	subwf	___awmod@dividend^0,w,c
  7545  002EB0  501E               	movf	(___awmod@divisor+1)^0,w,c
  7546  002EB2  581C               	subwfb	(___awmod@dividend+1)^0,w,c
  7547  002EB4  A0D8               	btfss	status,0,c
  7548  002EB6  EF5F  F017         	goto	u3311
  7549  002EBA  EF61  F017         	goto	u3310
  7550  002EBE                     u3311:
  7551  002EBE  EF65  F017         	goto	l3330
  7552  002EC2                     u3310:
  7553  002EC2  501D               	movf	___awmod@divisor^0,w,c
  7554  002EC4  5E1B               	subwf	___awmod@dividend^0,f,c
  7555  002EC6  501E               	movf	(___awmod@divisor+1)^0,w,c
  7556  002EC8  5A1C               	subwfb	(___awmod@dividend+1)^0,f,c
  7557  002ECA                     l3330:
  7558  002ECA  90D8               	bcf	status,0,c
  7559  002ECC  321E               	rrcf	(___awmod@divisor+1)^0,f,c
  7560  002ECE  321D               	rrcf	___awmod@divisor^0,f,c
  7561  002ED0  2E1F               	decfsz	___awmod@counter^0,f,c
  7562  002ED2  EF56  F017         	goto	l3326
  7563  002ED6                     l3334:
  7564  002ED6  5020               	movf	___awmod@sign^0,w,c
  7565  002ED8  B4D8               	btfsc	status,2,c
  7566  002EDA  EF71  F017         	goto	u3321
  7567  002EDE  EF73  F017         	goto	u3320
  7568  002EE2                     u3321:
  7569  002EE2  EF77  F017         	goto	l3338
  7570  002EE6                     u3320:
  7571  002EE6  6C1B               	negf	___awmod@dividend^0,c
  7572  002EE8  1E1C               	comf	(___awmod@dividend+1)^0,f,c
  7573  002EEA  B0D8               	btfsc	status,0,c
  7574  002EEC  2A1C               	incf	(___awmod@dividend+1)^0,f,c
  7575  002EEE                     l3338:
  7576  002EEE  C01B  F01B         	movff	___awmod@dividend,?___awmod
  7577  002EF2  C01C  F01C         	movff	___awmod@dividend+1,?___awmod+1
  7578  002EF6  0012               	return		;funcret
  7579  002EF8                     __end_of___awmod:
  7580                           	callstack 0
  7581                           
  7582 ;; *************** function ___awdiv *****************
  7583 ;; Defined at:
  7584 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  7585 ;; Parameters:    Size  Location     Type
  7586 ;;  dividend        2   18[COMRAM] int 
  7587 ;;  divisor         2   20[COMRAM] int 
  7588 ;; Auto vars:     Size  Location     Type
  7589 ;;  quotient        2   24[COMRAM] int 
  7590 ;;  sign            1   23[COMRAM] unsigned char 
  7591 ;;  counter         1   22[COMRAM] unsigned char 
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  2   18[COMRAM] int 
  7594 ;; Registers used:
  7595 ;;		wreg, status,2, status,0
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7601 ;;      Params:         4       0       0       0
  7602 ;;      Locals:         4       0       0       0
  7603 ;;      Temps:          0       0       0       0
  7604 ;;      Totals:         8       0       0       0
  7605 ;;Total ram usage:        8 bytes
  7606 ;; Hardware stack levels used: 1
  7607 ;; Hardware stack levels required when called: 4
  7608 ;; This function calls:
  7609 ;;		Nothing
  7610 ;; This function is called by:
  7611 ;;		_valorConvUART
  7612 ;;		_valorConvUARTbit
  7613 ;; This function uses a non-reentrant model
  7614 ;;
  7615                           
  7616                           	psect	text33
  7617  002CD2                     __ptext33:
  7618                           	callstack 0
  7619  002CD2                     ___awdiv:
  7620                           	callstack 24
  7621  002CD2  0E00               	movlw	0
  7622  002CD4  6E18               	movwf	___awdiv@sign^0,c
  7623  002CD6  BE16               	btfsc	(___awdiv@divisor+1)^0,7,c
  7624  002CD8  EF72  F016         	goto	u3210
  7625  002CDC  EF70  F016         	goto	u3211
  7626  002CE0                     u3211:
  7627  002CE0  EF78  F016         	goto	l3270
  7628  002CE4                     u3210:
  7629  002CE4  6C15               	negf	___awdiv@divisor^0,c
  7630  002CE6  1E16               	comf	(___awdiv@divisor+1)^0,f,c
  7631  002CE8  B0D8               	btfsc	status,0,c
  7632  002CEA  2A16               	incf	(___awdiv@divisor+1)^0,f,c
  7633  002CEC  0E01               	movlw	1
  7634  002CEE  6E18               	movwf	___awdiv@sign^0,c
  7635  002CF0                     l3270:
  7636  002CF0  BE14               	btfsc	(___awdiv@dividend+1)^0,7,c
  7637  002CF2  EF7F  F016         	goto	u3220
  7638  002CF6  EF7D  F016         	goto	u3221
  7639  002CFA                     u3221:
  7640  002CFA  EF85  F016         	goto	l3276
  7641  002CFE                     u3220:
  7642  002CFE  6C13               	negf	___awdiv@dividend^0,c
  7643  002D00  1E14               	comf	(___awdiv@dividend+1)^0,f,c
  7644  002D02  B0D8               	btfsc	status,0,c
  7645  002D04  2A14               	incf	(___awdiv@dividend+1)^0,f,c
  7646  002D06  0E01               	movlw	1
  7647  002D08  1A18               	xorwf	___awdiv@sign^0,f,c
  7648  002D0A                     l3276:
  7649  002D0A  0E00               	movlw	0
  7650  002D0C  6E1A               	movwf	(___awdiv@quotient+1)^0,c
  7651  002D0E  0E00               	movlw	0
  7652  002D10  6E19               	movwf	___awdiv@quotient^0,c
  7653  002D12  5015               	movf	___awdiv@divisor^0,w,c
  7654  002D14  1016               	iorwf	(___awdiv@divisor+1)^0,w,c
  7655  002D16  B4D8               	btfsc	status,2,c
  7656  002D18  EF90  F016         	goto	u3231
  7657  002D1C  EF92  F016         	goto	u3230
  7658  002D20                     u3231:
  7659  002D20  EFBA  F016         	goto	l3298
  7660  002D24                     u3230:
  7661  002D24  0E01               	movlw	1
  7662  002D26  6E17               	movwf	___awdiv@counter^0,c
  7663  002D28  EF9A  F016         	goto	l3284
  7664  002D2C                     l3282:
  7665  002D2C  90D8               	bcf	status,0,c
  7666  002D2E  3615               	rlcf	___awdiv@divisor^0,f,c
  7667  002D30  3616               	rlcf	(___awdiv@divisor+1)^0,f,c
  7668  002D32  2A17               	incf	___awdiv@counter^0,f,c
  7669  002D34                     l3284:
  7670  002D34  AE16               	btfss	(___awdiv@divisor+1)^0,7,c
  7671  002D36  EF9F  F016         	goto	u3241
  7672  002D3A  EFA1  F016         	goto	u3240
  7673  002D3E                     u3241:
  7674  002D3E  EF96  F016         	goto	l3282
  7675  002D42                     u3240:
  7676  002D42                     l3286:
  7677  002D42  90D8               	bcf	status,0,c
  7678  002D44  3619               	rlcf	___awdiv@quotient^0,f,c
  7679  002D46  361A               	rlcf	(___awdiv@quotient+1)^0,f,c
  7680  002D48  5015               	movf	___awdiv@divisor^0,w,c
  7681  002D4A  5C13               	subwf	___awdiv@dividend^0,w,c
  7682  002D4C  5016               	movf	(___awdiv@divisor+1)^0,w,c
  7683  002D4E  5814               	subwfb	(___awdiv@dividend+1)^0,w,c
  7684  002D50  A0D8               	btfss	status,0,c
  7685  002D52  EFAD  F016         	goto	u3251
  7686  002D56  EFAF  F016         	goto	u3250
  7687  002D5A                     u3251:
  7688  002D5A  EFB4  F016         	goto	l3294
  7689  002D5E                     u3250:
  7690  002D5E  5015               	movf	___awdiv@divisor^0,w,c
  7691  002D60  5E13               	subwf	___awdiv@dividend^0,f,c
  7692  002D62  5016               	movf	(___awdiv@divisor+1)^0,w,c
  7693  002D64  5A14               	subwfb	(___awdiv@dividend+1)^0,f,c
  7694  002D66  8019               	bsf	___awdiv@quotient^0,0,c
  7695  002D68                     l3294:
  7696  002D68  90D8               	bcf	status,0,c
  7697  002D6A  3216               	rrcf	(___awdiv@divisor+1)^0,f,c
  7698  002D6C  3215               	rrcf	___awdiv@divisor^0,f,c
  7699  002D6E  2E17               	decfsz	___awdiv@counter^0,f,c
  7700  002D70  EFA1  F016         	goto	l3286
  7701  002D74                     l3298:
  7702  002D74  5018               	movf	___awdiv@sign^0,w,c
  7703  002D76  B4D8               	btfsc	status,2,c
  7704  002D78  EFC0  F016         	goto	u3261
  7705  002D7C  EFC2  F016         	goto	u3260
  7706  002D80                     u3261:
  7707  002D80  EFC6  F016         	goto	l3302
  7708  002D84                     u3260:
  7709  002D84  6C19               	negf	___awdiv@quotient^0,c
  7710  002D86  1E1A               	comf	(___awdiv@quotient+1)^0,f,c
  7711  002D88  B0D8               	btfsc	status,0,c
  7712  002D8A  2A1A               	incf	(___awdiv@quotient+1)^0,f,c
  7713  002D8C                     l3302:
  7714  002D8C  C019  F013         	movff	___awdiv@quotient,?___awdiv
  7715  002D90  C01A  F014         	movff	___awdiv@quotient+1,?___awdiv+1
  7716  002D94  0012               	return		;funcret
  7717  002D96                     __end_of___awdiv:
  7718                           	callstack 0
  7719                           
  7720 ;; *************** function _getAD_AN *****************
  7721 ;; Defined at:
  7722 ;;		line 92 in file "./ADC.h"
  7723 ;; Parameters:    Size  Location     Type
  7724 ;;  porta           2   43[BANK0 ] int 
  7725 ;; Auto vars:     Size  Location     Type
  7726 ;;  ANread          4   45[BANK0 ] float 
  7727 ;; Return value:  Size  Location     Type
  7728 ;;                  2   43[BANK0 ] int 
  7729 ;; Registers used:
  7730 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7731 ;; Tracked objects:
  7732 ;;		On entry : 0/0
  7733 ;;		On exit  : 0/0
  7734 ;;		Unchanged: 0/0
  7735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7736 ;;      Params:         0       2       0       0
  7737 ;;      Locals:         0       4       0       0
  7738 ;;      Temps:          0       0       0       0
  7739 ;;      Totals:         0       6       0       0
  7740 ;;Total ram usage:        6 bytes
  7741 ;; Hardware stack levels used: 1
  7742 ;; Hardware stack levels required when called: 6
  7743 ;; This function calls:
  7744 ;;		___fltol
  7745 ;;		_bitExtract
  7746 ;;		_readAD_AN
  7747 ;; This function is called by:
  7748 ;;		_testeAD
  7749 ;;		_PrintSensores
  7750 ;;		_main
  7751 ;; This function uses a non-reentrant model
  7752 ;;
  7753                           
  7754                           	psect	text34
  7755  002464                     __ptext34:
  7756                           	callstack 0
  7757  002464                     _getAD_AN:
  7758                           	callstack 23
  7759  002464                     
  7760                           ;./ADC.h: 94:     ADCON0bits.ACMOD = bitExtract(porta, 2, 0);
  7761  002464  C08B  F013         	movff	getAD_AN@porta,bitExtract@numero
  7762  002468  C08C  F014         	movff	getAD_AN@porta+1,bitExtract@numero+1
  7763  00246C  0E00               	movlw	0
  7764  00246E  6E16               	movwf	(bitExtract@k+1)^0,c
  7765  002470  0E02               	movlw	2
  7766  002472  6E15               	movwf	bitExtract@k^0,c
  7767  002474  0E00               	movlw	0
  7768  002476  6E18               	movwf	(bitExtract@posicao+1)^0,c
  7769  002478  0E00               	movlw	0
  7770  00247A  6E17               	movwf	bitExtract@posicao^0,c
  7771  00247C  EC8F  F018         	call	_bitExtract	;wreg free
  7772  002480  4613               	rlncf	?_bitExtract^0,f,c
  7773  002482  4613               	rlncf	?_bitExtract^0,f,c
  7774  002484  50C2               	movf	194,w,c	;volatile
  7775  002486  1813               	xorwf	?_bitExtract^0,w,c
  7776  002488  0BF3               	andlw	-13
  7777  00248A  1813               	xorwf	?_bitExtract^0,w,c
  7778  00248C  6EC2               	movwf	194,c	;volatile
  7779                           
  7780                           ;./ADC.h: 96:     ADCHSbits.GASEL0 = bitExtract(porta, 1, 2);
  7781  00248E  C08B  F013         	movff	getAD_AN@porta,bitExtract@numero
  7782  002492  C08C  F014         	movff	getAD_AN@porta+1,bitExtract@numero+1
  7783  002496  0E00               	movlw	0
  7784  002498  6E16               	movwf	(bitExtract@k+1)^0,c
  7785  00249A  0E01               	movlw	1
  7786  00249C  6E15               	movwf	bitExtract@k^0,c
  7787  00249E  0E00               	movlw	0
  7788  0024A0  6E18               	movwf	(bitExtract@posicao+1)^0,c
  7789  0024A2  0E02               	movlw	2
  7790  0024A4  6E17               	movwf	bitExtract@posicao^0,c
  7791  0024A6  EC8F  F018         	call	_bitExtract	;wreg free
  7792  0024AA  5099               	movf	153,w,c	;volatile
  7793  0024AC  1813               	xorwf	?_bitExtract^0,w,c
  7794  0024AE  0BFE               	andlw	-2
  7795  0024B0  1813               	xorwf	?_bitExtract^0,w,c
  7796  0024B2  6E99               	movwf	153,c	;volatile
  7797                           
  7798                           ;./ADC.h: 97:     ADCHSbits.GBSEL0 = bitExtract(porta, 1, 2);
  7799  0024B4  C08B  F013         	movff	getAD_AN@porta,bitExtract@numero
  7800  0024B8  C08C  F014         	movff	getAD_AN@porta+1,bitExtract@numero+1
  7801  0024BC  0E00               	movlw	0
  7802  0024BE  6E16               	movwf	(bitExtract@k+1)^0,c
  7803  0024C0  0E01               	movlw	1
  7804  0024C2  6E15               	movwf	bitExtract@k^0,c
  7805  0024C4  0E00               	movlw	0
  7806  0024C6  6E18               	movwf	(bitExtract@posicao+1)^0,c
  7807  0024C8  0E02               	movlw	2
  7808  0024CA  6E17               	movwf	bitExtract@posicao^0,c
  7809  0024CC  EC8F  F018         	call	_bitExtract	;wreg free
  7810  0024D0  3A13               	swapf	?_bitExtract^0,f,c
  7811  0024D2  5099               	movf	153,w,c	;volatile
  7812  0024D4  1813               	xorwf	?_bitExtract^0,w,c
  7813  0024D6  0BEF               	andlw	-17
  7814  0024D8  1813               	xorwf	?_bitExtract^0,w,c
  7815  0024DA  6E99               	movwf	153,c	;volatile
  7816                           
  7817                           ;./ADC.h: 98:     ADCHSbits.GCSEL0 = bitExtract(porta, 1, 2);
  7818  0024DC  C08B  F013         	movff	getAD_AN@porta,bitExtract@numero
  7819  0024E0  C08C  F014         	movff	getAD_AN@porta+1,bitExtract@numero+1
  7820  0024E4  0E00               	movlw	0
  7821  0024E6  6E16               	movwf	(bitExtract@k+1)^0,c
  7822  0024E8  0E01               	movlw	1
  7823  0024EA  6E15               	movwf	bitExtract@k^0,c
  7824  0024EC  0E00               	movlw	0
  7825  0024EE  6E18               	movwf	(bitExtract@posicao+1)^0,c
  7826  0024F0  0E02               	movlw	2
  7827  0024F2  6E17               	movwf	bitExtract@posicao^0,c
  7828  0024F4  EC8F  F018         	call	_bitExtract	;wreg free
  7829  0024F8  4613               	rlncf	?_bitExtract^0,f,c
  7830  0024FA  4613               	rlncf	?_bitExtract^0,f,c
  7831  0024FC  5099               	movf	153,w,c	;volatile
  7832  0024FE  1813               	xorwf	?_bitExtract^0,w,c
  7833  002500  0BFB               	andlw	-5
  7834  002502  1813               	xorwf	?_bitExtract^0,w,c
  7835  002504  6E99               	movwf	153,c	;volatile
  7836                           
  7837                           ;./ADC.h: 99:     ADCHSbits.GDSEL0 = bitExtract(porta, 1, 2);
  7838  002506  C08B  F013         	movff	getAD_AN@porta,bitExtract@numero
  7839  00250A  C08C  F014         	movff	getAD_AN@porta+1,bitExtract@numero+1
  7840  00250E  0E00               	movlw	0
  7841  002510  6E16               	movwf	(bitExtract@k+1)^0,c
  7842  002512  0E01               	movlw	1
  7843  002514  6E15               	movwf	bitExtract@k^0,c
  7844  002516  0E00               	movlw	0
  7845  002518  6E18               	movwf	(bitExtract@posicao+1)^0,c
  7846  00251A  0E02               	movlw	2
  7847  00251C  6E17               	movwf	bitExtract@posicao^0,c
  7848  00251E  EC8F  F018         	call	_bitExtract	;wreg free
  7849  002522  3A13               	swapf	?_bitExtract^0,f,c
  7850  002524  4613               	rlncf	?_bitExtract^0,f,c
  7851  002526  4613               	rlncf	?_bitExtract^0,f,c
  7852  002528  5099               	movf	153,w,c	;volatile
  7853  00252A  1813               	xorwf	?_bitExtract^0,w,c
  7854  00252C  0BBF               	andlw	-65
  7855  00252E  1813               	xorwf	?_bitExtract^0,w,c
  7856  002530  6E99               	movwf	153,c	;volatile
  7857  002532                     
  7858                           ;./ADC.h: 101:     ADCON0bits.ADON = 1;
  7859  002532  80C2               	bsf	194,0,c	;volatile
  7860  002534                     
  7861                           ;./ADC.h: 102:     ADCON0bits.GODONE = 1;
  7862  002534  82C2               	bsf	194,1,c	;volatile
  7863  002536                     l166:
  7864  002536  B2C2               	btfsc	194,1,c	;volatile
  7865  002538  EFA0  F012         	goto	u5211
  7866  00253C  EFA2  F012         	goto	u5210
  7867  002540                     u5211:
  7868  002540  EF9B  F012         	goto	l166
  7869  002544                     u5210:
  7870  002544                     
  7871                           ;./ADC.h: 105:     float ANread = readAD_AN();
  7872  002544  ECD1  F017         	call	_readAD_AN	;wreg free
  7873  002548  C071  F08D         	movff	?_readAD_AN,getAD_AN@ANread
  7874  00254C  C072  F08E         	movff	?_readAD_AN+1,getAD_AN@ANread+1
  7875  002550  C073  F08F         	movff	?_readAD_AN+2,getAD_AN@ANread+2
  7876  002554  C074  F090         	movff	?_readAD_AN+3,getAD_AN@ANread+3
  7877  002558                     
  7878                           ;./ADC.h: 106:     ADCON0bits.ADON = 0;
  7879  002558  90C2               	bcf	194,0,c	;volatile
  7880  00255A                     
  7881                           ;./ADC.h: 108:     return (int) ANread;
  7882  00255A  C08D  F081         	movff	getAD_AN@ANread,___fltol@f1
  7883  00255E  C08E  F082         	movff	getAD_AN@ANread+1,___fltol@f1+1
  7884  002562  C08F  F083         	movff	getAD_AN@ANread+2,___fltol@f1+2
  7885  002566  C090  F084         	movff	getAD_AN@ANread+3,___fltol@f1+3
  7886  00256A  EC40  F013         	call	___fltol	;wreg free
  7887  00256E  C081  F08B         	movff	?___fltol,?_getAD_AN
  7888  002572  C082  F08C         	movff	?___fltol+1,?_getAD_AN+1
  7889  002576  0012               	return		;funcret
  7890  002578                     __end_of_getAD_AN:
  7891                           	callstack 0
  7892                           
  7893 ;; *************** function _readAD_AN *****************
  7894 ;; Defined at:
  7895 ;;		line 72 in file "./ADC.h"
  7896 ;; Parameters:    Size  Location     Type
  7897 ;;		None
  7898 ;; Auto vars:     Size  Location     Type
  7899 ;;		None
  7900 ;; Return value:  Size  Location     Type
  7901 ;;                  4   17[BANK0 ] float 
  7902 ;; Registers used:
  7903 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7904 ;; Tracked objects:
  7905 ;;		On entry : 0/0
  7906 ;;		On exit  : 0/0
  7907 ;;		Unchanged: 0/0
  7908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7909 ;;      Params:         0       4       0       0
  7910 ;;      Locals:         0       4       0       0
  7911 ;;      Temps:          0       0       0       0
  7912 ;;      Totals:         0       8       0       0
  7913 ;;Total ram usage:        8 bytes
  7914 ;; Hardware stack levels used: 1
  7915 ;; Hardware stack levels required when called: 5
  7916 ;; This function calls:
  7917 ;;		___flmul
  7918 ;;		___xxtofl
  7919 ;; This function is called by:
  7920 ;;		_getAD_AN
  7921 ;; This function uses a non-reentrant model
  7922 ;;
  7923                           
  7924                           	psect	text35
  7925  002FA2                     __ptext35:
  7926                           	callstack 0
  7927  002FA2                     _readAD_AN:
  7928                           	callstack 23
  7929  002FA2                     
  7930                           ;./ADC.h: 74:     vdig_AN = ADRESH;
  7931  002FA2  CFC4 F0F2          	movff	4036,_vdig_AN	;volatile
  7932  002FA6  0100               	movlb	0	; () banked
  7933  002FA8  6BF3               	clrf	(_vdig_AN+1)& (0+255),b
  7934  002FAA                     
  7935                           ; BSR set to: 0
  7936                           ;./ADC.h: 75:     vdig_AN = vdig_AN << 8;
  7937  002FAA  51F2               	movf	_vdig_AN& (0+255),w,b
  7938  002FAC  6FF3               	movwf	(_vdig_AN+1)& (0+255),b
  7939  002FAE  6BF2               	clrf	_vdig_AN& (0+255),b
  7940  002FB0                     
  7941                           ; BSR set to: 0
  7942                           ;./ADC.h: 76:     vdig_AN += ADRESL;
  7943  002FB0  50C3               	movf	195,w,c	;volatile
  7944  002FB2  27F2               	addwf	_vdig_AN& (0+255),f,b
  7945  002FB4  0E00               	movlw	0
  7946  002FB6  23F3               	addwfc	(_vdig_AN+1)& (0+255),f,b
  7947  002FB8                     
  7948                           ; BSR set to: 0
  7949                           ;./ADC.h: 78:     vanal_AN = 4.88 * vdig_AN * 0.1;
  7950  002FB8  0EF6               	movlw	246
  7951  002FBA  6E37               	movwf	___flmul@a^0,c
  7952  002FBC  0E28               	movlw	40
  7953  002FBE  6E38               	movwf	(___flmul@a+1)^0,c
  7954  002FC0  0E9C               	movlw	156
  7955  002FC2  6E39               	movwf	(___flmul@a+2)^0,c
  7956  002FC4  0E40               	movlw	64
  7957  002FC6  6E3A               	movwf	(___flmul@a+3)^0,c
  7958  002FC8  C0F2  F025         	movff	_vdig_AN,___xxtofl@val
  7959  002FCC  C0F3  F026         	movff	_vdig_AN+1,___xxtofl@val+1
  7960  002FD0  0E00               	movlw	0
  7961  002FD2  BE26               	btfsc	(___xxtofl@val+1)^0,7,c
  7962  002FD4  0EFF               	movlw	-1
  7963  002FD6  6E27               	movwf	(___xxtofl@val+2)^0,c
  7964  002FD8  6E28               	movwf	(___xxtofl@val+3)^0,c
  7965  002FDA  0E01               	movlw	1
  7966  002FDC  EC4E  F00F         	call	___xxtofl
  7967  002FE0  C025  F033         	movff	?___xxtofl,___flmul@b
  7968  002FE4  C026  F034         	movff	?___xxtofl+1,___flmul@b+1
  7969  002FE8  C027  F035         	movff	?___xxtofl+2,___flmul@b+2
  7970  002FEC  C028  F036         	movff	?___xxtofl+3,___flmul@b+3
  7971  002FF0  EC0C  F006         	call	___flmul	;wreg free
  7972  002FF4  C033  F075         	movff	?___flmul,_readAD_AN$1588
  7973  002FF8  C034  F076         	movff	?___flmul+1,_readAD_AN$1588+1
  7974  002FFC  C035  F077         	movff	?___flmul+2,_readAD_AN$1588+2
  7975  003000  C036  F078         	movff	?___flmul+3,_readAD_AN$1588+3
  7976  003004                     
  7977                           ;./ADC.h: 78:     vanal_AN = 4.88 * vdig_AN * 0.1;
  7978  003004  C075  F033         	movff	_readAD_AN$1588,___flmul@b
  7979  003008  C076  F034         	movff	_readAD_AN$1588+1,___flmul@b+1
  7980  00300C  C077  F035         	movff	_readAD_AN$1588+2,___flmul@b+2
  7981  003010  C078  F036         	movff	_readAD_AN$1588+3,___flmul@b+3
  7982  003014  0ECD               	movlw	205
  7983  003016  6E37               	movwf	___flmul@a^0,c
  7984  003018  0ECC               	movlw	204
  7985  00301A  6E38               	movwf	(___flmul@a+1)^0,c
  7986  00301C  0ECC               	movlw	204
  7987  00301E  6E39               	movwf	(___flmul@a+2)^0,c
  7988  003020  0E3D               	movlw	61
  7989  003022  6E3A               	movwf	(___flmul@a+3)^0,c
  7990  003024  EC0C  F006         	call	___flmul	;wreg free
  7991  003028  C033  F0EA         	movff	?___flmul,_vanal_AN
  7992  00302C  C034  F0EB         	movff	?___flmul+1,_vanal_AN+1
  7993  003030  C035  F0EC         	movff	?___flmul+2,_vanal_AN+2
  7994  003034  C036  F0ED         	movff	?___flmul+3,_vanal_AN+3
  7995  003038                     
  7996                           ;./ADC.h: 80:     return vanal_AN;
  7997  003038  C0EA  F071         	movff	_vanal_AN,?_readAD_AN
  7998  00303C  C0EB  F072         	movff	_vanal_AN+1,?_readAD_AN+1
  7999  003040  C0EC  F073         	movff	_vanal_AN+2,?_readAD_AN+2
  8000  003044  C0ED  F074         	movff	_vanal_AN+3,?_readAD_AN+3
  8001  003048  0012               	return		;funcret
  8002  00304A                     __end_of_readAD_AN:
  8003                           	callstack 0
  8004                           
  8005 ;; *************** function ___xxtofl *****************
  8006 ;; Defined at:
  8007 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  8008 ;; Parameters:    Size  Location     Type
  8009 ;;  sign            1    wreg     unsigned char 
  8010 ;;  val             4   36[COMRAM] long 
  8011 ;; Auto vars:     Size  Location     Type
  8012 ;;  sign            1   44[COMRAM] unsigned char 
  8013 ;;  arg             4   46[COMRAM] unsigned long 
  8014 ;;  exp             1   45[COMRAM] unsigned char 
  8015 ;; Return value:  Size  Location     Type
  8016 ;;                  4   36[COMRAM] unsigned char 
  8017 ;; Registers used:
  8018 ;;		wreg, status,2, status,0
  8019 ;; Tracked objects:
  8020 ;;		On entry : 0/0
  8021 ;;		On exit  : 0/0
  8022 ;;		Unchanged: 0/0
  8023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8024 ;;      Params:         4       0       0       0
  8025 ;;      Locals:         6       0       0       0
  8026 ;;      Temps:          4       0       0       0
  8027 ;;      Totals:        14       0       0       0
  8028 ;;Total ram usage:       14 bytes
  8029 ;; Hardware stack levels used: 1
  8030 ;; Hardware stack levels required when called: 4
  8031 ;; This function calls:
  8032 ;;		Nothing
  8033 ;; This function is called by:
  8034 ;;		_readAD_AN
  8035 ;;		_configDA
  8036 ;;		_posicao
  8037 ;;		_moverMotor
  8038 ;;		_setPID
  8039 ;; This function uses a non-reentrant model
  8040 ;;
  8041                           
  8042                           	psect	text36
  8043  001E9C                     __ptext36:
  8044                           	callstack 0
  8045  001E9C                     ___xxtofl:
  8046                           	callstack 23
  8047                           
  8048                           ;incstack = 0
  8049                           ;___xxtofl@sign stored from wreg
  8050  001E9C  6E2D               	movwf	___xxtofl@sign^0,c
  8051  001E9E  502D               	movf	___xxtofl@sign^0,w,c
  8052  001EA0  B4D8               	btfsc	status,2,c
  8053  001EA2  EF55  F00F         	goto	u4461
  8054  001EA6  EF57  F00F         	goto	u4460
  8055  001EAA                     u4461:
  8056  001EAA  EF79  F00F         	goto	l1052
  8057  001EAE                     u4460:
  8058  001EAE  BE28               	btfsc	(___xxtofl@val+3)^0,7,c
  8059  001EB0  EF5E  F00F         	goto	u4470
  8060  001EB4  EF5C  F00F         	goto	u4471
  8061  001EB8                     u4471:
  8062  001EB8  EF79  F00F         	goto	l1052
  8063  001EBC                     u4470:
  8064  001EBC  C025  F029         	movff	___xxtofl@val,??___xxtofl
  8065  001EC0  C026  F02A         	movff	___xxtofl@val+1,??___xxtofl+1
  8066  001EC4  C027  F02B         	movff	___xxtofl@val+2,??___xxtofl+2
  8067  001EC8  C028  F02C         	movff	___xxtofl@val+3,??___xxtofl+3
  8068  001ECC  1E29               	comf	??___xxtofl^0,f,c
  8069  001ECE  1E2A               	comf	(??___xxtofl+1)^0,f,c
  8070  001ED0  1E2B               	comf	(??___xxtofl+2)^0,f,c
  8071  001ED2  1E2C               	comf	(??___xxtofl+3)^0,f,c
  8072  001ED4  2A29               	incf	??___xxtofl^0,f,c
  8073  001ED6  0E00               	movlw	0
  8074  001ED8  222A               	addwfc	(??___xxtofl+1)^0,f,c
  8075  001EDA  222B               	addwfc	(??___xxtofl+2)^0,f,c
  8076  001EDC  222C               	addwfc	(??___xxtofl+3)^0,f,c
  8077  001EDE  C029  F02F         	movff	??___xxtofl,___xxtofl@arg
  8078  001EE2  C02A  F030         	movff	??___xxtofl+1,___xxtofl@arg+1
  8079  001EE6  C02B  F031         	movff	??___xxtofl+2,___xxtofl@arg+2
  8080  001EEA  C02C  F032         	movff	??___xxtofl+3,___xxtofl@arg+3
  8081  001EEE  EF81  F00F         	goto	l4338
  8082  001EF2                     l1052:
  8083  001EF2  C025  F02F         	movff	___xxtofl@val,___xxtofl@arg
  8084  001EF6  C026  F030         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8085  001EFA  C027  F031         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8086  001EFE  C028  F032         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8087  001F02                     l4338:
  8088  001F02  5025               	movf	___xxtofl@val^0,w,c
  8089  001F04  1026               	iorwf	(___xxtofl@val+1)^0,w,c
  8090  001F06  1027               	iorwf	(___xxtofl@val+2)^0,w,c
  8091  001F08  1028               	iorwf	(___xxtofl@val+3)^0,w,c
  8092  001F0A  A4D8               	btfss	status,2,c
  8093  001F0C  EF8A  F00F         	goto	u4481
  8094  001F10  EF8C  F00F         	goto	u4480
  8095  001F14                     u4481:
  8096  001F14  EF96  F00F         	goto	l4344
  8097  001F18                     u4480:
  8098  001F18  0E00               	movlw	0
  8099  001F1A  6E25               	movwf	?___xxtofl^0,c
  8100  001F1C  0E00               	movlw	0
  8101  001F1E  6E26               	movwf	(?___xxtofl+1)^0,c
  8102  001F20  0E00               	movlw	0
  8103  001F22  6E27               	movwf	(?___xxtofl+2)^0,c
  8104  001F24  0E00               	movlw	0
  8105  001F26  6E28               	movwf	(?___xxtofl+3)^0,c
  8106  001F28  EF27  F010         	goto	l1055
  8107  001F2C                     l4344:
  8108  001F2C  0E96               	movlw	150
  8109  001F2E  6E2E               	movwf	___xxtofl@exp^0,c
  8110  001F30  EFA0  F00F         	goto	l4348
  8111  001F34                     l4346:
  8112  001F34  2A2E               	incf	___xxtofl@exp^0,f,c
  8113  001F36  90D8               	bcf	status,0,c
  8114  001F38  3232               	rrcf	(___xxtofl@arg+3)^0,f,c
  8115  001F3A  3231               	rrcf	(___xxtofl@arg+2)^0,f,c
  8116  001F3C  3230               	rrcf	(___xxtofl@arg+1)^0,f,c
  8117  001F3E  322F               	rrcf	___xxtofl@arg^0,f,c
  8118  001F40                     l4348:
  8119  001F40  0E00               	movlw	0
  8120  001F42  142F               	andwf	___xxtofl@arg^0,w,c
  8121  001F44  6E29               	movwf	??___xxtofl^0,c
  8122  001F46  0E00               	movlw	0
  8123  001F48  1430               	andwf	(___xxtofl@arg+1)^0,w,c
  8124  001F4A  6E2A               	movwf	(??___xxtofl+1)^0,c
  8125  001F4C  0E00               	movlw	0
  8126  001F4E  1431               	andwf	(___xxtofl@arg+2)^0,w,c
  8127  001F50  6E2B               	movwf	(??___xxtofl+2)^0,c
  8128  001F52  0EFE               	movlw	254
  8129  001F54  1432               	andwf	(___xxtofl@arg+3)^0,w,c
  8130  001F56  6E2C               	movwf	(??___xxtofl+3)^0,c
  8131  001F58  5029               	movf	??___xxtofl^0,w,c
  8132  001F5A  102A               	iorwf	(??___xxtofl+1)^0,w,c
  8133  001F5C  102B               	iorwf	(??___xxtofl+2)^0,w,c
  8134  001F5E  102C               	iorwf	(??___xxtofl+3)^0,w,c
  8135  001F60  A4D8               	btfss	status,2,c
  8136  001F62  EFB5  F00F         	goto	u4491
  8137  001F66  EFB7  F00F         	goto	u4490
  8138  001F6A                     u4491:
  8139  001F6A  EF9A  F00F         	goto	l4346
  8140  001F6E                     u4490:
  8141  001F6E  EFC5  F00F         	goto	l1059
  8142  001F72                     l4350:
  8143  001F72  2A2E               	incf	___xxtofl@exp^0,f,c
  8144  001F74  0E01               	movlw	1
  8145  001F76  262F               	addwf	___xxtofl@arg^0,f,c
  8146  001F78  0E00               	movlw	0
  8147  001F7A  2230               	addwfc	(___xxtofl@arg+1)^0,f,c
  8148  001F7C  2231               	addwfc	(___xxtofl@arg+2)^0,f,c
  8149  001F7E  2232               	addwfc	(___xxtofl@arg+3)^0,f,c
  8150  001F80  90D8               	bcf	status,0,c
  8151  001F82  3232               	rrcf	(___xxtofl@arg+3)^0,f,c
  8152  001F84  3231               	rrcf	(___xxtofl@arg+2)^0,f,c
  8153  001F86  3230               	rrcf	(___xxtofl@arg+1)^0,f,c
  8154  001F88  322F               	rrcf	___xxtofl@arg^0,f,c
  8155  001F8A                     l1059:
  8156  001F8A  0E00               	movlw	0
  8157  001F8C  142F               	andwf	___xxtofl@arg^0,w,c
  8158  001F8E  6E29               	movwf	??___xxtofl^0,c
  8159  001F90  0E00               	movlw	0
  8160  001F92  1430               	andwf	(___xxtofl@arg+1)^0,w,c
  8161  001F94  6E2A               	movwf	(??___xxtofl+1)^0,c
  8162  001F96  0E00               	movlw	0
  8163  001F98  1431               	andwf	(___xxtofl@arg+2)^0,w,c
  8164  001F9A  6E2B               	movwf	(??___xxtofl+2)^0,c
  8165  001F9C  0EFF               	movlw	255
  8166  001F9E  1432               	andwf	(___xxtofl@arg+3)^0,w,c
  8167  001FA0  6E2C               	movwf	(??___xxtofl+3)^0,c
  8168  001FA2  5029               	movf	??___xxtofl^0,w,c
  8169  001FA4  102A               	iorwf	(??___xxtofl+1)^0,w,c
  8170  001FA6  102B               	iorwf	(??___xxtofl+2)^0,w,c
  8171  001FA8  102C               	iorwf	(??___xxtofl+3)^0,w,c
  8172  001FAA  A4D8               	btfss	status,2,c
  8173  001FAC  EFDA  F00F         	goto	u4501
  8174  001FB0  EFDC  F00F         	goto	u4500
  8175  001FB4                     u4501:
  8176  001FB4  EFB9  F00F         	goto	l4350
  8177  001FB8                     u4500:
  8178  001FB8  EFE4  F00F         	goto	l4358
  8179  001FBC                     l4356:
  8180  001FBC  062E               	decf	___xxtofl@exp^0,f,c
  8181  001FBE  90D8               	bcf	status,0,c
  8182  001FC0  362F               	rlcf	___xxtofl@arg^0,f,c
  8183  001FC2  3630               	rlcf	(___xxtofl@arg+1)^0,f,c
  8184  001FC4  3631               	rlcf	(___xxtofl@arg+2)^0,f,c
  8185  001FC6  3632               	rlcf	(___xxtofl@arg+3)^0,f,c
  8186  001FC8                     l4358:
  8187  001FC8  BE31               	btfsc	(___xxtofl@arg+2)^0,7,c
  8188  001FCA  EFE9  F00F         	goto	u4511
  8189  001FCE  EFEB  F00F         	goto	u4510
  8190  001FD2                     u4511:
  8191  001FD2  EFF3  F00F         	goto	l1066
  8192  001FD6                     u4510:
  8193  001FD6  0E02               	movlw	2
  8194  001FD8  602E               	cpfslt	___xxtofl@exp^0,c
  8195  001FDA  EFF1  F00F         	goto	u4521
  8196  001FDE  EFF3  F00F         	goto	u4520
  8197  001FE2                     u4521:
  8198  001FE2  EFDE  F00F         	goto	l4356
  8199  001FE6                     u4520:
  8200  001FE6                     l1066:
  8201  001FE6  B02E               	btfsc	___xxtofl@exp^0,0,c
  8202  001FE8  EFF8  F00F         	goto	u4531
  8203  001FEC  EFFA  F00F         	goto	u4530
  8204  001FF0                     u4531:
  8205  001FF0  EFFB  F00F         	goto	l4364
  8206  001FF4                     u4530:
  8207  001FF4  9E31               	bcf	(___xxtofl@arg+2)^0,7,c
  8208  001FF6                     l4364:
  8209  001FF6  90D8               	bcf	status,0,c
  8210  001FF8  322E               	rrcf	___xxtofl@exp^0,f,c
  8211  001FFA  C02E  F029         	movff	___xxtofl@exp,??___xxtofl
  8212  001FFE  6A2A               	clrf	(??___xxtofl+1)^0,c
  8213  002000  6A2B               	clrf	(??___xxtofl+2)^0,c
  8214  002002  6A2C               	clrf	(??___xxtofl+3)^0,c
  8215  002004  C029  F02C         	movff	??___xxtofl,??___xxtofl+3
  8216  002008  6A2B               	clrf	(??___xxtofl+2)^0,c
  8217  00200A  6A2A               	clrf	(??___xxtofl+1)^0,c
  8218  00200C  6A29               	clrf	??___xxtofl^0,c
  8219  00200E  5029               	movf	??___xxtofl^0,w,c
  8220  002010  122F               	iorwf	___xxtofl@arg^0,f,c
  8221  002012  502A               	movf	(??___xxtofl+1)^0,w,c
  8222  002014  1230               	iorwf	(___xxtofl@arg+1)^0,f,c
  8223  002016  502B               	movf	(??___xxtofl+2)^0,w,c
  8224  002018  1231               	iorwf	(___xxtofl@arg+2)^0,f,c
  8225  00201A  502C               	movf	(??___xxtofl+3)^0,w,c
  8226  00201C  1232               	iorwf	(___xxtofl@arg+3)^0,f,c
  8227  00201E  502D               	movf	___xxtofl@sign^0,w,c
  8228  002020  B4D8               	btfsc	status,2,c
  8229  002022  EF15  F010         	goto	u4541
  8230  002026  EF17  F010         	goto	u4540
  8231  00202A                     u4541:
  8232  00202A  EF1F  F010         	goto	l4374
  8233  00202E                     u4540:
  8234  00202E  BE28               	btfsc	(___xxtofl@val+3)^0,7,c
  8235  002030  EF1E  F010         	goto	u4550
  8236  002034  EF1C  F010         	goto	u4551
  8237  002038                     u4551:
  8238  002038  EF1F  F010         	goto	l4374
  8239  00203C                     u4550:
  8240  00203C  8E32               	bsf	(___xxtofl@arg+3)^0,7,c
  8241  00203E                     l4374:
  8242  00203E  C02F  F025         	movff	___xxtofl@arg,?___xxtofl
  8243  002042  C030  F026         	movff	___xxtofl@arg+1,?___xxtofl+1
  8244  002046  C031  F027         	movff	___xxtofl@arg+2,?___xxtofl+2
  8245  00204A  C032  F028         	movff	___xxtofl@arg+3,?___xxtofl+3
  8246  00204E                     l1055:
  8247  00204E  0012               	return		;funcret
  8248  002050                     __end_of___xxtofl:
  8249                           	callstack 0
  8250                           
  8251 ;; *************** function ___flmul *****************
  8252 ;; Defined at:
  8253 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  8254 ;; Parameters:    Size  Location     Type
  8255 ;;  b               4   50[COMRAM] unsigned char 
  8256 ;;  a               4   54[COMRAM] unsigned char 
  8257 ;; Auto vars:     Size  Location     Type
  8258 ;;  prod            4   11[BANK0 ] struct .
  8259 ;;  grs             4    6[BANK0 ] unsigned long 
  8260 ;;  temp            2   15[BANK0 ] struct .
  8261 ;;  bexp            1   10[BANK0 ] unsigned char 
  8262 ;;  aexp            1    5[BANK0 ] unsigned char 
  8263 ;;  sign            1    4[BANK0 ] unsigned char 
  8264 ;; Return value:  Size  Location     Type
  8265 ;;                  4   50[COMRAM] unsigned char 
  8266 ;; Registers used:
  8267 ;;		wreg, status,2, status,0, prodl, prodh
  8268 ;; Tracked objects:
  8269 ;;		On entry : 0/0
  8270 ;;		On exit  : 0/0
  8271 ;;		Unchanged: 0/0
  8272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8273 ;;      Params:         8       0       0       0
  8274 ;;      Locals:         0      13       0       0
  8275 ;;      Temps:          0       4       0       0
  8276 ;;      Totals:         8      17       0       0
  8277 ;;Total ram usage:       25 bytes
  8278 ;; Hardware stack levels used: 1
  8279 ;; Hardware stack levels required when called: 4
  8280 ;; This function calls:
  8281 ;;		Nothing
  8282 ;; This function is called by:
  8283 ;;		_readAD_AN
  8284 ;;		_moverMotor
  8285 ;;		_setPID
  8286 ;; This function uses a non-reentrant model
  8287 ;;
  8288                           
  8289                           	psect	text37
  8290  000C18                     __ptext37:
  8291                           	callstack 0
  8292  000C18                     ___flmul:
  8293                           	callstack 23
  8294  000C18  5036               	movf	(___flmul@b+3)^0,w,c
  8295  000C1A  0B80               	andlw	128
  8296  000C1C  0100               	movlb	0	; () banked
  8297  000C1E  6F64               	movwf	___flmul@sign& (0+255),b
  8298  000C20  5036               	movf	(___flmul@b+3)^0,w,c
  8299  000C22  2436               	addwf	(___flmul@b+3)^0,w,c
  8300  000C24  6F6A               	movwf	___flmul@bexp& (0+255),b
  8301  000C26                     
  8302                           ; BSR set to: 0
  8303  000C26  AE35               	btfss	(___flmul@b+2)^0,7,c
  8304  000C28  EF18  F006         	goto	u4271
  8305  000C2C  EF1A  F006         	goto	u4270
  8306  000C30                     u4271:
  8307  000C30  EF1B  F006         	goto	l4208
  8308  000C34                     u4270:
  8309  000C34                     
  8310                           ; BSR set to: 0
  8311  000C34  816A               	bsf	___flmul@bexp& (0+255),0,b
  8312  000C36                     l4208:
  8313                           
  8314                           ; BSR set to: 0
  8315  000C36  516A               	movf	___flmul@bexp& (0+255),w,b
  8316  000C38  B4D8               	btfsc	status,2,c
  8317  000C3A  EF21  F006         	goto	u4281
  8318  000C3E  EF23  F006         	goto	u4280
  8319  000C42                     u4281:
  8320  000C42  EF36  F006         	goto	l4216
  8321  000C46                     u4280:
  8322  000C46                     
  8323                           ; BSR set to: 0
  8324  000C46  296A               	incf	___flmul@bexp& (0+255),w,b
  8325  000C48  A4D8               	btfss	status,2,c
  8326  000C4A  EF29  F006         	goto	u4291
  8327  000C4E  EF2B  F006         	goto	u4290
  8328  000C52                     u4291:
  8329  000C52  EF33  F006         	goto	l4214
  8330  000C56                     u4290:
  8331  000C56                     
  8332                           ; BSR set to: 0
  8333  000C56  0E00               	movlw	0
  8334  000C58  6E33               	movwf	___flmul@b^0,c
  8335  000C5A  0E00               	movlw	0
  8336  000C5C  6E34               	movwf	(___flmul@b+1)^0,c
  8337  000C5E  0E00               	movlw	0
  8338  000C60  6E35               	movwf	(___flmul@b+2)^0,c
  8339  000C62  0E00               	movlw	0
  8340  000C64  6E36               	movwf	(___flmul@b+3)^0,c
  8341  000C66                     l4214:
  8342                           
  8343                           ; BSR set to: 0
  8344  000C66  8E35               	bsf	(___flmul@b+2)^0,7,c
  8345  000C68  EF3E  F006         	goto	l4218
  8346  000C6C                     l4216:
  8347                           
  8348                           ; BSR set to: 0
  8349  000C6C  0E00               	movlw	0
  8350  000C6E  6E33               	movwf	___flmul@b^0,c
  8351  000C70  0E00               	movlw	0
  8352  000C72  6E34               	movwf	(___flmul@b+1)^0,c
  8353  000C74  0E00               	movlw	0
  8354  000C76  6E35               	movwf	(___flmul@b+2)^0,c
  8355  000C78  0E00               	movlw	0
  8356  000C7A  6E36               	movwf	(___flmul@b+3)^0,c
  8357  000C7C                     l4218:
  8358                           
  8359                           ; BSR set to: 0
  8360  000C7C  503A               	movf	(___flmul@a+3)^0,w,c
  8361  000C7E  0B80               	andlw	128
  8362  000C80  1B64               	xorwf	___flmul@sign& (0+255),f,b
  8363  000C82                     
  8364                           ; BSR set to: 0
  8365  000C82  503A               	movf	(___flmul@a+3)^0,w,c
  8366  000C84  243A               	addwf	(___flmul@a+3)^0,w,c
  8367  000C86  6F65               	movwf	___flmul@aexp& (0+255),b
  8368  000C88                     
  8369                           ; BSR set to: 0
  8370  000C88  AE39               	btfss	(___flmul@a+2)^0,7,c
  8371  000C8A  EF49  F006         	goto	u4301
  8372  000C8E  EF4B  F006         	goto	u4300
  8373  000C92                     u4301:
  8374  000C92  EF4C  F006         	goto	l4226
  8375  000C96                     u4300:
  8376  000C96                     
  8377                           ; BSR set to: 0
  8378  000C96  8165               	bsf	___flmul@aexp& (0+255),0,b
  8379  000C98                     l4226:
  8380                           
  8381                           ; BSR set to: 0
  8382  000C98  5165               	movf	___flmul@aexp& (0+255),w,b
  8383  000C9A  B4D8               	btfsc	status,2,c
  8384  000C9C  EF52  F006         	goto	u4311
  8385  000CA0  EF54  F006         	goto	u4310
  8386  000CA4                     u4311:
  8387  000CA4  EF67  F006         	goto	l4234
  8388  000CA8                     u4310:
  8389  000CA8                     
  8390                           ; BSR set to: 0
  8391  000CA8  2965               	incf	___flmul@aexp& (0+255),w,b
  8392  000CAA  A4D8               	btfss	status,2,c
  8393  000CAC  EF5A  F006         	goto	u4321
  8394  000CB0  EF5C  F006         	goto	u4320
  8395  000CB4                     u4321:
  8396  000CB4  EF64  F006         	goto	l4232
  8397  000CB8                     u4320:
  8398  000CB8                     
  8399                           ; BSR set to: 0
  8400  000CB8  0E00               	movlw	0
  8401  000CBA  6E37               	movwf	___flmul@a^0,c
  8402  000CBC  0E00               	movlw	0
  8403  000CBE  6E38               	movwf	(___flmul@a+1)^0,c
  8404  000CC0  0E00               	movlw	0
  8405  000CC2  6E39               	movwf	(___flmul@a+2)^0,c
  8406  000CC4  0E00               	movlw	0
  8407  000CC6  6E3A               	movwf	(___flmul@a+3)^0,c
  8408  000CC8                     l4232:
  8409                           
  8410                           ; BSR set to: 0
  8411  000CC8  8E39               	bsf	(___flmul@a+2)^0,7,c
  8412  000CCA  EF6F  F006         	goto	l1011
  8413  000CCE                     l4234:
  8414                           
  8415                           ; BSR set to: 0
  8416  000CCE  0E00               	movlw	0
  8417  000CD0  6E37               	movwf	___flmul@a^0,c
  8418  000CD2  0E00               	movlw	0
  8419  000CD4  6E38               	movwf	(___flmul@a+1)^0,c
  8420  000CD6  0E00               	movlw	0
  8421  000CD8  6E39               	movwf	(___flmul@a+2)^0,c
  8422  000CDA  0E00               	movlw	0
  8423  000CDC  6E3A               	movwf	(___flmul@a+3)^0,c
  8424  000CDE                     l1011:
  8425                           
  8426                           ; BSR set to: 0
  8427  000CDE  5165               	movf	___flmul@aexp& (0+255),w,b
  8428  000CE0  B4D8               	btfsc	status,2,c
  8429  000CE2  EF75  F006         	goto	u4331
  8430  000CE6  EF77  F006         	goto	u4330
  8431  000CEA                     u4331:
  8432  000CEA  EF7F  F006         	goto	l4238
  8433  000CEE                     u4330:
  8434  000CEE                     
  8435                           ; BSR set to: 0
  8436  000CEE  516A               	movf	___flmul@bexp& (0+255),w,b
  8437  000CF0  A4D8               	btfss	status,2,c
  8438  000CF2  EF7D  F006         	goto	u4341
  8439  000CF6  EF7F  F006         	goto	u4340
  8440  000CFA                     u4341:
  8441  000CFA  EF89  F006         	goto	l4242
  8442  000CFE                     u4340:
  8443  000CFE                     l4238:
  8444                           
  8445                           ; BSR set to: 0
  8446  000CFE  0E00               	movlw	0
  8447  000D00  6E33               	movwf	?___flmul^0,c
  8448  000D02  0E00               	movlw	0
  8449  000D04  6E34               	movwf	(?___flmul+1)^0,c
  8450  000D06  0E00               	movlw	0
  8451  000D08  6E35               	movwf	(?___flmul+2)^0,c
  8452  000D0A  0E00               	movlw	0
  8453  000D0C  6E36               	movwf	(?___flmul+3)^0,c
  8454  000D0E  EF21  F008         	goto	l1015
  8455  000D12                     l4242:
  8456                           
  8457                           ; BSR set to: 0
  8458  000D12  5039               	movf	(___flmul@a+2)^0,w,c
  8459  000D14  0233               	mulwf	___flmul@b^0,c
  8460  000D16  CFF3 F06F          	movff	prodl,___flmul@temp
  8461  000D1A  CFF4 F070          	movff	prodh,___flmul@temp+1
  8462  000D1E                     
  8463                           ; BSR set to: 0
  8464  000D1E  516F               	movf	___flmul@temp& (0+255),w,b
  8465  000D20  6F66               	movwf	___flmul@grs& (0+255),b
  8466  000D22  6B67               	clrf	(___flmul@grs+1)& (0+255),b
  8467  000D24  6B68               	clrf	(___flmul@grs+2)& (0+255),b
  8468  000D26  6B69               	clrf	(___flmul@grs+3)& (0+255),b
  8469  000D28                     
  8470                           ; BSR set to: 0
  8471  000D28  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  8472  000D2A  6F6B               	movwf	___flmul@prod& (0+255),b
  8473  000D2C  6B6C               	clrf	(___flmul@prod+1)& (0+255),b
  8474  000D2E  6B6D               	clrf	(___flmul@prod+2)& (0+255),b
  8475  000D30  6B6E               	clrf	(___flmul@prod+3)& (0+255),b
  8476  000D32  5038               	movf	(___flmul@a+1)^0,w,c
  8477  000D34  0234               	mulwf	(___flmul@b+1)^0,c
  8478  000D36  CFF3 F06F          	movff	prodl,___flmul@temp
  8479  000D3A  CFF4 F070          	movff	prodh,___flmul@temp+1
  8480  000D3E                     
  8481                           ; BSR set to: 0
  8482  000D3E  516F               	movf	___flmul@temp& (0+255),w,b
  8483  000D40  2766               	addwf	___flmul@grs& (0+255),f,b
  8484  000D42  0E00               	movlw	0
  8485  000D44  2367               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8486  000D46  2368               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8487  000D48  2369               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8488  000D4A                     
  8489                           ; BSR set to: 0
  8490  000D4A  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  8491  000D4C  276B               	addwf	___flmul@prod& (0+255),f,b
  8492  000D4E  0E00               	movlw	0
  8493  000D50  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8494  000D52  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8495  000D54  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8496  000D56  5037               	movf	___flmul@a^0,w,c
  8497  000D58  0235               	mulwf	(___flmul@b+2)^0,c
  8498  000D5A  CFF3 F06F          	movff	prodl,___flmul@temp
  8499  000D5E  CFF4 F070          	movff	prodh,___flmul@temp+1
  8500  000D62                     
  8501                           ; BSR set to: 0
  8502  000D62  516F               	movf	___flmul@temp& (0+255),w,b
  8503  000D64  2766               	addwf	___flmul@grs& (0+255),f,b
  8504  000D66  0E00               	movlw	0
  8505  000D68  2367               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8506  000D6A  2368               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8507  000D6C  2369               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8508  000D6E                     
  8509                           ; BSR set to: 0
  8510  000D6E  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  8511  000D70  276B               	addwf	___flmul@prod& (0+255),f,b
  8512  000D72  0E00               	movlw	0
  8513  000D74  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8514  000D76  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8515  000D78  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8516  000D7A                     
  8517                           ; BSR set to: 0
  8518  000D7A  C068  F069         	movff	___flmul@grs+2,___flmul@grs+3
  8519  000D7E  C067  F068         	movff	___flmul@grs+1,___flmul@grs+2
  8520  000D82  C066  F067         	movff	___flmul@grs,___flmul@grs+1
  8521  000D86  6B66               	clrf	___flmul@grs& (0+255),b
  8522  000D88                     
  8523                           ; BSR set to: 0
  8524  000D88  5037               	movf	___flmul@a^0,w,c
  8525  000D8A  0234               	mulwf	(___flmul@b+1)^0,c
  8526  000D8C  CFF3 F06F          	movff	prodl,___flmul@temp
  8527  000D90  CFF4 F070          	movff	prodh,___flmul@temp+1
  8528  000D94                     
  8529                           ; BSR set to: 0
  8530  000D94  516F               	movf	___flmul@temp& (0+255),w,b
  8531  000D96  2766               	addwf	___flmul@grs& (0+255),f,b
  8532  000D98  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  8533  000D9A  2367               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8534  000D9C  0E00               	movlw	0
  8535  000D9E  2368               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8536  000DA0  0E00               	movlw	0
  8537  000DA2  2369               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8538  000DA4                     
  8539                           ; BSR set to: 0
  8540  000DA4  5038               	movf	(___flmul@a+1)^0,w,c
  8541  000DA6  0233               	mulwf	___flmul@b^0,c
  8542  000DA8  CFF3 F06F          	movff	prodl,___flmul@temp
  8543  000DAC  CFF4 F070          	movff	prodh,___flmul@temp+1
  8544  000DB0                     
  8545                           ; BSR set to: 0
  8546  000DB0  516F               	movf	___flmul@temp& (0+255),w,b
  8547  000DB2  2766               	addwf	___flmul@grs& (0+255),f,b
  8548  000DB4  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  8549  000DB6  2367               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8550  000DB8  0E00               	movlw	0
  8551  000DBA  2368               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8552  000DBC  0E00               	movlw	0
  8553  000DBE  2369               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8554  000DC0                     
  8555                           ; BSR set to: 0
  8556  000DC0  C068  F069         	movff	___flmul@grs+2,___flmul@grs+3
  8557  000DC4  C067  F068         	movff	___flmul@grs+1,___flmul@grs+2
  8558  000DC8  C066  F067         	movff	___flmul@grs,___flmul@grs+1
  8559  000DCC  6B66               	clrf	___flmul@grs& (0+255),b
  8560  000DCE  5037               	movf	___flmul@a^0,w,c
  8561  000DD0  0233               	mulwf	___flmul@b^0,c
  8562  000DD2  CFF3 F06F          	movff	prodl,___flmul@temp
  8563  000DD6  CFF4 F070          	movff	prodh,___flmul@temp+1
  8564  000DDA                     
  8565                           ; BSR set to: 0
  8566  000DDA  516F               	movf	___flmul@temp& (0+255),w,b
  8567  000DDC  2766               	addwf	___flmul@grs& (0+255),f,b
  8568  000DDE  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  8569  000DE0  2367               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8570  000DE2  0E00               	movlw	0
  8571  000DE4  2368               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8572  000DE6  0E00               	movlw	0
  8573  000DE8  2369               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8574  000DEA                     
  8575                           ; BSR set to: 0
  8576  000DEA  5039               	movf	(___flmul@a+2)^0,w,c
  8577  000DEC  0234               	mulwf	(___flmul@b+1)^0,c
  8578  000DEE  CFF3 F06F          	movff	prodl,___flmul@temp
  8579  000DF2  CFF4 F070          	movff	prodh,___flmul@temp+1
  8580  000DF6  516F               	movf	___flmul@temp& (0+255),w,b
  8581  000DF8  276B               	addwf	___flmul@prod& (0+255),f,b
  8582  000DFA  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  8583  000DFC  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8584  000DFE  0E00               	movlw	0
  8585  000E00  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8586  000E02  0E00               	movlw	0
  8587  000E04  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8588  000E06                     
  8589                           ; BSR set to: 0
  8590  000E06  5038               	movf	(___flmul@a+1)^0,w,c
  8591  000E08  0235               	mulwf	(___flmul@b+2)^0,c
  8592  000E0A  CFF3 F06F          	movff	prodl,___flmul@temp
  8593  000E0E  CFF4 F070          	movff	prodh,___flmul@temp+1
  8594  000E12                     
  8595                           ; BSR set to: 0
  8596  000E12  516F               	movf	___flmul@temp& (0+255),w,b
  8597  000E14  276B               	addwf	___flmul@prod& (0+255),f,b
  8598  000E16  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  8599  000E18  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8600  000E1A  0E00               	movlw	0
  8601  000E1C  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8602  000E1E  0E00               	movlw	0
  8603  000E20  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8604  000E22  5039               	movf	(___flmul@a+2)^0,w,c
  8605  000E24  0235               	mulwf	(___flmul@b+2)^0,c
  8606  000E26  CFF3 F06F          	movff	prodl,___flmul@temp
  8607  000E2A  CFF4 F070          	movff	prodh,___flmul@temp+1
  8608  000E2E                     
  8609                           ; BSR set to: 0
  8610  000E2E  516F               	movf	___flmul@temp& (0+255),w,b
  8611  000E30  6F60               	movwf	??___flmul& (0+255),b
  8612  000E32  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  8613  000E34  6F61               	movwf	(??___flmul+1)& (0+255),b
  8614  000E36  6B62               	clrf	(??___flmul+2)& (0+255),b
  8615  000E38  6B63               	clrf	(??___flmul+3)& (0+255),b
  8616  000E3A  C062  F063         	movff	??___flmul+2,??___flmul+3
  8617  000E3E  C061  F062         	movff	??___flmul+1,??___flmul+2
  8618  000E42  C060  F061         	movff	??___flmul,??___flmul+1
  8619  000E46  6B60               	clrf	??___flmul& (0+255),b
  8620  000E48  5160               	movf	??___flmul& (0+255),w,b
  8621  000E4A  276B               	addwf	___flmul@prod& (0+255),f,b
  8622  000E4C  5161               	movf	(??___flmul+1)& (0+255),w,b
  8623  000E4E  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8624  000E50  5162               	movf	(??___flmul+2)& (0+255),w,b
  8625  000E52  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8626  000E54  5163               	movf	(??___flmul+3)& (0+255),w,b
  8627  000E56  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8628  000E58                     
  8629                           ; BSR set to: 0
  8630  000E58  C066  F060         	movff	___flmul@grs,??___flmul
  8631  000E5C  C067  F061         	movff	___flmul@grs+1,??___flmul+1
  8632  000E60  C068  F062         	movff	___flmul@grs+2,??___flmul+2
  8633  000E64  C069  F063         	movff	___flmul@grs+3,??___flmul+3
  8634  000E68  0E19               	movlw	25
  8635  000E6A  EF3C  F007         	goto	u4350
  8636  000E6E                     u4355:
  8637  000E6E  90D8               	bcf	status,0,c
  8638  000E70  3363               	rrcf	(??___flmul+3)& (0+255),f,b
  8639  000E72  3362               	rrcf	(??___flmul+2)& (0+255),f,b
  8640  000E74  3361               	rrcf	(??___flmul+1)& (0+255),f,b
  8641  000E76  3360               	rrcf	??___flmul& (0+255),f,b
  8642  000E78                     u4350:
  8643  000E78  2EE8               	decfsz	wreg,f,c
  8644  000E7A  EF37  F007         	goto	u4355
  8645  000E7E  5160               	movf	??___flmul& (0+255),w,b
  8646  000E80  276B               	addwf	___flmul@prod& (0+255),f,b
  8647  000E82  5161               	movf	(??___flmul+1)& (0+255),w,b
  8648  000E84  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8649  000E86  5162               	movf	(??___flmul+2)& (0+255),w,b
  8650  000E88  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8651  000E8A  5163               	movf	(??___flmul+3)& (0+255),w,b
  8652  000E8C  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8653  000E8E                     
  8654                           ; BSR set to: 0
  8655  000E8E  C068  F069         	movff	___flmul@grs+2,___flmul@grs+3
  8656  000E92  C067  F068         	movff	___flmul@grs+1,___flmul@grs+2
  8657  000E96  C066  F067         	movff	___flmul@grs,___flmul@grs+1
  8658  000E9A  6B66               	clrf	___flmul@grs& (0+255),b
  8659  000E9C                     
  8660                           ; BSR set to: 0
  8661  000E9C  5165               	movf	___flmul@aexp& (0+255),w,b
  8662  000E9E  C06A  F060         	movff	___flmul@bexp,??___flmul
  8663  000EA2  6B61               	clrf	(??___flmul+1)& (0+255),b
  8664  000EA4  2760               	addwf	??___flmul& (0+255),f,b
  8665  000EA6  0E00               	movlw	0
  8666  000EA8  2361               	addwfc	(??___flmul+1)& (0+255),f,b
  8667  000EAA  0E82               	movlw	130
  8668  000EAC  2560               	addwf	??___flmul& (0+255),w,b
  8669  000EAE  6F6F               	movwf	___flmul@temp& (0+255),b
  8670  000EB0  0EFF               	movlw	255
  8671  000EB2  2161               	addwfc	(??___flmul+1)& (0+255),w,b
  8672  000EB4  6F70               	movwf	(___flmul@temp+1)& (0+255),b
  8673  000EB6  EF72  F007         	goto	l4290
  8674  000EBA                     l4284:
  8675                           
  8676                           ; BSR set to: 0
  8677  000EBA  90D8               	bcf	status,0,c
  8678  000EBC  376B               	rlcf	___flmul@prod& (0+255),f,b
  8679  000EBE  376C               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8680  000EC0  376D               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8681  000EC2  376E               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8682  000EC4                     
  8683                           ; BSR set to: 0
  8684  000EC4  AF69               	btfss	(___flmul@grs+3)& (0+255),7,b
  8685  000EC6  EF67  F007         	goto	u4361
  8686  000ECA  EF69  F007         	goto	u4360
  8687  000ECE                     u4361:
  8688  000ECE  EF6A  F007         	goto	l1018
  8689  000ED2                     u4360:
  8690  000ED2                     
  8691                           ; BSR set to: 0
  8692  000ED2  816B               	bsf	___flmul@prod& (0+255),0,b
  8693  000ED4                     l1018:
  8694                           
  8695                           ; BSR set to: 0
  8696  000ED4  90D8               	bcf	status,0,c
  8697  000ED6  3766               	rlcf	___flmul@grs& (0+255),f,b
  8698  000ED8  3767               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8699  000EDA  3768               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8700  000EDC  3769               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8701  000EDE  076F               	decf	___flmul@temp& (0+255),f,b
  8702  000EE0  A0D8               	btfss	status,0,c
  8703  000EE2  0770               	decf	(___flmul@temp+1)& (0+255),f,b
  8704  000EE4                     l4290:
  8705                           
  8706                           ; BSR set to: 0
  8707  000EE4  AF6D               	btfss	(___flmul@prod+2)& (0+255),7,b
  8708  000EE6  EF77  F007         	goto	u4371
  8709  000EEA  EF79  F007         	goto	u4370
  8710  000EEE                     u4371:
  8711  000EEE  EF5D  F007         	goto	l4284
  8712  000EF2                     u4370:
  8713  000EF2                     
  8714                           ; BSR set to: 0
  8715  000EF2  0E00               	movlw	0
  8716  000EF4  6F65               	movwf	___flmul@aexp& (0+255),b
  8717  000EF6                     
  8718                           ; BSR set to: 0
  8719  000EF6  AF69               	btfss	(___flmul@grs+3)& (0+255),7,b
  8720  000EF8  EF80  F007         	goto	u4381
  8721  000EFC  EF82  F007         	goto	u4380
  8722  000F00                     u4381:
  8723  000F00  EFA6  F007         	goto	l1020
  8724  000F04                     u4380:
  8725  000F04                     
  8726                           ; BSR set to: 0
  8727  000F04  0EFF               	movlw	255
  8728  000F06  1566               	andwf	___flmul@grs& (0+255),w,b
  8729  000F08  6F60               	movwf	??___flmul& (0+255),b
  8730  000F0A  0EFF               	movlw	255
  8731  000F0C  1567               	andwf	(___flmul@grs+1)& (0+255),w,b
  8732  000F0E  6F61               	movwf	(??___flmul+1)& (0+255),b
  8733  000F10  0EFF               	movlw	255
  8734  000F12  1568               	andwf	(___flmul@grs+2)& (0+255),w,b
  8735  000F14  6F62               	movwf	(??___flmul+2)& (0+255),b
  8736  000F16  0E7F               	movlw	127
  8737  000F18  1569               	andwf	(___flmul@grs+3)& (0+255),w,b
  8738  000F1A  6F63               	movwf	(??___flmul+3)& (0+255),b
  8739  000F1C  5160               	movf	??___flmul& (0+255),w,b
  8740  000F1E  1161               	iorwf	(??___flmul+1)& (0+255),w,b
  8741  000F20  1162               	iorwf	(??___flmul+2)& (0+255),w,b
  8742  000F22  1163               	iorwf	(??___flmul+3)& (0+255),w,b
  8743  000F24  B4D8               	btfsc	status,2,c
  8744  000F26  EF97  F007         	goto	u4391
  8745  000F2A  EF99  F007         	goto	u4390
  8746  000F2E                     u4391:
  8747  000F2E  EF9D  F007         	goto	l1021
  8748  000F32                     u4390:
  8749  000F32                     l4298:
  8750                           
  8751                           ; BSR set to: 0
  8752  000F32  0E01               	movlw	1
  8753  000F34  6F65               	movwf	___flmul@aexp& (0+255),b
  8754  000F36  EFA6  F007         	goto	l1020
  8755  000F3A                     l1021:
  8756                           
  8757                           ; BSR set to: 0
  8758  000F3A  A16B               	btfss	___flmul@prod& (0+255),0,b
  8759  000F3C  EFA2  F007         	goto	u4401
  8760  000F40  EFA4  F007         	goto	u4400
  8761  000F44                     u4401:
  8762  000F44  EFA6  F007         	goto	l1020
  8763  000F48                     u4400:
  8764  000F48  EF99  F007         	goto	l4298
  8765  000F4C                     l1020:
  8766                           
  8767                           ; BSR set to: 0
  8768  000F4C  5165               	movf	___flmul@aexp& (0+255),w,b
  8769  000F4E  B4D8               	btfsc	status,2,c
  8770  000F50  EFAC  F007         	goto	u4411
  8771  000F54  EFAE  F007         	goto	u4410
  8772  000F58                     u4411:
  8773  000F58  EFD2  F007         	goto	l4310
  8774  000F5C                     u4410:
  8775  000F5C                     
  8776                           ; BSR set to: 0
  8777  000F5C  0E01               	movlw	1
  8778  000F5E  276B               	addwf	___flmul@prod& (0+255),f,b
  8779  000F60  0E00               	movlw	0
  8780  000F62  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8781  000F64  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8782  000F66  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8783  000F68                     
  8784                           ; BSR set to: 0
  8785  000F68  A16E               	btfss	(___flmul@prod+3)& (0+255),0,b
  8786  000F6A  EFB9  F007         	goto	u4421
  8787  000F6E  EFBB  F007         	goto	u4420
  8788  000F72                     u4421:
  8789  000F72  EFD2  F007         	goto	l4310
  8790  000F76                     u4420:
  8791  000F76                     
  8792                           ; BSR set to: 0
  8793  000F76  C06B  F060         	movff	___flmul@prod,??___flmul
  8794  000F7A  C06C  F061         	movff	___flmul@prod+1,??___flmul+1
  8795  000F7E  C06D  F062         	movff	___flmul@prod+2,??___flmul+2
  8796  000F82  C06E  F063         	movff	___flmul@prod+3,??___flmul+3
  8797  000F86  3563               	rlcf	(??___flmul+3)& (0+255),w,b
  8798  000F88  3363               	rrcf	(??___flmul+3)& (0+255),f,b
  8799  000F8A  3362               	rrcf	(??___flmul+2)& (0+255),f,b
  8800  000F8C  3361               	rrcf	(??___flmul+1)& (0+255),f,b
  8801  000F8E  3360               	rrcf	??___flmul& (0+255),f,b
  8802  000F90  C060  F06B         	movff	??___flmul,___flmul@prod
  8803  000F94  C061  F06C         	movff	??___flmul+1,___flmul@prod+1
  8804  000F98  C062  F06D         	movff	??___flmul+2,___flmul@prod+2
  8805  000F9C  C063  F06E         	movff	??___flmul+3,___flmul@prod+3
  8806  000FA0                     
  8807                           ; BSR set to: 0
  8808  000FA0  4B6F               	infsnz	___flmul@temp& (0+255),f,b
  8809  000FA2  2B70               	incf	(___flmul@temp+1)& (0+255),f,b
  8810  000FA4                     l4310:
  8811                           
  8812                           ; BSR set to: 0
  8813  000FA4  BF70               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8814  000FA6  EFDD  F007         	goto	u4431
  8815  000FAA  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  8816  000FAC  E108               	bnz	u4430
  8817  000FAE  296F               	incf	___flmul@temp& (0+255),w,b
  8818  000FB0  A0D8               	btfss	status,0,c
  8819  000FB2  EFDD  F007         	goto	u4431
  8820  000FB6  EFDF  F007         	goto	u4430
  8821  000FBA                     u4431:
  8822  000FBA  EFE9  F007         	goto	l4314
  8823  000FBE                     u4430:
  8824  000FBE                     
  8825                           ; BSR set to: 0
  8826  000FBE  0E00               	movlw	0
  8827  000FC0  6F6B               	movwf	___flmul@prod& (0+255),b
  8828  000FC2  0E00               	movlw	0
  8829  000FC4  6F6C               	movwf	(___flmul@prod+1)& (0+255),b
  8830  000FC6  0E80               	movlw	128
  8831  000FC8  6F6D               	movwf	(___flmul@prod+2)& (0+255),b
  8832  000FCA  0E7F               	movlw	127
  8833  000FCC  6F6E               	movwf	(___flmul@prod+3)& (0+255),b
  8834  000FCE  EF17  F008         	goto	l4326
  8835  000FD2                     l4314:
  8836                           
  8837                           ; BSR set to: 0
  8838  000FD2  BF70               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8839  000FD4  EFF6  F007         	goto	u4440
  8840  000FD8  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  8841  000FDA  E106               	bnz	u4441
  8842  000FDC  056F               	decf	___flmul@temp& (0+255),w,b
  8843  000FDE  B0D8               	btfsc	status,0,c
  8844  000FE0  EFF4  F007         	goto	u4441
  8845  000FE4  EFF6  F007         	goto	u4440
  8846  000FE8                     u4441:
  8847  000FE8  EF02  F008         	goto	l1028
  8848  000FEC                     u4440:
  8849  000FEC                     
  8850                           ; BSR set to: 0
  8851  000FEC  0E00               	movlw	0
  8852  000FEE  6F6B               	movwf	___flmul@prod& (0+255),b
  8853  000FF0  0E00               	movlw	0
  8854  000FF2  6F6C               	movwf	(___flmul@prod+1)& (0+255),b
  8855  000FF4  0E00               	movlw	0
  8856  000FF6  6F6D               	movwf	(___flmul@prod+2)& (0+255),b
  8857  000FF8  0E00               	movlw	0
  8858  000FFA  6F6E               	movwf	(___flmul@prod+3)& (0+255),b
  8859  000FFC  0E00               	movlw	0
  8860  000FFE  6F64               	movwf	___flmul@sign& (0+255),b
  8861  001000  EF17  F008         	goto	l4326
  8862  001004                     l1028:
  8863                           
  8864                           ; BSR set to: 0
  8865  001004  C06F  F06A         	movff	___flmul@temp,___flmul@bexp
  8866  001008                     
  8867                           ; BSR set to: 0
  8868  001008  0EFF               	movlw	255
  8869  00100A  176B               	andwf	___flmul@prod& (0+255),f,b
  8870  00100C  0EFF               	movlw	255
  8871  00100E  176C               	andwf	(___flmul@prod+1)& (0+255),f,b
  8872  001010  0E7F               	movlw	127
  8873  001012  176D               	andwf	(___flmul@prod+2)& (0+255),f,b
  8874  001014  0E00               	movlw	0
  8875  001016  176E               	andwf	(___flmul@prod+3)& (0+255),f,b
  8876  001018                     
  8877                           ; BSR set to: 0
  8878  001018  A16A               	btfss	___flmul@bexp& (0+255),0,b
  8879  00101A  EF11  F008         	goto	u4451
  8880  00101E  EF13  F008         	goto	u4450
  8881  001022                     u4451:
  8882  001022  EF14  F008         	goto	l4324
  8883  001026                     u4450:
  8884  001026                     
  8885                           ; BSR set to: 0
  8886  001026  8F6D               	bsf	(___flmul@prod+2)& (0+255),7,b
  8887  001028                     l4324:
  8888                           
  8889                           ; BSR set to: 0
  8890  001028  90D8               	bcf	status,0,c
  8891  00102A  316A               	rrcf	___flmul@bexp& (0+255),w,b
  8892  00102C  6F6E               	movwf	(___flmul@prod+3)& (0+255),b
  8893  00102E                     l4326:
  8894                           
  8895                           ; BSR set to: 0
  8896  00102E  5164               	movf	___flmul@sign& (0+255),w,b
  8897  001030  136E               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8898  001032                     
  8899                           ; BSR set to: 0
  8900  001032  C06B  F033         	movff	___flmul@prod,?___flmul
  8901  001036  C06C  F034         	movff	___flmul@prod+1,?___flmul+1
  8902  00103A  C06D  F035         	movff	___flmul@prod+2,?___flmul+2
  8903  00103E  C06E  F036         	movff	___flmul@prod+3,?___flmul+3
  8904  001042                     l1015:
  8905                           
  8906                           ; BSR set to: 0
  8907  001042  0012               	return		;funcret
  8908  001044                     __end_of___flmul:
  8909                           	callstack 0
  8910                           
  8911 ;; *************** function _bitExtract *****************
  8912 ;; Defined at:
  8913 ;;		line 72 in file "./geral.h"
  8914 ;; Parameters:    Size  Location     Type
  8915 ;;  numero          2   18[COMRAM] int 
  8916 ;;  k               2   20[COMRAM] int 
  8917 ;;  posicao         2   22[COMRAM] int 
  8918 ;; Auto vars:     Size  Location     Type
  8919 ;;		None
  8920 ;; Return value:  Size  Location     Type
  8921 ;;                  2   18[COMRAM] int 
  8922 ;; Registers used:
  8923 ;;		wreg, status,2, status,0
  8924 ;; Tracked objects:
  8925 ;;		On entry : 0/0
  8926 ;;		On exit  : 0/0
  8927 ;;		Unchanged: 0/0
  8928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8929 ;;      Params:         6       0       0       0
  8930 ;;      Locals:         0       0       0       0
  8931 ;;      Temps:          8       0       0       0
  8932 ;;      Totals:        14       0       0       0
  8933 ;;Total ram usage:       14 bytes
  8934 ;; Hardware stack levels used: 1
  8935 ;; Hardware stack levels required when called: 4
  8936 ;; This function calls:
  8937 ;;		Nothing
  8938 ;; This function is called by:
  8939 ;;		_getAD_AN
  8940 ;;		_getAD_ANbit
  8941 ;;		_testeLampadas
  8942 ;; This function uses a non-reentrant model
  8943 ;;
  8944                           
  8945                           	psect	text38
  8946  00311E                     __ptext38:
  8947                           	callstack 0
  8948  00311E                     _bitExtract:
  8949                           	callstack 25
  8950  00311E                     
  8951                           ;./geral.h: 73:         _delay((unsigned long)((20)*(20000000/4000.0)));
  8952  00311E  C017  F019         	movff	bitExtract@posicao,??_bitExtract
  8953  003122  C013  F01A         	movff	bitExtract@numero,??_bitExtract+1
  8954  003126  C014  F01B         	movff	bitExtract@numero+1,??_bitExtract+2
  8955  00312A  2A19               	incf	??_bitExtract^0,f,c
  8956  00312C  EF9B  F018         	goto	u2234
  8957  003130                     u2235:
  8958  003130  341B               	rlcf	(??_bitExtract+2)^0,w,c
  8959  003132  321B               	rrcf	(??_bitExtract+2)^0,f,c
  8960  003134  321A               	rrcf	(??_bitExtract+1)^0,f,c
  8961  003136                     u2234:
  8962  003136  2E19               	decfsz	??_bitExtract^0,f,c
  8963  003138  EF98  F018         	goto	u2235
  8964  00313C  0EFF               	movlw	255
  8965  00313E  6E1C               	movwf	(??_bitExtract+3)^0,c
  8966  003140  0EFF               	movlw	255
  8967  003142  6E1D               	movwf	(??_bitExtract+4)^0,c
  8968  003144  C015  F01E         	movff	bitExtract@k,??_bitExtract+5
  8969  003148  0E01               	movlw	1
  8970  00314A  6E1F               	movwf	(??_bitExtract+6)^0,c
  8971  00314C  0E00               	movlw	0
  8972  00314E  6E20               	movwf	(??_bitExtract+7)^0,c
  8973  003150  2A1E               	incf	(??_bitExtract+5)^0,f,c
  8974  003152  EFAE  F018         	goto	u2244
  8975  003156                     u2245:
  8976  003156  90D8               	bcf	status,0,c
  8977  003158  361F               	rlcf	(??_bitExtract+6)^0,f,c
  8978  00315A  3620               	rlcf	(??_bitExtract+7)^0,f,c
  8979  00315C                     u2244:
  8980  00315C  2E1E               	decfsz	(??_bitExtract+5)^0,f,c
  8981  00315E  EFAB  F018         	goto	u2245
  8982  003162  501C               	movf	(??_bitExtract+3)^0,w,c
  8983  003164  261F               	addwf	(??_bitExtract+6)^0,f,c
  8984  003166  501D               	movf	(??_bitExtract+4)^0,w,c
  8985  003168  2220               	addwfc	(??_bitExtract+7)^0,f,c
  8986  00316A  501A               	movf	(??_bitExtract+1)^0,w,c
  8987  00316C  141F               	andwf	(??_bitExtract+6)^0,w,c
  8988  00316E  6E13               	movwf	?_bitExtract^0,c
  8989  003170  501B               	movf	(??_bitExtract+2)^0,w,c
  8990  003172  1420               	andwf	(??_bitExtract+7)^0,w,c
  8991  003174  6E14               	movwf	(?_bitExtract+1)^0,c
  8992  003176  0012               	return		;funcret
  8993  003178                     __end_of_bitExtract:
  8994                           	callstack 0
  8995                           
  8996 ;; *************** function ___fltol *****************
  8997 ;; Defined at:
  8998 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  8999 ;; Parameters:    Size  Location     Type
  9000 ;;  f1              4   33[BANK0 ] int 
  9001 ;; Auto vars:     Size  Location     Type
  9002 ;;  exp1            1   42[BANK0 ] unsigned char 
  9003 ;;  sign1           1   41[BANK0 ] unsigned char 
  9004 ;; Return value:  Size  Location     Type
  9005 ;;                  4   33[BANK0 ] long 
  9006 ;; Registers used:
  9007 ;;		wreg, status,2, status,0
  9008 ;; Tracked objects:
  9009 ;;		On entry : 0/0
  9010 ;;		On exit  : 0/0
  9011 ;;		Unchanged: 0/0
  9012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9013 ;;      Params:         0       4       0       0
  9014 ;;      Locals:         0       2       0       0
  9015 ;;      Temps:          0       4       0       0
  9016 ;;      Totals:         0      10       0       0
  9017 ;;Total ram usage:       10 bytes
  9018 ;; Hardware stack levels used: 1
  9019 ;; Hardware stack levels required when called: 4
  9020 ;; This function calls:
  9021 ;;		Nothing
  9022 ;; This function is called by:
  9023 ;;		_getAD_AN
  9024 ;;		_moverMotor
  9025 ;;		_setPID
  9026 ;; This function uses a non-reentrant model
  9027 ;;
  9028                           
  9029                           	psect	text39
  9030  002680                     __ptext39:
  9031                           	callstack 0
  9032  002680                     ___fltol:
  9033                           	callstack 24
  9034  002680  0100               	movlb	0	; () banked
  9035  002682  3583               	rlcf	(___fltol@f1+2)& (0+255),w,b
  9036  002684  3584               	rlcf	(___fltol@f1+3)& (0+255),w,b
  9037  002686  6F8A               	movwf	___fltol@exp1& (0+255),b
  9038  002688  518A               	movf	___fltol@exp1& (0+255),w,b
  9039  00268A  A4D8               	btfss	status,2,c
  9040  00268C  EF4A  F013         	goto	u3411
  9041  002690  EF4C  F013         	goto	u3410
  9042  002694                     u3411:
  9043  002694  EF56  F013         	goto	l3386
  9044  002698                     u3410:
  9045  002698                     l3382:
  9046                           
  9047                           ; BSR set to: 0
  9048  002698  0E00               	movlw	0
  9049  00269A  6F81               	movwf	?___fltol& (0+255),b
  9050  00269C  0E00               	movlw	0
  9051  00269E  6F82               	movwf	(?___fltol+1)& (0+255),b
  9052  0026A0  0E00               	movlw	0
  9053  0026A2  6F83               	movwf	(?___fltol+2)& (0+255),b
  9054  0026A4  0E00               	movlw	0
  9055  0026A6  6F84               	movwf	(?___fltol+3)& (0+255),b
  9056  0026A8  EFC3  F013         	goto	l694
  9057  0026AC                     l3386:
  9058                           
  9059                           ; BSR set to: 0
  9060  0026AC  C081  F085         	movff	___fltol@f1,??___fltol
  9061  0026B0  C082  F086         	movff	___fltol@f1+1,??___fltol+1
  9062  0026B4  C083  F087         	movff	___fltol@f1+2,??___fltol+2
  9063  0026B8  C084  F088         	movff	___fltol@f1+3,??___fltol+3
  9064  0026BC  0E20               	movlw	32
  9065  0026BE  EF66  F013         	goto	u3420
  9066  0026C2                     u3425:
  9067  0026C2  90D8               	bcf	status,0,c
  9068  0026C4  3388               	rrcf	(??___fltol+3)& (0+255),f,b
  9069  0026C6  3387               	rrcf	(??___fltol+2)& (0+255),f,b
  9070  0026C8  3386               	rrcf	(??___fltol+1)& (0+255),f,b
  9071  0026CA  3385               	rrcf	??___fltol& (0+255),f,b
  9072  0026CC                     u3420:
  9073  0026CC  2EE8               	decfsz	wreg,f,c
  9074  0026CE  EF61  F013         	goto	u3425
  9075  0026D2  5185               	movf	??___fltol& (0+255),w,b
  9076  0026D4  6F89               	movwf	___fltol@sign1& (0+255),b
  9077  0026D6                     
  9078                           ; BSR set to: 0
  9079  0026D6  8F83               	bsf	(___fltol@f1+2)& (0+255),7,b
  9080  0026D8                     
  9081                           ; BSR set to: 0
  9082  0026D8  0EFF               	movlw	255
  9083  0026DA  1781               	andwf	___fltol@f1& (0+255),f,b
  9084  0026DC  0EFF               	movlw	255
  9085  0026DE  1782               	andwf	(___fltol@f1+1)& (0+255),f,b
  9086  0026E0  0EFF               	movlw	255
  9087  0026E2  1783               	andwf	(___fltol@f1+2)& (0+255),f,b
  9088  0026E4  0E00               	movlw	0
  9089  0026E6  1784               	andwf	(___fltol@f1+3)& (0+255),f,b
  9090  0026E8                     
  9091                           ; BSR set to: 0
  9092  0026E8  0E96               	movlw	150
  9093  0026EA  5F8A               	subwf	___fltol@exp1& (0+255),f,b
  9094  0026EC                     
  9095                           ; BSR set to: 0
  9096  0026EC  BF8A               	btfsc	___fltol@exp1& (0+255),7,b
  9097  0026EE  EF7D  F013         	goto	u3430
  9098  0026F2  EF7B  F013         	goto	u3431
  9099  0026F6                     u3431:
  9100  0026F6  EF93  F013         	goto	l3406
  9101  0026FA                     u3430:
  9102  0026FA                     
  9103                           ; BSR set to: 0
  9104  0026FA  518A               	movf	___fltol@exp1& (0+255),w,b
  9105  0026FC  0A80               	xorlw	128
  9106  0026FE  0F97               	addlw	151
  9107  002700  B0D8               	btfsc	status,0,c
  9108  002702  EF85  F013         	goto	u3441
  9109  002706  EF87  F013         	goto	u3440
  9110  00270A                     u3441:
  9111  00270A  EF89  F013         	goto	l3402
  9112  00270E                     u3440:
  9113  00270E  EF4C  F013         	goto	l3382
  9114  002712                     l3402:
  9115                           
  9116                           ; BSR set to: 0
  9117  002712  90D8               	bcf	status,0,c
  9118  002714  3384               	rrcf	(___fltol@f1+3)& (0+255),f,b
  9119  002716  3383               	rrcf	(___fltol@f1+2)& (0+255),f,b
  9120  002718  3382               	rrcf	(___fltol@f1+1)& (0+255),f,b
  9121  00271A  3381               	rrcf	___fltol@f1& (0+255),f,b
  9122  00271C                     
  9123                           ; BSR set to: 0
  9124  00271C  3F8A               	incfsz	___fltol@exp1& (0+255),f,b
  9125  00271E  EF89  F013         	goto	l3402
  9126  002722  EFAB  F013         	goto	l3416
  9127  002726                     l3406:
  9128                           
  9129                           ; BSR set to: 0
  9130  002726  0E1F               	movlw	31
  9131  002728  658A               	cpfsgt	___fltol@exp1& (0+255),b
  9132  00272A  EF99  F013         	goto	u3451
  9133  00272E  EF9B  F013         	goto	u3450
  9134  002732                     u3451:
  9135  002732  EFA3  F013         	goto	l3414
  9136  002736                     u3450:
  9137  002736  EF4C  F013         	goto	l3382
  9138  00273A                     l3412:
  9139                           
  9140                           ; BSR set to: 0
  9141  00273A  90D8               	bcf	status,0,c
  9142  00273C  3781               	rlcf	___fltol@f1& (0+255),f,b
  9143  00273E  3782               	rlcf	(___fltol@f1+1)& (0+255),f,b
  9144  002740  3783               	rlcf	(___fltol@f1+2)& (0+255),f,b
  9145  002742  3784               	rlcf	(___fltol@f1+3)& (0+255),f,b
  9146  002744  078A               	decf	___fltol@exp1& (0+255),f,b
  9147  002746                     l3414:
  9148                           
  9149                           ; BSR set to: 0
  9150  002746  518A               	movf	___fltol@exp1& (0+255),w,b
  9151  002748  A4D8               	btfss	status,2,c
  9152  00274A  EFA9  F013         	goto	u3461
  9153  00274E  EFAB  F013         	goto	u3460
  9154  002752                     u3461:
  9155  002752  EF9D  F013         	goto	l3412
  9156  002756                     u3460:
  9157  002756                     l3416:
  9158                           
  9159                           ; BSR set to: 0
  9160  002756  5189               	movf	___fltol@sign1& (0+255),w,b
  9161  002758  B4D8               	btfsc	status,2,c
  9162  00275A  EFB1  F013         	goto	u3471
  9163  00275E  EFB3  F013         	goto	u3470
  9164  002762                     u3471:
  9165  002762  EFBB  F013         	goto	l3420
  9166  002766                     u3470:
  9167  002766                     
  9168                           ; BSR set to: 0
  9169  002766  1F84               	comf	(___fltol@f1+3)& (0+255),f,b
  9170  002768  1F83               	comf	(___fltol@f1+2)& (0+255),f,b
  9171  00276A  1F82               	comf	(___fltol@f1+1)& (0+255),f,b
  9172  00276C  6D81               	negf	___fltol@f1& (0+255),b
  9173  00276E  0E00               	movlw	0
  9174  002770  2382               	addwfc	(___fltol@f1+1)& (0+255),f,b
  9175  002772  2383               	addwfc	(___fltol@f1+2)& (0+255),f,b
  9176  002774  2384               	addwfc	(___fltol@f1+3)& (0+255),f,b
  9177  002776                     l3420:
  9178                           
  9179                           ; BSR set to: 0
  9180  002776  C081  F081         	movff	___fltol@f1,?___fltol
  9181  00277A  C082  F082         	movff	___fltol@f1+1,?___fltol+1
  9182  00277E  C083  F083         	movff	___fltol@f1+2,?___fltol+2
  9183  002782  C084  F084         	movff	___fltol@f1+3,?___fltol+3
  9184  002786                     l694:
  9185                           
  9186                           ; BSR set to: 0
  9187  002786  0012               	return		;funcret
  9188  002788                     __end_of___fltol:
  9189                           	callstack 0
  9190                           
  9191 ;; *************** function ___fleq *****************
  9192 ;; Defined at:
  9193 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  9194 ;; Parameters:    Size  Location     Type
  9195 ;;  ff1             4   18[COMRAM] long 
  9196 ;;  ff2             4   22[COMRAM] long 
  9197 ;; Auto vars:     Size  Location     Type
  9198 ;;		None
  9199 ;; Return value:  Size  Location     Type
  9200 ;;		None               void
  9201 ;; Registers used:
  9202 ;;		wreg, status,2, status,0
  9203 ;; Tracked objects:
  9204 ;;		On entry : 0/0
  9205 ;;		On exit  : 0/0
  9206 ;;		Unchanged: 0/0
  9207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9208 ;;      Params:         8       0       0       0
  9209 ;;      Locals:         0       0       0       0
  9210 ;;      Temps:          4       0       0       0
  9211 ;;      Totals:        12       0       0       0
  9212 ;;Total ram usage:       12 bytes
  9213 ;; Hardware stack levels used: 1
  9214 ;; Hardware stack levels required when called: 4
  9215 ;; This function calls:
  9216 ;;		Nothing
  9217 ;; This function is called by:
  9218 ;;		_posicao
  9219 ;;		_PrintSensores
  9220 ;; This function uses a non-reentrant model
  9221 ;;
  9222                           
  9223                           	psect	text40
  9224  002EF8                     __ptext40:
  9225                           	callstack 0
  9226  002EF8                     ___fleq:
  9227                           	callstack 24
  9228  002EF8  0E00               	movlw	0
  9229  002EFA  1413               	andwf	___fleq@ff1^0,w,c
  9230  002EFC  6E1B               	movwf	??___fleq^0,c
  9231  002EFE  0E00               	movlw	0
  9232  002F00  1414               	andwf	(___fleq@ff1+1)^0,w,c
  9233  002F02  6E1C               	movwf	(??___fleq+1)^0,c
  9234  002F04  0E80               	movlw	128
  9235  002F06  1415               	andwf	(___fleq@ff1+2)^0,w,c
  9236  002F08  6E1D               	movwf	(??___fleq+2)^0,c
  9237  002F0A  0E7F               	movlw	127
  9238  002F0C  1416               	andwf	(___fleq@ff1+3)^0,w,c
  9239  002F0E  6E1E               	movwf	(??___fleq+3)^0,c
  9240  002F10  501B               	movf	??___fleq^0,w,c
  9241  002F12  101C               	iorwf	(??___fleq+1)^0,w,c
  9242  002F14  101D               	iorwf	(??___fleq+2)^0,w,c
  9243  002F16  101E               	iorwf	(??___fleq+3)^0,w,c
  9244  002F18  A4D8               	btfss	status,2,c
  9245  002F1A  EF91  F017         	goto	u5181
  9246  002F1E  EF93  F017         	goto	u5180
  9247  002F22                     u5181:
  9248  002F22  EF9B  F017         	goto	l4736
  9249  002F26                     u5180:
  9250  002F26  0E00               	movlw	0
  9251  002F28  6E13               	movwf	___fleq@ff1^0,c
  9252  002F2A  0E00               	movlw	0
  9253  002F2C  6E14               	movwf	(___fleq@ff1+1)^0,c
  9254  002F2E  0E00               	movlw	0
  9255  002F30  6E15               	movwf	(___fleq@ff1+2)^0,c
  9256  002F32  0E00               	movlw	0
  9257  002F34  6E16               	movwf	(___fleq@ff1+3)^0,c
  9258  002F36                     l4736:
  9259  002F36  0E00               	movlw	0
  9260  002F38  1417               	andwf	___fleq@ff2^0,w,c
  9261  002F3A  6E1B               	movwf	??___fleq^0,c
  9262  002F3C  0E00               	movlw	0
  9263  002F3E  1418               	andwf	(___fleq@ff2+1)^0,w,c
  9264  002F40  6E1C               	movwf	(??___fleq+1)^0,c
  9265  002F42  0E80               	movlw	128
  9266  002F44  1419               	andwf	(___fleq@ff2+2)^0,w,c
  9267  002F46  6E1D               	movwf	(??___fleq+2)^0,c
  9268  002F48  0E7F               	movlw	127
  9269  002F4A  141A               	andwf	(___fleq@ff2+3)^0,w,c
  9270  002F4C  6E1E               	movwf	(??___fleq+3)^0,c
  9271  002F4E  501B               	movf	??___fleq^0,w,c
  9272  002F50  101C               	iorwf	(??___fleq+1)^0,w,c
  9273  002F52  101D               	iorwf	(??___fleq+2)^0,w,c
  9274  002F54  101E               	iorwf	(??___fleq+3)^0,w,c
  9275  002F56  A4D8               	btfss	status,2,c
  9276  002F58  EFB0  F017         	goto	u5191
  9277  002F5C  EFB2  F017         	goto	u5190
  9278  002F60                     u5191:
  9279  002F60  EFBA  F017         	goto	l4740
  9280  002F64                     u5190:
  9281  002F64  0E00               	movlw	0
  9282  002F66  6E17               	movwf	___fleq@ff2^0,c
  9283  002F68  0E00               	movlw	0
  9284  002F6A  6E18               	movwf	(___fleq@ff2+1)^0,c
  9285  002F6C  0E00               	movlw	0
  9286  002F6E  6E19               	movwf	(___fleq@ff2+2)^0,c
  9287  002F70  0E00               	movlw	0
  9288  002F72  6E1A               	movwf	(___fleq@ff2+3)^0,c
  9289  002F74                     l4740:
  9290  002F74  5017               	movf	___fleq@ff2^0,w,c
  9291  002F76  1813               	xorwf	___fleq@ff1^0,w,c
  9292  002F78  E10F               	bnz	u5200
  9293  002F7A  5018               	movf	(___fleq@ff2+1)^0,w,c
  9294  002F7C  1814               	xorwf	(___fleq@ff1+1)^0,w,c
  9295  002F7E  E10C               	bnz	u5200
  9296  002F80  5019               	movf	(___fleq@ff2+2)^0,w,c
  9297  002F82  1815               	xorwf	(___fleq@ff1+2)^0,w,c
  9298  002F84  E109               	bnz	u5200
  9299  002F86  501A               	movf	(___fleq@ff2+3)^0,w,c
  9300  002F88  1816               	xorwf	(___fleq@ff1+3)^0,w,c
  9301  002F8A  B4D8               	btfsc	status,2,c
  9302  002F8C  EFCA  F017         	goto	u5201
  9303  002F90  EFCC  F017         	goto	u5200
  9304  002F94                     u5201:
  9305  002F94  EFCF  F017         	goto	l4744
  9306  002F98                     u5200:
  9307  002F98  90D8               	bcf	status,0,c
  9308  002F9A  EFD0  F017         	goto	l656
  9309  002F9E                     l4744:
  9310  002F9E  80D8               	bsf	status,0,c
  9311  002FA0                     l656:
  9312  002FA0  0012               	return		;funcret
  9313  002FA2                     __end_of___fleq:
  9314                           	callstack 0
  9315                           
  9316 ;; *************** function _UARTSendString *****************
  9317 ;; Defined at:
  9318 ;;		line 57 in file "./bluetooth.h"
  9319 ;; Parameters:    Size  Location     Type
  9320 ;;  str             2   64[BANK0 ] PTR unsigned char 
  9321 ;;		 -> STR_84(19), STR_83(5), STR_82(5), STR_63(2), 
  9322 ;;		 -> STR_62(5), STR_61(5), STR_60(20), STR_59(15), 
  9323 ;;		 -> STR_58(11), STR_57(16), STR_56(4), STR_55(3), 
  9324 ;;		 -> STR_54(14), STR_53(13), STR_52(10), STR_51(2), 
  9325 ;;		 -> STR_50(12), STR_49(7), STR_48(13), STR_47(12), 
  9326 ;;		 -> STR_46(13), STR_45(12), STR_44(13), STR_43(12), 
  9327 ;;		 -> STR_42(12), STR_41(11), STR_40(13), STR_39(12), 
  9328 ;;		 -> STR_38(2), STR_37(11), STR_36(2), STR_35(2), 
  9329 ;;		 -> STR_34(3), testeADbit@string(2), STR_33(2), STR_32(11), 
  9330 ;;		 -> STR_31(2), STR_30(6), STR_29(2), STR_28(6), 
  9331 ;;		 -> STR_27(2), STR_26(6), STR_25(2), STR_24(6), 
  9332 ;;		 -> STR_23(2), STR_22(6), STR_5(16), STR_2(15), 
  9333 ;;		 -> valorConvUARTbit@string(5), valorConvUART@string(5), STR_1(1), 
  9334 ;;  max_length      2   66[BANK0 ] const int 
  9335 ;; Auto vars:     Size  Location     Type
  9336 ;;  i               2   70[BANK0 ] int 
  9337 ;; Return value:  Size  Location     Type
  9338 ;;                  1    wreg      void 
  9339 ;; Registers used:
  9340 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9341 ;; Tracked objects:
  9342 ;;		On entry : 0/0
  9343 ;;		On exit  : 0/0
  9344 ;;		Unchanged: 0/0
  9345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9346 ;;      Params:         0       4       0       0
  9347 ;;      Locals:         0       2       0       0
  9348 ;;      Temps:          0       2       0       0
  9349 ;;      Totals:         0       8       0       0
  9350 ;;Total ram usage:        8 bytes
  9351 ;; Hardware stack levels used: 1
  9352 ;; Hardware stack levels required when called: 6
  9353 ;; This function calls:
  9354 ;;		_UARTSendChar
  9355 ;;		_UARTWriteTest
  9356 ;; This function is called by:
  9357 ;;		_testeMotores
  9358 ;;		_testeAD
  9359 ;;		_testeADbit
  9360 ;;		_PrintSensores
  9361 ;;		_main
  9362 ;; This function uses a non-reentrant model
  9363 ;;
  9364                           
  9365                           	psect	text41
  9366  002B40                     __ptext41:
  9367                           	callstack 0
  9368  002B40                     _UARTSendString:
  9369                           	callstack 23
  9370  002B40                     
  9371                           ;./bluetooth.h: 58:     int i = 0;
  9372  002B40  0E00               	movlw	0
  9373  002B42  0100               	movlb	0	; () banked
  9374  002B44  6FA7               	movwf	(UARTSendString@i+1)& (0+255),b
  9375  002B46  0E00               	movlw	0
  9376  002B48  6FA6               	movwf	UARTSendString@i& (0+255),b
  9377                           
  9378                           ;./bluetooth.h: 60:     for (i = 0; i < max_length; i++) {
  9379  002B4A  0E00               	movlw	0
  9380  002B4C  6FA7               	movwf	(UARTSendString@i+1)& (0+255),b
  9381  002B4E  0E00               	movlw	0
  9382  002B50  6FA6               	movwf	UARTSendString@i& (0+255),b
  9383  002B52                     
  9384                           ; BSR set to: 0
  9385  002B52  BFA3               	btfsc	(UARTSendString@max_length+1)& (0+255),7,b
  9386  002B54  EFB6  F015         	goto	u3490
  9387  002B58  51A3               	movf	(UARTSendString@max_length+1)& (0+255),w,b
  9388  002B5A  E106               	bnz	u3491
  9389  002B5C  05A2               	decf	UARTSendString@max_length& (0+255),w,b
  9390  002B5E  B0D8               	btfsc	status,0,c
  9391  002B60  EFB4  F015         	goto	u3491
  9392  002B64  EFB6  F015         	goto	u3490
  9393  002B68                     u3491:
  9394  002B68  EFB8  F015         	goto	l3432
  9395  002B6C                     u3490:
  9396  002B6C  EF05  F016         	goto	l140
  9397  002B70                     l3432:
  9398                           
  9399                           ; BSR set to: 0
  9400                           ;./bluetooth.h: 62:         if (str[i] == '\0') break;
  9401  002B70  51A6               	movf	UARTSendString@i& (0+255),w,b
  9402  002B72  25A0               	addwf	UARTSendString@str& (0+255),w,b
  9403  002B74  6FA4               	movwf	??_UARTSendString& (0+255),b
  9404  002B76  51A7               	movf	(UARTSendString@i+1)& (0+255),w,b
  9405  002B78  21A1               	addwfc	(UARTSendString@str+1)& (0+255),w,b
  9406  002B7A  6FA5               	movwf	(??_UARTSendString+1)& (0+255),b
  9407  002B7C  C0A4  FFF6         	movff	??_UARTSendString,tblptrl
  9408  002B80  C0A5  FFF7         	movff	??_UARTSendString+1,tblptrh
  9409  002B84  6AF8               	clrf	tblptru,c
  9410  002B86  0E02               	movlw	(high __ramtop+-1)
  9411  002B88  64F7               	cpfsgt	tblptrh,c
  9412  002B8A  D003               	bra	u3507
  9413  002B8C  0008               	tblrd		*
  9414  002B8E  50F5               	movf	tablat,w,c
  9415  002B90  D005               	bra	u3500
  9416  002B92                     u3507:
  9417  002B92  CFF6 FFE9          	movff	tblptrl,fsr0l
  9418  002B96  CFF7 FFEA          	movff	tblptrh,fsr0h
  9419  002B9A  50EF               	movf	indf0,w,c
  9420  002B9C                     u3500:
  9421  002B9C  0900               	iorlw	0
  9422  002B9E  A4D8               	btfss	status,2,c
  9423  002BA0  EFD4  F015         	goto	u3511
  9424  002BA4  EFD6  F015         	goto	u3510
  9425  002BA8                     u3511:
  9426  002BA8  EFD8  F015         	goto	l3436
  9427  002BAC                     u3510:
  9428  002BAC  EF05  F016         	goto	l140
  9429  002BB0                     l3436:
  9430                           
  9431                           ;./bluetooth.h: 63:         UARTSendChar(str[i]);
  9432  002BB0  0100               	movlb	0	; () banked
  9433  002BB2  51A6               	movf	UARTSendString@i& (0+255),w,b
  9434  002BB4  25A0               	addwf	UARTSendString@str& (0+255),w,b
  9435  002BB6  6FA4               	movwf	??_UARTSendString& (0+255),b
  9436  002BB8  51A7               	movf	(UARTSendString@i+1)& (0+255),w,b
  9437  002BBA  21A1               	addwfc	(UARTSendString@str+1)& (0+255),w,b
  9438  002BBC  6FA5               	movwf	(??_UARTSendString+1)& (0+255),b
  9439  002BBE  C0A4  FFF6         	movff	??_UARTSendString,tblptrl
  9440  002BC2  C0A5  FFF7         	movff	??_UARTSendString+1,tblptrh
  9441  002BC6  6AF8               	clrf	tblptru,c
  9442  002BC8  0E02               	movlw	(high __ramtop+-1)
  9443  002BCA  64F7               	cpfsgt	tblptrh,c
  9444  002BCC  D003               	bra	u3527
  9445  002BCE  0008               	tblrd		*
  9446  002BD0  50F5               	movf	tablat,w,c
  9447  002BD2  D005               	bra	u3520
  9448  002BD4                     u3527:
  9449  002BD4  CFF6 FFE9          	movff	tblptrl,fsr0l
  9450  002BD8  CFF7 FFEA          	movff	tblptrh,fsr0h
  9451  002BDC  50EF               	movf	indf0,w,c
  9452  002BDE                     u3520:
  9453  002BDE  EC3E  F01A         	call	_UARTSendChar
  9454  002BE2                     
  9455                           ;./bluetooth.h: 64:         UARTWriteTest();
  9456  002BE2  EC28  F01A         	call	_UARTWriteTest	;wreg free
  9457  002BE6                     
  9458                           ;./bluetooth.h: 66:     }
  9459  002BE6  0100               	movlb	0	; () banked
  9460  002BE8  4BA6               	infsnz	UARTSendString@i& (0+255),f,b
  9461  002BEA  2BA7               	incf	(UARTSendString@i+1)& (0+255),f,b
  9462  002BEC                     
  9463                           ; BSR set to: 0
  9464  002BEC  51A2               	movf	UARTSendString@max_length& (0+255),w,b
  9465  002BEE  5DA6               	subwf	UARTSendString@i& (0+255),w,b
  9466  002BF0  51A7               	movf	(UARTSendString@i+1)& (0+255),w,b
  9467  002BF2  0A80               	xorlw	128
  9468  002BF4  6FA4               	movwf	??_UARTSendString& (0+255),b
  9469  002BF6  51A3               	movf	(UARTSendString@max_length+1)& (0+255),w,b
  9470  002BF8  0A80               	xorlw	128
  9471  002BFA  59A4               	subwfb	??_UARTSendString& (0+255),w,b
  9472  002BFC  A0D8               	btfss	status,0,c
  9473  002BFE  EF03  F016         	goto	u3531
  9474  002C02  EF05  F016         	goto	u3530
  9475  002C06                     u3531:
  9476  002C06  EFB8  F015         	goto	l3432
  9477  002C0A                     u3530:
  9478  002C0A                     l140:
  9479  002C0A  0012               	return		;funcret
  9480  002C0C                     __end_of_UARTSendString:
  9481                           	callstack 0
  9482                           
  9483 ;; *************** function _UARTSendChar *****************
  9484 ;; Defined at:
  9485 ;;		line 52 in file "./bluetooth.h"
  9486 ;; Parameters:    Size  Location     Type
  9487 ;;  c               1    wreg     unsigned char 
  9488 ;; Auto vars:     Size  Location     Type
  9489 ;;  c               1   18[COMRAM] unsigned char 
  9490 ;; Return value:  Size  Location     Type
  9491 ;;                  1    wreg      void 
  9492 ;; Registers used:
  9493 ;;		wreg, cstack
  9494 ;; Tracked objects:
  9495 ;;		On entry : 0/0
  9496 ;;		On exit  : 0/0
  9497 ;;		Unchanged: 0/0
  9498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9499 ;;      Params:         0       0       0       0
  9500 ;;      Locals:         1       0       0       0
  9501 ;;      Temps:          0       0       0       0
  9502 ;;      Totals:         1       0       0       0
  9503 ;;Total ram usage:        1 bytes
  9504 ;; Hardware stack levels used: 1
  9505 ;; Hardware stack levels required when called: 5
  9506 ;; This function calls:
  9507 ;;		_UARTWriteTest
  9508 ;; This function is called by:
  9509 ;;		_UARTSendString
  9510 ;;		_main
  9511 ;; This function uses a non-reentrant model
  9512 ;;
  9513                           
  9514                           	psect	text42
  9515  00347C                     __ptext42:
  9516                           	callstack 0
  9517  00347C                     _UARTSendChar:
  9518                           	callstack 23
  9519                           
  9520                           ;incstack = 0
  9521                           ;UARTSendChar@c stored from wreg
  9522  00347C  6E13               	movwf	UARTSendChar@c^0,c
  9523  00347E                     
  9524                           ;./bluetooth.h: 53:     TXREG = c;
  9525  00347E  C013  FFAD         	movff	UARTSendChar@c,4013	;volatile
  9526  003482                     
  9527                           ;./bluetooth.h: 54:     UARTWriteTest();
  9528  003482  EC28  F01A         	call	_UARTWriteTest	;wreg free
  9529  003486  0012               	return		;funcret
  9530  003488                     __end_of_UARTSendChar:
  9531                           	callstack 0
  9532                           
  9533 ;; *************** function _UARTWriteTest *****************
  9534 ;; Defined at:
  9535 ;;		line 48 in file "./bluetooth.h"
  9536 ;; Parameters:    Size  Location     Type
  9537 ;;		None
  9538 ;; Auto vars:     Size  Location     Type
  9539 ;;		None
  9540 ;; Return value:  Size  Location     Type
  9541 ;;                  1    wreg      void 
  9542 ;; Registers used:
  9543 ;;		None
  9544 ;; Tracked objects:
  9545 ;;		On entry : 0/0
  9546 ;;		On exit  : 0/0
  9547 ;;		Unchanged: 0/0
  9548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9549 ;;      Params:         0       0       0       0
  9550 ;;      Locals:         0       0       0       0
  9551 ;;      Temps:          0       0       0       0
  9552 ;;      Totals:         0       0       0       0
  9553 ;;Total ram usage:        0 bytes
  9554 ;; Hardware stack levels used: 1
  9555 ;; Hardware stack levels required when called: 4
  9556 ;; This function calls:
  9557 ;;		Nothing
  9558 ;; This function is called by:
  9559 ;;		_UARTSendChar
  9560 ;;		_UARTSendString
  9561 ;; This function uses a non-reentrant model
  9562 ;;
  9563                           
  9564                           	psect	text43
  9565  003450                     __ptext43:
  9566                           	callstack 0
  9567  003450                     _UARTWriteTest:
  9568                           	callstack 24
  9569  003450                     l128:
  9570  003450  A2AC               	btfss	4012,1,c	;volatile
  9571  003452  EF2D  F01A         	goto	u2221
  9572  003456  EF2F  F01A         	goto	u2220
  9573  00345A                     u2221:
  9574  00345A  EF28  F01A         	goto	l128
  9575  00345E                     u2220:
  9576  00345E  0012               	return		;funcret
  9577  003460                     __end_of_UARTWriteTest:
  9578                           	callstack 0
  9579                           
  9580 ;; *************** function _ISR *****************
  9581 ;; Defined at:
  9582 ;;		line 26 in file "main.c"
  9583 ;; Parameters:    Size  Location     Type
  9584 ;;		None
  9585 ;; Auto vars:     Size  Location     Type
  9586 ;;		None
  9587 ;; Return value:  Size  Location     Type
  9588 ;;                  1    wreg      void 
  9589 ;; Registers used:
  9590 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9591 ;; Tracked objects:
  9592 ;;		On entry : 0/0
  9593 ;;		On exit  : 0/0
  9594 ;;		Unchanged: 0/0
  9595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9596 ;;      Params:         0       0       0       0
  9597 ;;      Locals:         0       0       0       0
  9598 ;;      Temps:          8       0       0       0
  9599 ;;      Totals:         8       0       0       0
  9600 ;;Total ram usage:        8 bytes
  9601 ;; Hardware stack levels used: 1
  9602 ;; Hardware stack levels required when called: 3
  9603 ;; This function calls:
  9604 ;;		_ligaTimer0
  9605 ;;		_setComando
  9606 ;;		i2_UARTReadChar
  9607 ;;		i2_UARTSendString
  9608 ;;		i2_setDutyPWM0
  9609 ;;		i2_setDutyPWM2
  9610 ;;		i2_setDutyPWM4
  9611 ;;		i2_setDutyPWM6
  9612 ;; This function is called by:
  9613 ;;		Interrupt level 2
  9614 ;; This function uses a non-reentrant model
  9615 ;;
  9616                           
  9617                           	psect	intcode
  9618  000008                     __pintcode:
  9619                           	callstack 0
  9620  000008                     _ISR:
  9621                           	callstack 22
  9622                           
  9623                           ;incstack = 0
  9624  000008  824D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9625  00000A  CFE9 F00B          	movff	fsr0l,??_ISR
  9626  00000E  CFEA F00C          	movff	fsr0h,??_ISR+1
  9627  000012  CFF3 F00D          	movff	prodl,??_ISR+2
  9628  000016  CFF4 F00E          	movff	prodh,??_ISR+3
  9629  00001A  CFF6 F00F          	movff	tblptrl,??_ISR+4
  9630  00001E  CFF7 F010          	movff	tblptrh,??_ISR+5
  9631  000022  CFF8 F011          	movff	tblptru,??_ISR+6
  9632  000026  CFF5 F012          	movff	tablat,??_ISR+7
  9633  00002A                     
  9634                           ;main.c: 28:     if (PIR1bits.RCIF) {
  9635  00002A  AA9E               	btfss	158,5,c	;volatile
  9636  00002C  EF1A  F000         	goto	i2u402_41
  9637  000030  EF1C  F000         	goto	i2u402_40
  9638  000034                     i2u402_41:
  9639  000034  EF4D  F001         	goto	i2l4064
  9640  000038                     i2u402_40:
  9641  000038                     
  9642                           ;main.c: 30:         if (RCSTAbits.FERR || RCSTAbits.OERR) {
  9643  000038  B4AB               	btfsc	171,2,c	;volatile
  9644  00003A  EF21  F000         	goto	i2u403_41
  9645  00003E  EF23  F000         	goto	i2u403_40
  9646  000042                     i2u403_41:
  9647  000042  EF2A  F000         	goto	i2l362
  9648  000046                     i2u403_40:
  9649  000046  A2AB               	btfss	171,1,c	;volatile
  9650  000048  EF28  F000         	goto	i2u404_41
  9651  00004C  EF2A  F000         	goto	i2u404_40
  9652  000050                     i2u404_41:
  9653  000050  EF2D  F000         	goto	i2l3982
  9654  000054                     i2u404_40:
  9655  000054                     i2l362:
  9656                           
  9657                           ;main.c: 31:             RCSTAbits.OERR = 1;
  9658  000054  82AB               	bsf	171,1,c	;volatile
  9659                           
  9660                           ;main.c: 32:             RCSTAbits.CREN = 0;
  9661  000056  98AB               	bcf	171,4,c	;volatile
  9662                           
  9663                           ;main.c: 33:             RCSTAbits.CREN = 1;
  9664  000058  88AB               	bsf	171,4,c	;volatile
  9665  00005A                     i2l3982:
  9666                           
  9667                           ;main.c: 36:         recebidoChar = UARTReadChar();
  9668  00005A  EC58  F01A         	call	i2_UARTReadChar	;wreg free
  9669  00005E  6E4C               	movwf	_recebidoChar^0,c
  9670  000060                     
  9671                           ;main.c: 38:         if (RCREG == '1') {
  9672  000060  0E31               	movlw	49
  9673  000062  18AE               	xorwf	174,w,c	;volatile
  9674  000064  A4D8               	btfss	status,2,c
  9675  000066  EF37  F000         	goto	i2u405_41
  9676  00006A  EF39  F000         	goto	i2u405_40
  9677  00006E                     i2u405_41:
  9678  00006E  EF45  F000         	goto	i2l3990
  9679  000072                     i2u405_40:
  9680  000072                     
  9681                           ;main.c: 39:             ligaTimer0();
  9682  000072  EC5C  F01A         	call	_ligaTimer0	;wreg free
  9683  000076                     
  9684                           ;main.c: 40:             UARTSendString("Timer0 on", 16);
  9685  000076  0EB7               	movlw	low STR_52
  9686  000078  6E02               	movwf	i2UARTSendString@str^0,c
  9687  00007A  0E3F               	movlw	high STR_52
  9688  00007C  6E03               	movwf	(i2UARTSendString@str+1)^0,c
  9689  00007E  0E00               	movlw	0
  9690  000080  6E05               	movwf	(i2UARTSendString@max_length+1)^0,c
  9691  000082  0E10               	movlw	16
  9692  000084  6E04               	movwf	i2UARTSendString@max_length^0,c
  9693  000086  EC06  F016         	call	i2_UARTSendString	;wreg free
  9694  00008A                     i2l3990:
  9695                           
  9696                           ;main.c: 43:         if (RCREG == 'a') {
  9697  00008A  0E61               	movlw	97
  9698  00008C  18AE               	xorwf	174,w,c	;volatile
  9699  00008E  A4D8               	btfss	status,2,c
  9700  000090  EF4C  F000         	goto	i2u406_41
  9701  000094  EF4E  F000         	goto	i2u406_40
  9702  000098                     i2u406_41:
  9703  000098  EF5E  F000         	goto	i2l3996
  9704  00009C                     i2u406_40:
  9705  00009C                     
  9706                           ;main.c: 44:             setComando("testeMotores");
  9707  00009C  0E4C               	movlw	low STR_53
  9708  00009E  6E01               	movwf	setComando@c^0,c
  9709  0000A0  0E3F               	movlw	high STR_53
  9710  0000A2  6E02               	movwf	(setComando@c+1)^0,c
  9711  0000A4  EC4F  F01A         	call	_setComando	;wreg free
  9712  0000A8                     
  9713                           ;main.c: 45:             UARTSendString(comando, 16);
  9714  0000A8  C0FE  F002         	movff	_comando,i2UARTSendString@str
  9715  0000AC  C0FF  F003         	movff	_comando+1,i2UARTSendString@str+1
  9716  0000B0  0E00               	movlw	0
  9717  0000B2  6E05               	movwf	(i2UARTSendString@max_length+1)^0,c
  9718  0000B4  0E10               	movlw	16
  9719  0000B6  6E04               	movwf	i2UARTSendString@max_length^0,c
  9720  0000B8  EC06  F016         	call	i2_UARTSendString	;wreg free
  9721  0000BC                     i2l3996:
  9722                           
  9723                           ;main.c: 48:         if (RCREG == 'b') {
  9724  0000BC  0E62               	movlw	98
  9725  0000BE  18AE               	xorwf	174,w,c	;volatile
  9726  0000C0  A4D8               	btfss	status,2,c
  9727  0000C2  EF65  F000         	goto	i2u407_41
  9728  0000C6  EF67  F000         	goto	i2u407_40
  9729  0000CA                     i2u407_41:
  9730  0000CA  EF77  F000         	goto	i2l4002
  9731  0000CE                     i2u407_40:
  9732  0000CE                     
  9733                           ;main.c: 49:             setComando("testeLampadas");
  9734  0000CE  0E0A               	movlw	low STR_54
  9735  0000D0  6E01               	movwf	setComando@c^0,c
  9736  0000D2  0E3F               	movlw	high STR_54
  9737  0000D4  6E02               	movwf	(setComando@c+1)^0,c
  9738  0000D6  EC4F  F01A         	call	_setComando	;wreg free
  9739  0000DA                     
  9740                           ;main.c: 50:             UARTSendString(comando, 16);
  9741  0000DA  C0FE  F002         	movff	_comando,i2UARTSendString@str
  9742  0000DE  C0FF  F003         	movff	_comando+1,i2UARTSendString@str+1
  9743  0000E2  0E00               	movlw	0
  9744  0000E4  6E05               	movwf	(i2UARTSendString@max_length+1)^0,c
  9745  0000E6  0E10               	movlw	16
  9746  0000E8  6E04               	movwf	i2UARTSendString@max_length^0,c
  9747  0000EA  EC06  F016         	call	i2_UARTSendString	;wreg free
  9748  0000EE                     i2l4002:
  9749                           
  9750                           ;main.c: 53:         if (RCREG == 'c') {
  9751  0000EE  0E63               	movlw	99
  9752  0000F0  18AE               	xorwf	174,w,c	;volatile
  9753  0000F2  A4D8               	btfss	status,2,c
  9754  0000F4  EF7E  F000         	goto	i2u408_41
  9755  0000F8  EF80  F000         	goto	i2u408_40
  9756  0000FC                     i2u408_41:
  9757  0000FC  EF90  F000         	goto	i2l4008
  9758  000100                     i2u408_40:
  9759  000100                     
  9760                           ;main.c: 54:             setComando("AD");
  9761  000100  0EF4               	movlw	low STR_55
  9762  000102  6E01               	movwf	setComando@c^0,c
  9763  000104  0E3F               	movlw	high STR_55
  9764  000106  6E02               	movwf	(setComando@c+1)^0,c
  9765  000108  EC4F  F01A         	call	_setComando	;wreg free
  9766  00010C                     
  9767                           ;main.c: 55:             UARTSendString(comando, 16);
  9768  00010C  C0FE  F002         	movff	_comando,i2UARTSendString@str
  9769  000110  C0FF  F003         	movff	_comando+1,i2UARTSendString@str+1
  9770  000114  0E00               	movlw	0
  9771  000116  6E05               	movwf	(i2UARTSendString@max_length+1)^0,c
  9772  000118  0E10               	movlw	16
  9773  00011A  6E04               	movwf	i2UARTSendString@max_length^0,c
  9774  00011C  EC06  F016         	call	i2_UARTSendString	;wreg free
  9775  000120                     i2l4008:
  9776                           
  9777                           ;main.c: 58:         if (RCREG == 'd') {
  9778  000120  0E64               	movlw	100
  9779  000122  18AE               	xorwf	174,w,c	;volatile
  9780  000124  A4D8               	btfss	status,2,c
  9781  000126  EF97  F000         	goto	i2u409_41
  9782  00012A  EF99  F000         	goto	i2u409_40
  9783  00012E                     i2u409_41:
  9784  00012E  EFA9  F000         	goto	i2l4014
  9785  000132                     i2u409_40:
  9786  000132                     
  9787                           ;main.c: 59:             setComando("PID");
  9788  000132  0EF0               	movlw	low STR_56
  9789  000134  6E01               	movwf	setComando@c^0,c
  9790  000136  0E3F               	movlw	high STR_56
  9791  000138  6E02               	movwf	(setComando@c+1)^0,c
  9792  00013A  EC4F  F01A         	call	_setComando	;wreg free
  9793  00013E                     
  9794                           ;main.c: 60:             UARTSendString(comando, 16);
  9795  00013E  C0FE  F002         	movff	_comando,i2UARTSendString@str
  9796  000142  C0FF  F003         	movff	_comando+1,i2UARTSendString@str+1
  9797  000146  0E00               	movlw	0
  9798  000148  6E05               	movwf	(i2UARTSendString@max_length+1)^0,c
  9799  00014A  0E10               	movlw	16
  9800  00014C  6E04               	movwf	i2UARTSendString@max_length^0,c
  9801  00014E  EC06  F016         	call	i2_UARTSendString	;wreg free
  9802  000152                     i2l4014:
  9803                           
  9804                           ;main.c: 62:         if (RCREG == 'e') {
  9805  000152  0E65               	movlw	101
  9806  000154  18AE               	xorwf	174,w,c	;volatile
  9807  000156  A4D8               	btfss	status,2,c
  9808  000158  EFB0  F000         	goto	i2u410_41
  9809  00015C  EFB2  F000         	goto	i2u410_40
  9810  000160                     i2u410_41:
  9811  000160  EFC2  F000         	goto	i2l4020
  9812  000164                     i2u410_40:
  9813  000164                     
  9814                           ;main.c: 63:             setComando("LeituraSensores");
  9815  000164  0EDC               	movlw	low STR_57
  9816  000166  6E01               	movwf	setComando@c^0,c
  9817  000168  0E3E               	movlw	high STR_57
  9818  00016A  6E02               	movwf	(setComando@c+1)^0,c
  9819  00016C  EC4F  F01A         	call	_setComando	;wreg free
  9820  000170                     
  9821                           ;main.c: 64:             UARTSendString(comando, 16);
  9822  000170  C0FE  F002         	movff	_comando,i2UARTSendString@str
  9823  000174  C0FF  F003         	movff	_comando+1,i2UARTSendString@str+1
  9824  000178  0E00               	movlw	0
  9825  00017A  6E05               	movwf	(i2UARTSendString@max_length+1)^0,c
  9826  00017C  0E10               	movlw	16
  9827  00017E  6E04               	movwf	i2UARTSendString@max_length^0,c
  9828  000180  EC06  F016         	call	i2_UARTSendString	;wreg free
  9829  000184                     i2l4020:
  9830                           
  9831                           ;main.c: 67:         if (RCREG == 'f') {
  9832  000184  0E66               	movlw	102
  9833  000186  18AE               	xorwf	174,w,c	;volatile
  9834  000188  A4D8               	btfss	status,2,c
  9835  00018A  EFC9  F000         	goto	i2u411_41
  9836  00018E  EFCB  F000         	goto	i2u411_40
  9837  000192                     i2u411_41:
  9838  000192  EFDB  F000         	goto	i2l4026
  9839  000196                     i2u411_40:
  9840  000196                     
  9841                           ;main.c: 68:             setComando("testeADbit");
  9842  000196  0EAC               	movlw	low STR_58
  9843  000198  6E01               	movwf	setComando@c^0,c
  9844  00019A  0E3F               	movlw	high STR_58
  9845  00019C  6E02               	movwf	(setComando@c+1)^0,c
  9846  00019E  EC4F  F01A         	call	_setComando	;wreg free
  9847  0001A2                     
  9848                           ;main.c: 69:             UARTSendString(comando, 16);
  9849  0001A2  C0FE  F002         	movff	_comando,i2UARTSendString@str
  9850  0001A6  C0FF  F003         	movff	_comando+1,i2UARTSendString@str+1
  9851  0001AA  0E00               	movlw	0
  9852  0001AC  6E05               	movwf	(i2UARTSendString@max_length+1)^0,c
  9853  0001AE  0E10               	movlw	16
  9854  0001B0  6E04               	movwf	i2UARTSendString@max_length^0,c
  9855  0001B2  EC06  F016         	call	i2_UARTSendString	;wreg free
  9856  0001B6                     i2l4026:
  9857                           
  9858                           ;main.c: 71:         if (RCREG == 'g') {
  9859  0001B6  0E67               	movlw	103
  9860  0001B8  18AE               	xorwf	174,w,c	;volatile
  9861  0001BA  A4D8               	btfss	status,2,c
  9862  0001BC  EFE2  F000         	goto	i2u412_41
  9863  0001C0  EFE4  F000         	goto	i2u412_40
  9864  0001C4                     i2u412_41:
  9865  0001C4  EFF4  F000         	goto	i2l4032
  9866  0001C8                     i2u412_40:
  9867  0001C8                     
  9868                           ;main.c: 72:             setComando("MoverPraFrente");
  9869  0001C8  0EFB               	movlw	low STR_59
  9870  0001CA  6E01               	movwf	setComando@c^0,c
  9871  0001CC  0E3E               	movlw	high STR_59
  9872  0001CE  6E02               	movwf	(setComando@c+1)^0,c
  9873  0001D0  EC4F  F01A         	call	_setComando	;wreg free
  9874  0001D4                     
  9875                           ;main.c: 73:             UARTSendString(comando, 16);
  9876  0001D4  C0FE  F002         	movff	_comando,i2UARTSendString@str
  9877  0001D8  C0FF  F003         	movff	_comando+1,i2UARTSendString@str+1
  9878  0001DC  0E00               	movlw	0
  9879  0001DE  6E05               	movwf	(i2UARTSendString@max_length+1)^0,c
  9880  0001E0  0E10               	movlw	16
  9881  0001E2  6E04               	movwf	i2UARTSendString@max_length^0,c
  9882  0001E4  EC06  F016         	call	i2_UARTSendString	;wreg free
  9883  0001E8                     i2l4032:
  9884                           
  9885                           ;main.c: 75:         if (RCREG == 'h') {
  9886  0001E8  0E68               	movlw	104
  9887  0001EA  18AE               	xorwf	174,w,c	;volatile
  9888  0001EC  A4D8               	btfss	status,2,c
  9889  0001EE  EFFB  F000         	goto	i2u413_41
  9890  0001F2  EFFD  F000         	goto	i2u413_40
  9891  0001F6                     i2u413_41:
  9892  0001F6  EF0D  F001         	goto	i2l4038
  9893  0001FA                     i2u413_40:
  9894  0001FA                     
  9895                           ;main.c: 76:             setComando("RotinaFuncionamento");
  9896  0001FA  0EA5               	movlw	low STR_60
  9897  0001FC  6E01               	movwf	setComando@c^0,c
  9898  0001FE  0E3E               	movlw	high STR_60
  9899  000200  6E02               	movwf	(setComando@c+1)^0,c
  9900  000202  EC4F  F01A         	call	_setComando	;wreg free
  9901  000206                     
  9902                           ;main.c: 77:             UARTSendString(comando, 16);
  9903  000206  C0FE  F002         	movff	_comando,i2UARTSendString@str
  9904  00020A  C0FF  F003         	movff	_comando+1,i2UARTSendString@str+1
  9905  00020E  0E00               	movlw	0
  9906  000210  6E05               	movwf	(i2UARTSendString@max_length+1)^0,c
  9907  000212  0E10               	movlw	16
  9908  000214  6E04               	movwf	i2UARTSendString@max_length^0,c
  9909  000216  EC06  F016         	call	i2_UARTSendString	;wreg free
  9910  00021A                     i2l4038:
  9911                           
  9912                           ;main.c: 80:         if (RCREG == 'p') {
  9913  00021A  0E70               	movlw	112
  9914  00021C  18AE               	xorwf	174,w,c	;volatile
  9915  00021E  A4D8               	btfss	status,2,c
  9916  000220  EF14  F001         	goto	i2u414_41
  9917  000224  EF16  F001         	goto	i2u414_40
  9918  000228                     i2u414_41:
  9919  000228  EF4C  F001         	goto	i2l4062
  9920  00022C                     i2u414_40:
  9921  00022C                     
  9922                           ;main.c: 81:             setComando("idle");
  9923  00022C  0EEB               	movlw	low STR_3
  9924  00022E  6E01               	movwf	setComando@c^0,c
  9925  000230  0E3F               	movlw	high STR_3
  9926  000232  6E02               	movwf	(setComando@c+1)^0,c
  9927  000234  EC4F  F01A         	call	_setComando	;wreg free
  9928  000238                     
  9929                           ;main.c: 82:             UARTSendString("IDLE", 16);
  9930  000238  0EE6               	movlw	low STR_62
  9931  00023A  6E02               	movwf	i2UARTSendString@str^0,c
  9932  00023C  0E3F               	movlw	high STR_62
  9933  00023E  6E03               	movwf	(i2UARTSendString@str+1)^0,c
  9934  000240  0E00               	movlw	0
  9935  000242  6E05               	movwf	(i2UARTSendString@max_length+1)^0,c
  9936  000244  0E10               	movlw	16
  9937  000246  6E04               	movwf	i2UARTSendString@max_length^0,c
  9938  000248  EC06  F016         	call	i2_UARTSendString	;wreg free
  9939  00024C                     
  9940                           ;main.c: 83:             setDutyPWM0(0);
  9941  00024C  0E00               	movlw	0
  9942  00024E  6E08               	movwf	(i2setDutyPWM0@porcVelo+1)^0,c
  9943  000250  0E00               	movlw	0
  9944  000252  6E07               	movwf	i2setDutyPWM0@porcVelo^0,c
  9945  000254  ECBF  F019         	call	i2_setDutyPWM0	;wreg free
  9946  000258                     
  9947                           ;main.c: 84:             setDutyPWM2(0);
  9948  000258  0E00               	movlw	0
  9949  00025A  6E08               	movwf	(i2setDutyPWM2@porcVelo+1)^0,c
  9950  00025C  0E00               	movlw	0
  9951  00025E  6E07               	movwf	i2setDutyPWM2@porcVelo^0,c
  9952  000260  ECAC  F019         	call	i2_setDutyPWM2	;wreg free
  9953  000264                     
  9954                           ;main.c: 85:             setDutyPWM4(0);
  9955  000264  0E00               	movlw	0
  9956  000266  6E08               	movwf	(i2setDutyPWM4@porcVelo+1)^0,c
  9957  000268  0E00               	movlw	0
  9958  00026A  6E07               	movwf	i2setDutyPWM4@porcVelo^0,c
  9959  00026C  EC99  F019         	call	i2_setDutyPWM4	;wreg free
  9960  000270                     
  9961                           ;main.c: 86:             setDutyPWM6(0);
  9962  000270  0E00               	movlw	0
  9963  000272  6E08               	movwf	(i2setDutyPWM6@porcVelo+1)^0,c
  9964  000274  0E00               	movlw	0
  9965  000276  6E07               	movwf	i2setDutyPWM6@porcVelo^0,c
  9966  000278  EC86  F019         	call	i2_setDutyPWM6	;wreg free
  9967  00027C                     
  9968                           ;main.c: 88:             RC0 = 1;
  9969  00027C  8082               	bsf	3970,0,c	;volatile
  9970  00027E                     
  9971                           ;main.c: 89:             RC1 = 1;
  9972  00027E  8282               	bsf	3970,1,c	;volatile
  9973  000280                     
  9974                           ;main.c: 90:             RC2 = 1;
  9975  000280  8482               	bsf	3970,2,c	;volatile
  9976  000282                     
  9977                           ;main.c: 91:             RC3 = 1;
  9978  000282  8682               	bsf	3970,3,c	;volatile
  9979  000284                     
  9980                           ;main.c: 92:             UARTSendString(comando, 16);
  9981  000284  C0FE  F002         	movff	_comando,i2UARTSendString@str
  9982  000288  C0FF  F003         	movff	_comando+1,i2UARTSendString@str+1
  9983  00028C  0E00               	movlw	0
  9984  00028E  6E05               	movwf	(i2UARTSendString@max_length+1)^0,c
  9985  000290  0E10               	movlw	16
  9986  000292  6E04               	movwf	i2UARTSendString@max_length^0,c
  9987  000294  EC06  F016         	call	i2_UARTSendString	;wreg free
  9988  000298                     i2l4062:
  9989                           
  9990                           ;main.c: 94:         PIR1bits.RCIF = 0;
  9991  000298  9A9E               	bcf	158,5,c	;volatile
  9992  00029A                     i2l4064:
  9993                           
  9994                           ;main.c: 97:     if (TMR0IF) {
  9995  00029A  A4F2               	btfss	4082,2,c	;volatile
  9996  00029C  EF52  F001         	goto	i2u415_41
  9997  0002A0  EF54  F001         	goto	i2u415_40
  9998  0002A4                     i2u415_41:
  9999  0002A4  EF5E  F001         	goto	i2l374
 10000  0002A8                     i2u415_40:
 10001  0002A8                     
 10002                           ;main.c: 98:         TMR0L = 99;
 10003  0002A8  0E63               	movlw	99
 10004  0002AA  6ED6               	movwf	214,c	;volatile
 10005  0002AC                     
 10006                           ;main.c: 99:         millis++;
 10007  0002AC  0E01               	movlw	1
 10008  0002AE  0100               	movlb	0	; () banked
 10009  0002B0  27E6               	addwf	_millis& (0+255),f,b
 10010  0002B2  0E00               	movlw	0
 10011  0002B4  23E7               	addwfc	(_millis+1)& (0+255),f,b
 10012  0002B6  23E8               	addwfc	(_millis+2)& (0+255),f,b
 10013  0002B8  23E9               	addwfc	(_millis+3)& (0+255),f,b
 10014  0002BA                     
 10015                           ; BSR set to: 0
 10016                           ;main.c: 100:         TMR0IF = 0;
 10017  0002BA  94F2               	bcf	4082,2,c	;volatile
 10018  0002BC                     i2l374:
 10019  0002BC  C012  FFF5         	movff	??_ISR+7,tablat
 10020  0002C0  C011  FFF8         	movff	??_ISR+6,tblptru
 10021  0002C4  C010  FFF7         	movff	??_ISR+5,tblptrh
 10022  0002C8  C00F  FFF6         	movff	??_ISR+4,tblptrl
 10023  0002CC  C00E  FFF4         	movff	??_ISR+3,prodh
 10024  0002D0  C00D  FFF3         	movff	??_ISR+2,prodl
 10025  0002D4  C00C  FFEA         	movff	??_ISR+1,fsr0h
 10026  0002D8  C00B  FFE9         	movff	??_ISR,fsr0l
 10027  0002DC  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10028  0002DE  0011               	retfie		f
 10029  0002E0                     __end_of_ISR:
 10030                           	callstack 0
 10031                           
 10032 ;; *************** function i2_setDutyPWM6 *****************
 10033 ;; Defined at:
 10034 ;;		line 41 in file "./PWM.h"
 10035 ;; Parameters:    Size  Location     Type
 10036 ;;  porcVelo        2    6[COMRAM] unsigned int 
 10037 ;; Auto vars:     Size  Location     Type
 10038 ;;  velo            2    8[COMRAM] unsigned int 
 10039 ;; Return value:  Size  Location     Type
 10040 ;;                  1    wreg      void 
 10041 ;; Registers used:
 10042 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10043 ;; Tracked objects:
 10044 ;;		On entry : 0/0
 10045 ;;		On exit  : 0/0
 10046 ;;		Unchanged: 0/0
 10047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10048 ;;      Params:         2       0       0       0
 10049 ;;      Locals:         2       0       0       0
 10050 ;;      Temps:          0       0       0       0
 10051 ;;      Totals:         4       0       0       0
 10052 ;;Total ram usage:        4 bytes
 10053 ;; Hardware stack levels used: 1
 10054 ;; Hardware stack levels required when called: 1
 10055 ;; This function calls:
 10056 ;;		i2___wmul
 10057 ;; This function is called by:
 10058 ;;		_ISR
 10059 ;; This function uses a non-reentrant model
 10060 ;;
 10061                           
 10062                           	psect	text45
 10063  00330C                     __ptext45:
 10064                           	callstack 0
 10065  00330C                     i2_setDutyPWM6:
 10066                           	callstack 23
 10067  00330C                     
 10068                           ;./PWM.h: 42:     unsigned int velo = porcVelo*6;
 10069  00330C  C007  F001         	movff	i2setDutyPWM6@porcVelo,i2___wmul@multiplier
 10070  003310  C008  F002         	movff	i2setDutyPWM6@porcVelo+1,i2___wmul@multiplier+1
 10071  003314  0E00               	movlw	0
 10072  003316  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 10073  003318  0E06               	movlw	6
 10074  00331A  6E03               	movwf	i2___wmul@multiplicand^0,c
 10075  00331C  ECD2  F019         	call	i2___wmul	;wreg free
 10076  003320  C001  F009         	movff	?i2___wmul,i2setDutyPWM6@velo
 10077  003324  C002  F00A         	movff	?i2___wmul+1,i2setDutyPWM6@velo+1
 10078  003328                     
 10079                           ;./PWM.h: 43:     PDC3L = velo & 0b11111111;
 10080  003328  C009  FF73         	movff	i2setDutyPWM6@velo,3955	;volatile
 10081  00332C                     
 10082                           ;./PWM.h: 44:     PDC3H = (velo >> 8) & 0b11111111;
 10083  00332C  500A               	movf	(i2setDutyPWM6@velo+1)^0,w,c
 10084  00332E  6E72               	movwf	114,c	;volatile
 10085  003330  0012               	return		;funcret
 10086  003332                     __end_ofi2_setDutyPWM6:
 10087                           	callstack 0
 10088                           
 10089 ;; *************** function i2_setDutyPWM4 *****************
 10090 ;; Defined at:
 10091 ;;		line 35 in file "./PWM.h"
 10092 ;; Parameters:    Size  Location     Type
 10093 ;;  porcVelo        2    6[COMRAM] unsigned int 
 10094 ;; Auto vars:     Size  Location     Type
 10095 ;;  velo            2    8[COMRAM] unsigned int 
 10096 ;; Return value:  Size  Location     Type
 10097 ;;                  1    wreg      void 
 10098 ;; Registers used:
 10099 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10100 ;; Tracked objects:
 10101 ;;		On entry : 0/0
 10102 ;;		On exit  : 0/0
 10103 ;;		Unchanged: 0/0
 10104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10105 ;;      Params:         2       0       0       0
 10106 ;;      Locals:         2       0       0       0
 10107 ;;      Temps:          0       0       0       0
 10108 ;;      Totals:         4       0       0       0
 10109 ;;Total ram usage:        4 bytes
 10110 ;; Hardware stack levels used: 1
 10111 ;; Hardware stack levels required when called: 1
 10112 ;; This function calls:
 10113 ;;		i2___wmul
 10114 ;; This function is called by:
 10115 ;;		_ISR
 10116 ;; This function uses a non-reentrant model
 10117 ;;
 10118                           
 10119                           	psect	text46
 10120  003332                     __ptext46:
 10121                           	callstack 0
 10122  003332                     i2_setDutyPWM4:
 10123                           	callstack 23
 10124  003332                     
 10125                           ;./PWM.h: 36:     unsigned int velo = porcVelo*6;
 10126  003332  C007  F001         	movff	i2setDutyPWM4@porcVelo,i2___wmul@multiplier
 10127  003336  C008  F002         	movff	i2setDutyPWM4@porcVelo+1,i2___wmul@multiplier+1
 10128  00333A  0E00               	movlw	0
 10129  00333C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 10130  00333E  0E06               	movlw	6
 10131  003340  6E03               	movwf	i2___wmul@multiplicand^0,c
 10132  003342  ECD2  F019         	call	i2___wmul	;wreg free
 10133  003346  C001  F009         	movff	?i2___wmul,i2setDutyPWM4@velo
 10134  00334A  C002  F00A         	movff	?i2___wmul+1,i2setDutyPWM4@velo+1
 10135  00334E                     
 10136                           ;./PWM.h: 37:     PDC2L = velo & 0b11111111;
 10137  00334E  C009  FF75         	movff	i2setDutyPWM4@velo,3957	;volatile
 10138  003352                     
 10139                           ;./PWM.h: 38:     PDC2H = (velo >> 8) & 0b11111111;
 10140  003352  500A               	movf	(i2setDutyPWM4@velo+1)^0,w,c
 10141  003354  6E74               	movwf	116,c	;volatile
 10142  003356  0012               	return		;funcret
 10143  003358                     __end_ofi2_setDutyPWM4:
 10144                           	callstack 0
 10145                           
 10146 ;; *************** function i2_setDutyPWM2 *****************
 10147 ;; Defined at:
 10148 ;;		line 29 in file "./PWM.h"
 10149 ;; Parameters:    Size  Location     Type
 10150 ;;  porcVelo        2    6[COMRAM] unsigned int 
 10151 ;; Auto vars:     Size  Location     Type
 10152 ;;  velo            2    8[COMRAM] unsigned int 
 10153 ;; Return value:  Size  Location     Type
 10154 ;;                  1    wreg      void 
 10155 ;; Registers used:
 10156 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10157 ;; Tracked objects:
 10158 ;;		On entry : 0/0
 10159 ;;		On exit  : 0/0
 10160 ;;		Unchanged: 0/0
 10161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10162 ;;      Params:         2       0       0       0
 10163 ;;      Locals:         2       0       0       0
 10164 ;;      Temps:          0       0       0       0
 10165 ;;      Totals:         4       0       0       0
 10166 ;;Total ram usage:        4 bytes
 10167 ;; Hardware stack levels used: 1
 10168 ;; Hardware stack levels required when called: 1
 10169 ;; This function calls:
 10170 ;;		i2___wmul
 10171 ;; This function is called by:
 10172 ;;		_ISR
 10173 ;; This function uses a non-reentrant model
 10174 ;;
 10175                           
 10176                           	psect	text47
 10177  003358                     __ptext47:
 10178                           	callstack 0
 10179  003358                     i2_setDutyPWM2:
 10180                           	callstack 23
 10181  003358                     
 10182                           ;./PWM.h: 30:     unsigned int velo = porcVelo*6;
 10183  003358  C007  F001         	movff	i2setDutyPWM2@porcVelo,i2___wmul@multiplier
 10184  00335C  C008  F002         	movff	i2setDutyPWM2@porcVelo+1,i2___wmul@multiplier+1
 10185  003360  0E00               	movlw	0
 10186  003362  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 10187  003364  0E06               	movlw	6
 10188  003366  6E03               	movwf	i2___wmul@multiplicand^0,c
 10189  003368  ECD2  F019         	call	i2___wmul	;wreg free
 10190  00336C  C001  F009         	movff	?i2___wmul,i2setDutyPWM2@velo
 10191  003370  C002  F00A         	movff	?i2___wmul+1,i2setDutyPWM2@velo+1
 10192  003374                     
 10193                           ;./PWM.h: 31:     PDC1L = velo & 0b11111111;
 10194  003374  C009  FF77         	movff	i2setDutyPWM2@velo,3959	;volatile
 10195  003378                     
 10196                           ;./PWM.h: 32:     PDC1H = (velo >> 8) & 0b11111111;
 10197  003378  500A               	movf	(i2setDutyPWM2@velo+1)^0,w,c
 10198  00337A  6E76               	movwf	118,c	;volatile
 10199  00337C  0012               	return		;funcret
 10200  00337E                     __end_ofi2_setDutyPWM2:
 10201                           	callstack 0
 10202                           
 10203 ;; *************** function i2_setDutyPWM0 *****************
 10204 ;; Defined at:
 10205 ;;		line 23 in file "./PWM.h"
 10206 ;; Parameters:    Size  Location     Type
 10207 ;;  porcVelo        2    6[COMRAM] unsigned int 
 10208 ;; Auto vars:     Size  Location     Type
 10209 ;;  velo            2    8[COMRAM] unsigned int 
 10210 ;; Return value:  Size  Location     Type
 10211 ;;                  1    wreg      void 
 10212 ;; Registers used:
 10213 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10214 ;; Tracked objects:
 10215 ;;		On entry : 0/0
 10216 ;;		On exit  : 0/0
 10217 ;;		Unchanged: 0/0
 10218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10219 ;;      Params:         2       0       0       0
 10220 ;;      Locals:         2       0       0       0
 10221 ;;      Temps:          0       0       0       0
 10222 ;;      Totals:         4       0       0       0
 10223 ;;Total ram usage:        4 bytes
 10224 ;; Hardware stack levels used: 1
 10225 ;; Hardware stack levels required when called: 1
 10226 ;; This function calls:
 10227 ;;		i2___wmul
 10228 ;; This function is called by:
 10229 ;;		_ISR
 10230 ;; This function uses a non-reentrant model
 10231 ;;
 10232                           
 10233                           	psect	text48
 10234  00337E                     __ptext48:
 10235                           	callstack 0
 10236  00337E                     i2_setDutyPWM0:
 10237                           	callstack 23
 10238  00337E                     
 10239                           ;./PWM.h: 24:     unsigned int velo = porcVelo*6;
 10240  00337E  C007  F001         	movff	i2setDutyPWM0@porcVelo,i2___wmul@multiplier
 10241  003382  C008  F002         	movff	i2setDutyPWM0@porcVelo+1,i2___wmul@multiplier+1
 10242  003386  0E00               	movlw	0
 10243  003388  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 10244  00338A  0E06               	movlw	6
 10245  00338C  6E03               	movwf	i2___wmul@multiplicand^0,c
 10246  00338E  ECD2  F019         	call	i2___wmul	;wreg free
 10247  003392  C001  F009         	movff	?i2___wmul,i2setDutyPWM0@velo
 10248  003396  C002  F00A         	movff	?i2___wmul+1,i2setDutyPWM0@velo+1
 10249  00339A                     
 10250                           ;./PWM.h: 25:     PDC0L = velo & 0b11111111;
 10251  00339A  C009  FF79         	movff	i2setDutyPWM0@velo,3961	;volatile
 10252  00339E                     
 10253                           ;./PWM.h: 26:     PDC0H = (velo >> 8) & 0b11111111;
 10254  00339E  500A               	movf	(i2setDutyPWM0@velo+1)^0,w,c
 10255  0033A0  6E78               	movwf	120,c	;volatile
 10256  0033A2  0012               	return		;funcret
 10257  0033A4                     __end_ofi2_setDutyPWM0:
 10258                           	callstack 0
 10259                           
 10260 ;; *************** function i2___wmul *****************
 10261 ;; Defined at:
 10262 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
 10263 ;; Parameters:    Size  Location     Type
 10264 ;;  multiplier      2    0[COMRAM] unsigned int 
 10265 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10266 ;; Auto vars:     Size  Location     Type
 10267 ;;  product         2    4[COMRAM] unsigned int 
 10268 ;; Return value:  Size  Location     Type
 10269 ;;                  2    0[COMRAM] unsigned int 
 10270 ;; Registers used:
 10271 ;;		wreg, status,2, status,0, prodl, prodh
 10272 ;; Tracked objects:
 10273 ;;		On entry : 0/0
 10274 ;;		On exit  : 0/0
 10275 ;;		Unchanged: 0/0
 10276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10277 ;;      Params:         4       0       0       0
 10278 ;;      Locals:         2       0       0       0
 10279 ;;      Temps:          0       0       0       0
 10280 ;;      Totals:         6       0       0       0
 10281 ;;Total ram usage:        6 bytes
 10282 ;; Hardware stack levels used: 1
 10283 ;; This function calls:
 10284 ;;		Nothing
 10285 ;; This function is called by:
 10286 ;;		i2_setDutyPWM0
 10287 ;;		i2_setDutyPWM2
 10288 ;;		i2_setDutyPWM4
 10289 ;;		i2_setDutyPWM6
 10290 ;; This function uses a non-reentrant model
 10291 ;;
 10292                           
 10293                           	psect	text49
 10294  0033A4                     __ptext49:
 10295                           	callstack 0
 10296  0033A4                     i2___wmul:
 10297                           	callstack 23
 10298  0033A4  5001               	movf	i2___wmul@multiplier^0,w,c
 10299  0033A6  0203               	mulwf	i2___wmul@multiplicand^0,c
 10300  0033A8  CFF3 F005          	movff	prodl,i2___wmul@product
 10301  0033AC  CFF4 F006          	movff	prodh,i2___wmul@product+1
 10302  0033B0  5001               	movf	i2___wmul@multiplier^0,w,c
 10303  0033B2  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 10304  0033B4  50F3               	movf	243,w,c
 10305  0033B6  2606               	addwf	(i2___wmul@product+1)^0,f,c
 10306  0033B8  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 10307  0033BA  0203               	mulwf	i2___wmul@multiplicand^0,c
 10308  0033BC  50F3               	movf	243,w,c
 10309  0033BE  2606               	addwf	(i2___wmul@product+1)^0,f,c
 10310  0033C0  C005  F001         	movff	i2___wmul@product,?i2___wmul
 10311  0033C4  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 10312  0033C8  0012               	return		;funcret
 10313  0033CA                     __end_ofi2___wmul:
 10314                           	callstack 0
 10315                           
 10316 ;; *************** function i2_UARTSendString *****************
 10317 ;; Defined at:
 10318 ;;		line 57 in file "./bluetooth.h"
 10319 ;; Parameters:    Size  Location     Type
 10320 ;;  str             2    1[COMRAM] PTR unsigned char 
 10321 ;;		 -> STR_84(19), STR_83(5), STR_82(5), STR_63(2), 
 10322 ;;		 -> STR_62(5), STR_61(5), STR_60(20), STR_59(15), 
 10323 ;;		 -> STR_58(11), STR_57(16), STR_56(4), STR_55(3), 
 10324 ;;		 -> STR_54(14), STR_53(13), STR_52(10), STR_51(2), 
 10325 ;;		 -> STR_50(12), STR_49(7), STR_48(13), STR_47(12), 
 10326 ;;		 -> STR_46(13), STR_45(12), STR_44(13), STR_43(12), 
 10327 ;;		 -> STR_42(12), STR_41(11), STR_40(13), STR_39(12), 
 10328 ;;		 -> STR_38(2), STR_37(11), STR_36(2), STR_35(2), 
 10329 ;;		 -> STR_34(3), testeADbit@string(2), STR_33(2), STR_32(11), 
 10330 ;;		 -> STR_31(2), STR_30(6), STR_29(2), STR_28(6), 
 10331 ;;		 -> STR_27(2), STR_26(6), STR_25(2), STR_24(6), 
 10332 ;;		 -> STR_23(2), STR_22(6), STR_5(16), STR_2(15), 
 10333 ;;		 -> valorConvUARTbit@string(5), valorConvUART@string(5), STR_1(1), 
 10334 ;;  max_length      2    3[COMRAM] const int 
 10335 ;; Auto vars:     Size  Location     Type
 10336 ;;  i               2    7[COMRAM] int 
 10337 ;; Return value:  Size  Location     Type
 10338 ;;                  1    wreg      void 
 10339 ;; Registers used:
 10340 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10341 ;; Tracked objects:
 10342 ;;		On entry : 0/0
 10343 ;;		On exit  : 0/0
 10344 ;;		Unchanged: 0/0
 10345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10346 ;;      Params:         4       0       0       0
 10347 ;;      Locals:         2       0       0       0
 10348 ;;      Temps:          2       0       0       0
 10349 ;;      Totals:         8       0       0       0
 10350 ;;Total ram usage:        8 bytes
 10351 ;; Hardware stack levels used: 1
 10352 ;; Hardware stack levels required when called: 2
 10353 ;; This function calls:
 10354 ;;		i2_UARTSendChar
 10355 ;;		i2_UARTWriteTest
 10356 ;; This function is called by:
 10357 ;;		_ISR
 10358 ;; This function uses a non-reentrant model
 10359 ;;
 10360                           
 10361                           	psect	text50
 10362  002C0C                     __ptext50:
 10363                           	callstack 0
 10364  002C0C                     i2_UARTSendString:
 10365                           	callstack 22
 10366  002C0C                     
 10367                           ;./bluetooth.h: 58:     int i = 0;
 10368  002C0C  0E00               	movlw	0
 10369  002C0E  6E09               	movwf	(i2UARTSendString@i+1)^0,c
 10370  002C10  0E00               	movlw	0
 10371  002C12  6E08               	movwf	i2UARTSendString@i^0,c
 10372                           
 10373                           ;./bluetooth.h: 60:     for (i = 0; i < max_length; i++) {
 10374  002C14  0E00               	movlw	0
 10375  002C16  6E09               	movwf	(i2UARTSendString@i+1)^0,c
 10376  002C18  0E00               	movlw	0
 10377  002C1A  6E08               	movwf	i2UARTSendString@i^0,c
 10378  002C1C  BE05               	btfsc	(i2UARTSendString@max_length+1)^0,7,c
 10379  002C1E  EF1B  F016         	goto	i2u397_40
 10380  002C22  5005               	movf	(i2UARTSendString@max_length+1)^0,w,c
 10381  002C24  E106               	bnz	i2u397_41
 10382  002C26  0404               	decf	i2UARTSendString@max_length^0,w,c
 10383  002C28  B0D8               	btfsc	status,0,c
 10384  002C2A  EF19  F016         	goto	i2u397_41
 10385  002C2E  EF1B  F016         	goto	i2u397_40
 10386  002C32                     i2u397_41:
 10387  002C32  EF1D  F016         	goto	i2l3938
 10388  002C36                     i2u397_40:
 10389  002C36  EF68  F016         	goto	i2l140
 10390  002C3A                     i2l3938:
 10391                           
 10392                           ;./bluetooth.h: 62:         if (str[i] == '\0') break;
 10393  002C3A  5008               	movf	i2UARTSendString@i^0,w,c
 10394  002C3C  2402               	addwf	i2UARTSendString@str^0,w,c
 10395  002C3E  6E06               	movwf	??i2_UARTSendString^0,c
 10396  002C40  5009               	movf	(i2UARTSendString@i+1)^0,w,c
 10397  002C42  2003               	addwfc	(i2UARTSendString@str+1)^0,w,c
 10398  002C44  6E07               	movwf	(??i2_UARTSendString+1)^0,c
 10399  002C46  C006  FFF6         	movff	??i2_UARTSendString,tblptrl
 10400  002C4A  C007  FFF7         	movff	??i2_UARTSendString+1,tblptrh
 10401  002C4E  6AF8               	clrf	tblptru,c
 10402  002C50  0E02               	movlw	(high __ramtop+-1)
 10403  002C52  64F7               	cpfsgt	tblptrh,c
 10404  002C54  D003               	bra	i2u398_47
 10405  002C56  0008               	tblrd		*
 10406  002C58  50F5               	movf	tablat,w,c
 10407  002C5A  D005               	bra	i2u398_40
 10408  002C5C                     i2u398_47:
 10409  002C5C  CFF6 FFE9          	movff	tblptrl,fsr0l
 10410  002C60  CFF7 FFEA          	movff	tblptrh,fsr0h
 10411  002C64  50EF               	movf	indf0,w,c
 10412  002C66                     i2u398_40:
 10413  002C66  0900               	iorlw	0
 10414  002C68  A4D8               	btfss	status,2,c
 10415  002C6A  EF39  F016         	goto	i2u399_41
 10416  002C6E  EF3B  F016         	goto	i2u399_40
 10417  002C72                     i2u399_41:
 10418  002C72  EF3D  F016         	goto	i2l3942
 10419  002C76                     i2u399_40:
 10420  002C76  EF68  F016         	goto	i2l140
 10421  002C7A                     i2l3942:
 10422                           
 10423                           ;./bluetooth.h: 63:         UARTSendChar(str[i]);
 10424  002C7A  5008               	movf	i2UARTSendString@i^0,w,c
 10425  002C7C  2402               	addwf	i2UARTSendString@str^0,w,c
 10426  002C7E  6E06               	movwf	??i2_UARTSendString^0,c
 10427  002C80  5009               	movf	(i2UARTSendString@i+1)^0,w,c
 10428  002C82  2003               	addwfc	(i2UARTSendString@str+1)^0,w,c
 10429  002C84  6E07               	movwf	(??i2_UARTSendString+1)^0,c
 10430  002C86  C006  FFF6         	movff	??i2_UARTSendString,tblptrl
 10431  002C8A  C007  FFF7         	movff	??i2_UARTSendString+1,tblptrh
 10432  002C8E  6AF8               	clrf	tblptru,c
 10433  002C90  0E02               	movlw	(high __ramtop+-1)
 10434  002C92  64F7               	cpfsgt	tblptrh,c
 10435  002C94  D003               	bra	i2u400_47
 10436  002C96  0008               	tblrd		*
 10437  002C98  50F5               	movf	tablat,w,c
 10438  002C9A  D005               	bra	i2u400_40
 10439  002C9C                     i2u400_47:
 10440  002C9C  CFF6 FFE9          	movff	tblptrl,fsr0l
 10441  002CA0  CFF7 FFEA          	movff	tblptrh,fsr0h
 10442  002CA4  50EF               	movf	indf0,w,c
 10443  002CA6                     i2u400_40:
 10444  002CA6  EC44  F01A         	call	i2_UARTSendChar
 10445  002CAA                     
 10446                           ;./bluetooth.h: 64:         UARTWriteTest();
 10447  002CAA  EC30  F01A         	call	i2_UARTWriteTest	;wreg free
 10448  002CAE                     
 10449                           ;./bluetooth.h: 66:     }
 10450  002CAE  4A08               	infsnz	i2UARTSendString@i^0,f,c
 10451  002CB0  2A09               	incf	(i2UARTSendString@i+1)^0,f,c
 10452  002CB2  5004               	movf	i2UARTSendString@max_length^0,w,c
 10453  002CB4  5C08               	subwf	i2UARTSendString@i^0,w,c
 10454  002CB6  5009               	movf	(i2UARTSendString@i+1)^0,w,c
 10455  002CB8  0A80               	xorlw	128
 10456  002CBA  6E06               	movwf	??i2_UARTSendString^0,c
 10457  002CBC  5005               	movf	(i2UARTSendString@max_length+1)^0,w,c
 10458  002CBE  0A80               	xorlw	128
 10459  002CC0  5806               	subwfb	??i2_UARTSendString^0,w,c
 10460  002CC2  A0D8               	btfss	status,0,c
 10461  002CC4  EF66  F016         	goto	i2u401_41
 10462  002CC8  EF68  F016         	goto	i2u401_40
 10463  002CCC                     i2u401_41:
 10464  002CCC  EF1D  F016         	goto	i2l3938
 10465  002CD0                     i2u401_40:
 10466  002CD0                     i2l140:
 10467  002CD0  0012               	return		;funcret
 10468  002CD2                     __end_ofi2_UARTSendString:
 10469                           	callstack 0
 10470                           
 10471 ;; *************** function i2_UARTSendChar *****************
 10472 ;; Defined at:
 10473 ;;		line 52 in file "./bluetooth.h"
 10474 ;; Parameters:    Size  Location     Type
 10475 ;;  c               1    wreg     unsigned char 
 10476 ;; Auto vars:     Size  Location     Type
 10477 ;;  c               1    0[COMRAM] unsigned char 
 10478 ;; Return value:  Size  Location     Type
 10479 ;;                  1    wreg      void 
 10480 ;; Registers used:
 10481 ;;		wreg, cstack
 10482 ;; Tracked objects:
 10483 ;;		On entry : 0/0
 10484 ;;		On exit  : 0/0
 10485 ;;		Unchanged: 0/0
 10486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10487 ;;      Params:         0       0       0       0
 10488 ;;      Locals:         1       0       0       0
 10489 ;;      Temps:          0       0       0       0
 10490 ;;      Totals:         1       0       0       0
 10491 ;;Total ram usage:        1 bytes
 10492 ;; Hardware stack levels used: 1
 10493 ;; Hardware stack levels required when called: 1
 10494 ;; This function calls:
 10495 ;;		i2_UARTWriteTest
 10496 ;; This function is called by:
 10497 ;;		i2_UARTSendString
 10498 ;; This function uses a non-reentrant model
 10499 ;;
 10500                           
 10501                           	psect	text51
 10502  003488                     __ptext51:
 10503                           	callstack 0
 10504  003488                     i2_UARTSendChar:
 10505                           	callstack 22
 10506                           
 10507                           ;incstack = 0
 10508                           ;i2UARTSendChar@c stored from wreg
 10509  003488  6E01               	movwf	i2UARTSendChar@c^0,c
 10510  00348A                     
 10511                           ;./bluetooth.h: 53:     TXREG = c;
 10512  00348A  C001  FFAD         	movff	i2UARTSendChar@c,4013	;volatile
 10513  00348E                     
 10514                           ;./bluetooth.h: 54:     UARTWriteTest();
 10515  00348E  EC30  F01A         	call	i2_UARTWriteTest	;wreg free
 10516  003492  0012               	return		;funcret
 10517  003494                     __end_ofi2_UARTSendChar:
 10518                           	callstack 0
 10519                           
 10520 ;; *************** function i2_UARTWriteTest *****************
 10521 ;; Defined at:
 10522 ;;		line 48 in file "./bluetooth.h"
 10523 ;; Parameters:    Size  Location     Type
 10524 ;;		None
 10525 ;; Auto vars:     Size  Location     Type
 10526 ;;		None
 10527 ;; Return value:  Size  Location     Type
 10528 ;;                  1    wreg      void 
 10529 ;; Registers used:
 10530 ;;		None
 10531 ;; Tracked objects:
 10532 ;;		On entry : 0/0
 10533 ;;		On exit  : 0/0
 10534 ;;		Unchanged: 0/0
 10535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10536 ;;      Params:         0       0       0       0
 10537 ;;      Locals:         0       0       0       0
 10538 ;;      Temps:          0       0       0       0
 10539 ;;      Totals:         0       0       0       0
 10540 ;;Total ram usage:        0 bytes
 10541 ;; Hardware stack levels used: 1
 10542 ;; This function calls:
 10543 ;;		Nothing
 10544 ;; This function is called by:
 10545 ;;		i2_UARTSendChar
 10546 ;;		i2_UARTSendString
 10547 ;; This function uses a non-reentrant model
 10548 ;;
 10549                           
 10550                           	psect	text52
 10551  003460                     __ptext52:
 10552                           	callstack 0
 10553  003460                     i2_UARTWriteTest:
 10554                           	callstack 23
 10555  003460                     i2l128:
 10556  003460  A2AC               	btfss	4012,1,c	;volatile
 10557  003462  EF35  F01A         	goto	i2u348_41
 10558  003466  EF37  F01A         	goto	i2u348_40
 10559  00346A                     i2u348_41:
 10560  00346A  EF30  F01A         	goto	i2l128
 10561  00346E                     i2u348_40:
 10562  00346E  0012               	return		;funcret
 10563  003470                     __end_ofi2_UARTWriteTest:
 10564                           	callstack 0
 10565                           
 10566 ;; *************** function i2_UARTReadChar *****************
 10567 ;; Defined at:
 10568 ;;		line 43 in file "./bluetooth.h"
 10569 ;; Parameters:    Size  Location     Type
 10570 ;;		None
 10571 ;; Auto vars:     Size  Location     Type
 10572 ;;  ler             1    0[COMRAM] unsigned char 
 10573 ;; Return value:  Size  Location     Type
 10574 ;;                  1    wreg      unsigned char 
 10575 ;; Registers used:
 10576 ;;		wreg, status,2
 10577 ;; Tracked objects:
 10578 ;;		On entry : 0/0
 10579 ;;		On exit  : 0/0
 10580 ;;		Unchanged: 0/0
 10581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10582 ;;      Params:         0       0       0       0
 10583 ;;      Locals:         1       0       0       0
 10584 ;;      Temps:          0       0       0       0
 10585 ;;      Totals:         1       0       0       0
 10586 ;;Total ram usage:        1 bytes
 10587 ;; Hardware stack levels used: 1
 10588 ;; This function calls:
 10589 ;;		Nothing
 10590 ;; This function is called by:
 10591 ;;		_ISR
 10592 ;; This function uses a non-reentrant model
 10593 ;;
 10594                           
 10595                           	psect	text53
 10596  0034B0                     __ptext53:
 10597                           	callstack 0
 10598  0034B0                     i2_UARTReadChar:
 10599                           	callstack 24
 10600  0034B0                     
 10601                           ;./bluetooth.h: 44:     char ler = RCREG;
 10602  0034B0  CFAE F001          	movff	4014,i2UARTReadChar@ler	;volatile
 10603  0034B4                     
 10604                           ;./bluetooth.h: 45:     return ler;
 10605  0034B4  5001               	movf	i2UARTReadChar@ler^0,w,c
 10606  0034B6  0012               	return		;funcret
 10607  0034B8                     __end_ofi2_UARTReadChar:
 10608                           	callstack 0
 10609                           
 10610 ;; *************** function _setComando *****************
 10611 ;; Defined at:
 10612 ;;		line 39 in file "./bluetooth.h"
 10613 ;; Parameters:    Size  Location     Type
 10614 ;;  c               2    0[COMRAM] PTR unsigned char 
 10615 ;;		 -> STR_61(5), STR_60(20), STR_59(15), STR_58(11), 
 10616 ;;		 -> STR_57(16), STR_56(4), STR_55(3), STR_54(14), 
 10617 ;;		 -> STR_53(13), 
 10618 ;; Auto vars:     Size  Location     Type
 10619 ;;		None
 10620 ;; Return value:  Size  Location     Type
 10621 ;;                  1    wreg      void 
 10622 ;; Registers used:
 10623 ;;		wreg, status,2, status,0
 10624 ;; Tracked objects:
 10625 ;;		On entry : 0/0
 10626 ;;		On exit  : 0/0
 10627 ;;		Unchanged: 0/0
 10628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10629 ;;      Params:         2       0       0       0
 10630 ;;      Locals:         0       0       0       0
 10631 ;;      Temps:          0       0       0       0
 10632 ;;      Totals:         2       0       0       0
 10633 ;;Total ram usage:        2 bytes
 10634 ;; Hardware stack levels used: 1
 10635 ;; This function calls:
 10636 ;;		Nothing
 10637 ;; This function is called by:
 10638 ;;		_ISR
 10639 ;; This function uses a non-reentrant model
 10640 ;;
 10641                           
 10642                           	psect	text54
 10643  00349E                     __ptext54:
 10644                           	callstack 0
 10645  00349E                     _setComando:
 10646                           	callstack 24
 10647  00349E                     
 10648                           ;./bluetooth.h: 40:     comando = c;
 10649  00349E  C001  F0FE         	movff	setComando@c,_comando
 10650  0034A2  C002  F0FF         	movff	setComando@c+1,_comando+1
 10651  0034A6  0012               	return		;funcret
 10652  0034A8                     __end_of_setComando:
 10653                           	callstack 0
 10654                           
 10655 ;; *************** function _ligaTimer0 *****************
 10656 ;; Defined at:
 10657 ;;		line 21 in file "./Timer0.h"
 10658 ;; Parameters:    Size  Location     Type
 10659 ;;		None
 10660 ;; Auto vars:     Size  Location     Type
 10661 ;;		None
 10662 ;; Return value:  Size  Location     Type
 10663 ;;                  1    wreg      void 
 10664 ;; Registers used:
 10665 ;;		None
 10666 ;; Tracked objects:
 10667 ;;		On entry : 0/0
 10668 ;;		On exit  : 0/0
 10669 ;;		Unchanged: 0/0
 10670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10671 ;;      Params:         0       0       0       0
 10672 ;;      Locals:         0       0       0       0
 10673 ;;      Temps:          0       0       0       0
 10674 ;;      Totals:         0       0       0       0
 10675 ;;Total ram usage:        0 bytes
 10676 ;; Hardware stack levels used: 1
 10677 ;; This function calls:
 10678 ;;		Nothing
 10679 ;; This function is called by:
 10680 ;;		_ISR
 10681 ;; This function uses a non-reentrant model
 10682 ;;
 10683                           
 10684                           	psect	text55
 10685  0034B8                     __ptext55:
 10686                           	callstack 0
 10687  0034B8                     _ligaTimer0:
 10688                           	callstack 24
 10689  0034B8                     
 10690                           ;./Timer0.h: 22:     TMR0ON = 1;
 10691  0034B8  8ED5               	bsf	4053,7,c	;volatile
 10692  0034BA  0012               	return		;funcret
 10693  0034BC                     __end_of_ligaTimer0:
 10694                           	callstack 0
 10695                           
 10696                           	psect	rparam
 10697  0000                     
 10698                           	psect	temp
 10699  00004D                     btemp:
 10700                           	callstack 0
 10701  00004D                     	ds	1
 10702  0000                     int$flags	set	btemp
 10703  0000                     wtemp8	set	btemp+1
 10704  0000                     ttemp5	set	btemp+1
 10705  0000                     ttemp6	set	btemp+4
 10706  0000                     ttemp7	set	btemp+8
 10707                           
 10708                           	psect	idloc
 10709                           
 10710                           ;Config register IDLOC0 @ 0x200000
 10711                           ;	unspecified, using default values
 10712  200000                     	org	2097152
 10713  200000  FF                 	db	255
 10714                           
 10715                           ;Config register IDLOC1 @ 0x200001
 10716                           ;	unspecified, using default values
 10717  200001                     	org	2097153
 10718  200001  FF                 	db	255
 10719                           
 10720                           ;Config register IDLOC2 @ 0x200002
 10721                           ;	unspecified, using default values
 10722  200002                     	org	2097154
 10723  200002  FF                 	db	255
 10724                           
 10725                           ;Config register IDLOC3 @ 0x200003
 10726                           ;	unspecified, using default values
 10727  200003                     	org	2097155
 10728  200003  FF                 	db	255
 10729                           
 10730                           ;Config register IDLOC4 @ 0x200004
 10731                           ;	unspecified, using default values
 10732  200004                     	org	2097156
 10733  200004  FF                 	db	255
 10734                           
 10735                           ;Config register IDLOC5 @ 0x200005
 10736                           ;	unspecified, using default values
 10737  200005                     	org	2097157
 10738  200005  FF                 	db	255
 10739                           
 10740                           ;Config register IDLOC6 @ 0x200006
 10741                           ;	unspecified, using default values
 10742  200006                     	org	2097158
 10743  200006  FF                 	db	255
 10744                           
 10745                           ;Config register IDLOC7 @ 0x200007
 10746                           ;	unspecified, using default values
 10747  200007                     	org	2097159
 10748  200007  FF                 	db	255
 10749                           
 10750                           	psect	config
 10751                           
 10752                           ; Padding undefined space
 10753  300000                     	org	3145728
 10754  300000  FF                 	db	255
 10755                           
 10756                           ;Config register CONFIG1H @ 0x300001
 10757                           ;	Oscillator Selection bits
 10758                           ;	OSC = HS, HS oscillator
 10759                           ;	Fail-Safe Clock Monitor Enable bit
 10760                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 10761                           ;	Internal External Oscillator Switchover bit
 10762                           ;	IESO = ON, Internal External Switchover mode enabled
 10763  300001                     	org	3145729
 10764  300001  C2                 	db	194
 10765                           
 10766                           ;Config register CONFIG2L @ 0x300002
 10767                           ;	Power-up Timer Enable bit
 10768                           ;	PWRTEN = OFF, PWRT disabled
 10769                           ;	Brown-out Reset Enable bits
 10770                           ;	BOREN = OFF, Brown-out Reset disabled
 10771                           ;	Brown Out Reset Voltage bits
 10772                           ;	BORV = 0x3, unprogrammed default
 10773  300002                     	org	3145730
 10774  300002  0D                 	db	13
 10775                           
 10776                           ;Config register CONFIG2H @ 0x300003
 10777                           ;	Watchdog Timer Enable bit
 10778                           ;	WDTEN = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10779                           ;	Watchdog Timer Postscale Select bits
 10780                           ;	WDPS = 32768, 1:32768
 10781                           ;	Watchdog Timer Window Enable bit
 10782                           ;	WINEN = OFF, WDT window disabled
 10783  300003                     	org	3145731
 10784  300003  3E                 	db	62
 10785                           
 10786                           ;Config register CONFIG3L @ 0x300004
 10787                           ;	PWM output pins Reset state control
 10788                           ;	PWMPIN = OFF, PWM outputs disabled upon Reset (default)
 10789                           ;	Low-Side Transistors Polarity
 10790                           ;	LPOL = HIGH, PWM0, 2, 4 and 6 are active-high
 10791                           ;	High-Side Transistors Polarity
 10792                           ;	HPOL = HIGH, PWM1, 3, 5 and 7 are active-high
 10793                           ;	Timer1 Oscillator MUX
 10794                           ;	T1OSCMX = ON, Low-power Timer1 operation when microcontroller is in Sleep mode
 10795  300004                     	org	3145732
 10796  300004  3C                 	db	60
 10797                           
 10798                           ;Config register CONFIG3H @ 0x300005
 10799                           ;	FLTA MUX bit
 10800                           ;	FLTAMX = 0x1, unprogrammed default
 10801                           ;	SSP I/O MUX bit
 10802                           ;	SSPMX = 0x1, unprogrammed default
 10803                           ;	PWM4 MUX bit
 10804                           ;	PWM4MX = 0x1, unprogrammed default
 10805                           ;	TMR0/T5CKI External clock MUX bit
 10806                           ;	EXCLKMX = 0x1, unprogrammed default
 10807                           ;	MCLR Pin Enable bit
 10808                           ;	MCLRE = ON, Enabled
 10809  300005                     	org	3145733
 10810  300005  9D                 	db	157
 10811                           
 10812                           ;Config register CONFIG4L @ 0x300006
 10813                           ;	Stack Full/Underflow Reset Enable bit
 10814                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10815                           ;	Low-Voltage ICSP Enable bit
 10816                           ;	LVP = ON, Low-voltage ICSP enabled
 10817                           ;	Background Debugger Enable bit
 10818                           ;	DEBUG = 0x1, unprogrammed default
 10819  300006                     	org	3145734
 10820  300006  85                 	db	133
 10821                           
 10822                           ; Padding undefined space
 10823  300007                     	org	3145735
 10824  300007  FF                 	db	255
 10825                           
 10826                           ;Config register CONFIG5L @ 0x300008
 10827                           ;	Code Protection bit
 10828                           ;	CP0 = OFF, Block 0 (000200-000FFFh) not code-protected
 10829                           ;	Code Protection bit
 10830                           ;	CP1 = OFF, Block 1 (001000-001FFF) not code-protected
 10831                           ;	Code Protection bit
 10832                           ;	CP2 = OFF, Block 2 (002000-002FFFh) not code-protected
 10833                           ;	Code Protection bit
 10834                           ;	CP3 = OFF, Block 3 (003000-003FFFh) not code-protected
 10835  300008                     	org	3145736
 10836  300008  0F                 	db	15
 10837                           
 10838                           ;Config register CONFIG5H @ 0x300009
 10839                           ;	Boot Block Code Protection bit
 10840                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code-protected
 10841                           ;	Data EEPROM Code Protection bit
 10842                           ;	CPD = OFF, Data EEPROM not code-protected
 10843  300009                     	org	3145737
 10844  300009  C0                 	db	192
 10845                           
 10846                           ;Config register CONFIG6L @ 0x30000A
 10847                           ;	Write Protection bit
 10848                           ;	WRT0 = OFF, Block 0 (000200-000FFFh) not write-protected
 10849                           ;	Write Protection bit
 10850                           ;	WRT1 = OFF, Block 1 (001000-001FFF) not write-protected
 10851                           ;	Write Protection bit
 10852                           ;	WRT2 = OFF, Block 2 (002000-002FFFh) not write-protected
 10853                           ;	Write Protection bit
 10854                           ;	WRT3 = OFF, Block 3 (003000-003FFFh) not write-protected
 10855  30000A                     	org	3145738
 10856  30000A  0F                 	db	15
 10857                           
 10858                           ;Config register CONFIG6H @ 0x30000B
 10859                           ;	Configuration Register Write Protection bit
 10860                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 10861                           ;	Boot Block Write Protection bit
 10862                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write-protected
 10863                           ;	Data EEPROM Write Protection bit
 10864                           ;	WRTD = OFF, Data EEPROM not write-protected
 10865  30000B                     	org	3145739
 10866  30000B  E0                 	db	224
 10867                           
 10868                           ;Config register CONFIG7L @ 0x30000C
 10869                           ;	Table Read Protection bit
 10870                           ;	EBTR0 = OFF, Block 0 (000200-000FFFh) not protected from table reads executed in other
      +                           blocks
 10871                           ;	Table Read Protection bit
 10872                           ;	EBTR1 = OFF, Block 1 (001000-001FFF) not protected from table reads executed in other 
      +                          blocks
 10873                           ;	Table Read Protection bit
 10874                           ;	EBTR2 = OFF, Block 2 (002000-002FFFh) not protected from table reads executed in other
      +                           blocks
 10875                           ;	Table Read Protection bit
 10876                           ;	EBTR3 = OFF, Block 3 (003000-003FFFh) not protected from table reads executed in other
      +                           blocks
 10877  30000C                     	org	3145740
 10878  30000C  0F                 	db	15
 10879                           
 10880                           ;Config register CONFIG7H @ 0x30000D
 10881                           ;	Boot Block Table Read Protection bit
 10882                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from table reads executed in ot
      +                          her blocks
 10883  30000D                     	org	3145741
 10884  30000D  40                 	db	64
 10885                           tosu	equ	0xFFF
 10886                           tosh	equ	0xFFE
 10887                           tosl	equ	0xFFD
 10888                           stkptr	equ	0xFFC
 10889                           pclatu	equ	0xFFB
 10890                           pclath	equ	0xFFA
 10891                           pcl	equ	0xFF9
 10892                           tblptru	equ	0xFF8
 10893                           tblptrh	equ	0xFF7
 10894                           tblptrl	equ	0xFF6
 10895                           tablat	equ	0xFF5
 10896                           prodh	equ	0xFF4
 10897                           prodl	equ	0xFF3
 10898                           indf0	equ	0xFEF
 10899                           postinc0	equ	0xFEE
 10900                           postdec0	equ	0xFED
 10901                           preinc0	equ	0xFEC
 10902                           plusw0	equ	0xFEB
 10903                           fsr0h	equ	0xFEA
 10904                           fsr0l	equ	0xFE9
 10905                           wreg	equ	0xFE8
 10906                           indf1	equ	0xFE7
 10907                           postinc1	equ	0xFE6
 10908                           postdec1	equ	0xFE5
 10909                           preinc1	equ	0xFE4
 10910                           plusw1	equ	0xFE3
 10911                           fsr1h	equ	0xFE2
 10912                           fsr1l	equ	0xFE1
 10913                           bsr	equ	0xFE0
 10914                           indf2	equ	0xFDF
 10915                           postinc2	equ	0xFDE
 10916                           postdec2	equ	0xFDD
 10917                           preinc2	equ	0xFDC
 10918                           plusw2	equ	0xFDB
 10919                           fsr2h	equ	0xFDA
 10920                           fsr2l	equ	0xFD9
 10921                           status	equ	0xFD8

Data Sizes:
    Strings     345
    Constant    0
    Data        12
    BSS         123
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     59      76
    BANK0           160     82     160
    BANK1           256     15      55
    BANK2           256      0       0

Pointer List with Targets:

    strcmp@r	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_81(CODE[20]), STR_79(CODE[15]), STR_77(CODE[16]), STR_75(CODE[4]), 
		 -> STR_73(CODE[11]), STR_71(CODE[3]), STR_69(CODE[14]), STR_67(CODE[13]), 
		 -> STR_65(CODE[5]), STR_21(CODE[5]), STR_19(CODE[5]), STR_17(CODE[5]), 
		 -> STR_15(CODE[5]), STR_13(CODE[5]), STR_11(CODE[5]), STR_9(CODE[5]), 
		 -> STR_7(CODE[5]), STR_4(CODE[5]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_83(CODE[5]), STR_63(CODE[2]), STR_61(CODE[5]), STR_60(CODE[20]), 
		 -> STR_59(CODE[15]), STR_58(CODE[11]), STR_57(CODE[16]), STR_56(CODE[4]), 
		 -> STR_55(CODE[3]), STR_54(CODE[14]), STR_53(CODE[13]), STR_1(CODE[1]), 

    myStrncmp@str2	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_81(CODE[20]), STR_79(CODE[15]), STR_77(CODE[16]), STR_75(CODE[4]), 
		 -> STR_73(CODE[11]), STR_71(CODE[3]), STR_69(CODE[14]), STR_67(CODE[13]), 
		 -> STR_65(CODE[5]), STR_21(CODE[5]), STR_19(CODE[5]), STR_17(CODE[5]), 
		 -> STR_15(CODE[5]), STR_13(CODE[5]), STR_11(CODE[5]), STR_9(CODE[5]), 
		 -> STR_7(CODE[5]), STR_4(CODE[5]), 

    myStrncmp@str1	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_83(CODE[5]), STR_63(CODE[2]), STR_61(CODE[5]), STR_60(CODE[20]), 
		 -> STR_59(CODE[15]), STR_58(CODE[11]), STR_57(CODE[16]), STR_56(CODE[4]), 
		 -> STR_55(CODE[3]), STR_54(CODE[14]), STR_53(CODE[13]), STR_1(CODE[1]), 

    sp__valorConvUARTbit	PTR const unsigned char  size(2) Largest target is 5
		 -> valorConvUARTbit@string(COMRAM[5]), 

    sp__valorConvUART	PTR const unsigned char  size(2) Largest target is 5
		 -> valorConvUART@string(BANK0[5]), 

    UARTSendString@str	PTR unsigned char  size(2) Largest target is 20
		 -> STR_84(CODE[19]), STR_83(CODE[5]), STR_82(CODE[5]), STR_63(CODE[2]), 
		 -> STR_62(CODE[5]), STR_61(CODE[5]), STR_60(CODE[20]), STR_59(CODE[15]), 
		 -> STR_58(CODE[11]), STR_57(CODE[16]), STR_56(CODE[4]), STR_55(CODE[3]), 
		 -> STR_54(CODE[14]), STR_53(CODE[13]), STR_52(CODE[10]), STR_51(CODE[2]), 
		 -> STR_50(CODE[12]), STR_49(CODE[7]), STR_48(CODE[13]), STR_47(CODE[12]), 
		 -> STR_46(CODE[13]), STR_45(CODE[12]), STR_44(CODE[13]), STR_43(CODE[12]), 
		 -> STR_42(CODE[12]), STR_41(CODE[11]), STR_40(CODE[13]), STR_39(CODE[12]), 
		 -> STR_38(CODE[2]), STR_37(CODE[11]), STR_36(CODE[2]), STR_35(CODE[2]), 
		 -> STR_34(CODE[3]), testeADbit@string(BANK0[2]), STR_33(CODE[2]), STR_32(CODE[11]), 
		 -> STR_31(CODE[2]), STR_30(CODE[6]), STR_29(CODE[2]), STR_28(CODE[6]), 
		 -> STR_27(CODE[2]), STR_26(CODE[6]), STR_25(CODE[2]), STR_24(CODE[6]), 
		 -> STR_23(CODE[2]), STR_22(CODE[6]), STR_5(CODE[16]), STR_2(CODE[15]), 
		 -> valorConvUARTbit@string(COMRAM[5]), valorConvUART@string(BANK0[5]), STR_1(CODE[1]), 

    setComando@c	PTR unsigned char  size(2) Largest target is 20
		 -> STR_61(CODE[5]), STR_60(CODE[20]), STR_59(CODE[15]), STR_58(CODE[11]), 
		 -> STR_57(CODE[16]), STR_56(CODE[4]), STR_55(CODE[3]), STR_54(CODE[14]), 
		 -> STR_53(CODE[13]), 

    comando	PTR unsigned char  size(2) Largest target is 20
		 -> STR_83(CODE[5]), STR_63(CODE[2]), STR_61(CODE[5]), STR_60(CODE[20]), 
		 -> STR_59(CODE[15]), STR_58(CODE[11]), STR_57(CODE[16]), STR_56(CODE[4]), 
		 -> STR_55(CODE[3]), STR_54(CODE[14]), STR_53(CODE[13]), STR_1(CODE[1]), 


Critical Paths under _main in COMRAM

    _main->_testeMotores
    _testeLampadas->_bitExtract
    _myStrncmp->_strcmp
    _valorConvUARTbit->_getAD_ANbit
    ___fldiv->___flmul
    _moverMotor->_lados
    _lados->___flmul
    _setDutyPWM6->___wmul
    _setDutyPWM4->___wmul
    _setDutyPWM2->___wmul
    _setDutyPWM0->___wmul
    _configDA->___xxtofl
    _getAD_ANbit->_bitExtract
    ___fladd->___flmul
    ___awmod->___awdiv
    _readAD_AN->___flmul
    ___xxtofl->_getAD_ANbit
    ___flmul->___xxtofl
    ___fltol->___flmul

Critical Paths under _ISR in COMRAM

    _ISR->i2_setDutyPWM0
    _ISR->i2_setDutyPWM2
    _ISR->i2_setDutyPWM4
    _ISR->i2_setDutyPWM6
    i2_setDutyPWM6->i2___wmul
    i2_setDutyPWM4->i2___wmul
    i2_setDutyPWM2->i2___wmul
    i2_setDutyPWM0->i2___wmul
    i2_UARTSendString->i2_UARTSendChar

Critical Paths under _main in BANK0

    _main->_setPID
    _testeMotores->_UARTSendString
    _testeADbit->_UARTSendString
    _testeAD->_UARTSendString
    _setPID->_posicao
    _posicao->___fldiv
    ___fldiv->___flsub
    _moverMotor->_lados
    _lados->___fltol
    ___flsub->___fladd
    ___fladd->___flmul
    _PrintSensores->_UARTSendString
    _valorConvUART->_getAD_AN
    _getAD_AN->___fltol
    _readAD_AN->___flmul
    ___fltol->___fladd
    _UARTSendString->_valorConvUART

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _setPID->_posicao

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0  178495
                                             14 BANK1      1     1      0
                      _PrintSensores
                       _UARTReadChar
                       _UARTSendChar
                     _UARTSendString
                           _configAD
                         _configBits
                           _configDA
                          _configPWM
                        _configUSART
                           _getAD_AN
                         _initTimer0
                         _moverMotor
                          _myStrncmp
                        _setDutyPWM0
                        _setDutyPWM2
                        _setDutyPWM4
                        _setDutyPWM6
                             _setPID
                            _testeAD
                         _testeADbit
                      _testeLampadas
                       _testeMotores
 ---------------------------------------------------------------------------------
 (1) _testeMotores                                         3     3      0   17633
                                             58 COMRAM     1     1      0
                                             72 BANK0      2     2      0
                     _UARTSendString
                          _myStrncmp
                        _setDutyPWM0
                        _setDutyPWM2
                        _setDutyPWM4
                        _setDutyPWM6
 ---------------------------------------------------------------------------------
 (1) _testeLampadas                                        4     4      0    6436
                                             32 COMRAM     4     4      0
                         _bitExtract
                          _myStrncmp
 ---------------------------------------------------------------------------------
 (2) _myStrncmp                                            4     0      4    3044
                                             23 COMRAM     4     0      4
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               5     1      4     264
                                             18 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _testeADbit                                           6     6      0   14145
                                             72 BANK0      6     6      0
                     _UARTSendString
                        _getAD_ANbit
                   _valorConvUARTbit
 ---------------------------------------------------------------------------------
 (2) _valorConvUARTbit                                    17    15      2    2799
                                             36 COMRAM    17    15      2
                            ___awdiv
                            ___awmod
                        _getAD_ANbit (ARG)
 ---------------------------------------------------------------------------------
 (1) _testeAD                                              2     2      0   20368
                                             72 BANK0      2     2      0
                     _UARTSendString
                           _getAD_AN
                      _valorConvUART
 ---------------------------------------------------------------------------------
 (1) _setPID                                              10    10      0   49163
                                             72 BANK0     10    10      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                           _configDA
                         _moverMotor
                            _posicao
 ---------------------------------------------------------------------------------
 (2) _posicao                                             20    16      4    9877
                                             66 BANK0      6     2      4
                                              0 BANK1     14    14      0
                            ___fladd
                            ___fldiv
                             ___fleq
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2363
                                             41 BANK0     25    17      8
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _moverMotor                                           2     0      2   16686
                                             45 BANK0      2     0      2
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
                              _lados
 ---------------------------------------------------------------------------------
 (3) _lados                                                3     1      2    6664
                                             58 COMRAM     1     1      0
                                             43 BANK0      2     0      2
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
                        _setDutyPWM0
                        _setDutyPWM2
                        _setDutyPWM4
                        _setDutyPWM6
 ---------------------------------------------------------------------------------
 (2) _setDutyPWM6                                          4     2      2    1568
                                             24 COMRAM     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _setDutyPWM4                                          4     2      2    1492
                                             24 COMRAM     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _setDutyPWM2                                          4     2      2    1644
                                             24 COMRAM     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _setDutyPWM0                                          4     2      2    1568
                                             24 COMRAM     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     767
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _configDA                                             4     4      0    5268
                                             50 COMRAM     4     4      0
                             ___flge
                           ___xxtofl
                        _getAD_ANbit
 ---------------------------------------------------------------------------------
 (2) _getAD_ANbit                                          4     2      2    3543
                                             32 COMRAM     4     2      2
                         _bitExtract
                       _readAD_ANbit
 ---------------------------------------------------------------------------------
 (3) _readAD_ANbit                                         2     0      2       0
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     334
                                             18 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5087
                                             33 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    4342
                                             17 BANK0     16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _initTimer0                                           2     0      2      98
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _configUSART                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configPWM                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configBits                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configAD                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UARTReadChar                                         1     1      0      23
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PrintSensores                                        8     8      0   22103
                                             72 BANK0      8     8      0
                     _UARTSendString
                             ___fleq
                           _getAD_AN
                      _valorConvUART
 ---------------------------------------------------------------------------------
 (2) _valorConvUART                                       15    13      2    3134
                                             49 BANK0     15    13      2
                            ___awdiv
                            ___awmod
                           _getAD_AN (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1360
                                             26 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1060
                                             18 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _getAD_AN                                             6     4      2    9549
                                             43 BANK0      6     4      2
                            ___fltol
                         _bitExtract
                          _readAD_AN
 ---------------------------------------------------------------------------------
 (3) _readAD_AN                                            8     4      4    4947
                                             17 BANK0      8     4      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1168
                                             36 COMRAM    14    10      4
                        _getAD_ANbit (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3745
                                             50 COMRAM     8     0      8
                                              0 BANK0     17    17      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _bitExtract                                          14     8      6    3258
                                             18 COMRAM    14     8      6
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     525
                                             33 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8    1670
                                             18 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _UARTSendString                                       8     4      4    7685
                                             64 BANK0      8     4      4
                       _UARTSendChar
                      _UARTWriteTest
                           _getAD_AN (ARG)
                        _getAD_ANbit (ARG)
                      _valorConvUART (ARG)
                   _valorConvUARTbit (ARG)
 ---------------------------------------------------------------------------------
 (3) _UARTSendChar                                         1     1      0      22
                                             18 COMRAM     1     1      0
                      _UARTWriteTest
 ---------------------------------------------------------------------------------
 (3) _UARTWriteTest                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  8     8      0    3342
                                             10 COMRAM     8     8      0
                         _ligaTimer0
                         _setComando
                     i2_UARTReadChar
                   i2_UARTSendString
                      i2_setDutyPWM0
                      i2_setDutyPWM2
                      i2_setDutyPWM4
                      i2_setDutyPWM6
 ---------------------------------------------------------------------------------
 (7) i2_setDutyPWM6                                        4     2      2     460
                                              6 COMRAM     4     2      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) i2_setDutyPWM4                                        4     2      2     460
                                              6 COMRAM     4     2      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) i2_setDutyPWM2                                        4     2      2     460
                                              6 COMRAM     4     2      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) i2_setDutyPWM0                                        4     2      2     460
                                              6 COMRAM     4     2      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (8) i2___wmul                                             6     2      4     367
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) i2_UARTSendString                                     8     4      4     773
                                              1 COMRAM     8     4      4
                     i2_UARTSendChar
                    i2_UARTWriteTest
 ---------------------------------------------------------------------------------
 (8) i2_UARTSendChar                                       1     1      0      22
                                              0 COMRAM     1     1      0
                    i2_UARTWriteTest
 ---------------------------------------------------------------------------------
 (8) i2_UARTWriteTest                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i2_UARTReadChar                                       1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _setComando                                           2     0      2     706
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _ligaTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PrintSensores
     _UARTSendString
       _UARTSendChar
         _UARTWriteTest
       _UARTWriteTest
       _getAD_AN (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _getAD_ANbit (ARG)
                   _bitExtract
                   _readAD_ANbit
             ___xxtofl (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         _bitExtract
         _readAD_AN
           ___flmul
           ___xxtofl
       _getAD_ANbit (ARG)
       _valorConvUART (ARG)
         ___awdiv
         ___awmod
           ___awdiv (ARG)
         _getAD_AN (ARG)
       _valorConvUARTbit (ARG)
         ___awdiv
         ___awmod
         _getAD_ANbit (ARG)
     ___fleq
     _getAD_AN
     _valorConvUART
   _UARTReadChar
   _UARTSendChar
   _UARTSendString
   _configAD
   _configBits
   _configDA
     ___flge
     ___xxtofl
     _getAD_ANbit
   _configPWM
   _configUSART
   _getAD_AN
   _initTimer0
   _moverMotor
     ___fladd
     ___flmul
     ___fltol
     ___xxtofl
     _lados
       ___fladd (ARG)
       ___flmul (ARG)
       ___fltol (ARG)
       ___xxtofl (ARG)
       _setDutyPWM0 (ARG)
         ___wmul
       _setDutyPWM2 (ARG)
         ___wmul
       _setDutyPWM4 (ARG)
         ___wmul
       _setDutyPWM6 (ARG)
         ___wmul
   _myStrncmp
     _strcmp
   _setDutyPWM0
   _setDutyPWM2
   _setDutyPWM4
   _setDutyPWM6
   _setPID
     ___fladd
     ___fldiv
       ___flmul (ARG)
       ___flsub (ARG)
         ___fladd
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___flsub
     ___fltol
     ___xxtofl
     _configDA
     _moverMotor
     _posicao
       ___fladd
       ___fldiv
       ___fleq
       ___xxtofl
   _testeAD
     _UARTSendString
     _getAD_AN
     _valorConvUART
   _testeADbit
     _UARTSendString
     _getAD_ANbit
     _valorConvUARTbit
   _testeLampadas
     _bitExtract
     _myStrncmp
   _testeMotores
     _UARTSendString
     _myStrncmp
     _setDutyPWM0
     _setDutyPWM2
     _setDutyPWM4
     _setDutyPWM6

 _ISR (ROOT)
   _ligaTimer0
   _setComando
   i2_UARTReadChar
   i2_UARTSendString
     i2_UARTSendChar
       i2_UARTWriteTest
     i2_UARTWriteTest
   i2_setDutyPWM0
     i2___wmul
   i2_setDutyPWM2
     i2___wmul
   i2_setDutyPWM4
     i2___wmul
   i2_setDutyPWM6
     i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      24        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      F      37       6       21.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     52      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3B      4C       1       80.9%
BITBIGSFRhhhhl      1B      0       0      10        0.0%
BITBIGSFRhhhl       10      0       0      11        0.0%
BITBIGSFRhhhhh       D      0       0       9        0.0%
BITBIGSFRllllhh      D      0       0      17        0.0%
BITBIGSFRllh         C      0       0      14        0.0%
BITBIGSFRllllll      A      0       0      22        0.0%
BITBIGSFRhll         8      0       0      13        0.0%
BITBIGSFRhlh         6      0       0      12        0.0%
BITBIGSFRlllllh      2      0       0      19        0.0%
BITBIGSFRlllllh      2      0       0      20        0.0%
BITBIGSFRlllhh       2      0       0      15        0.0%
BITBIGSFRlllhl       2      0       0      16        0.0%
BITBIGSFRllllll      1      0       0      21        0.0%
BITBIGSFRllllhl      1      0       0      18        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     123      23        0.0%
DATA                 0      0     123      25        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed May 25 20:24:42 2022

                         _D 00CE                           _I 00D2                           _P 00D6  
              ___fldiv@aexp 00A1                ___fldiv@bexp 00A0                           _i 004A  
              ___fldiv@sign 0099                posicao@local 0128                posicao@total 0130  
              ___awdiv@sign 0018                          _de 00BE                          _kd 0046  
                        _dt 00C2                          _ki 00C6                          _kp 00F4  
                        _tf 00BA         ___wmul@multiplicand 0015                         l200 324C  
                       l131 345E                         l140 2C0A                         l125 34AE  
                       l134 3486                         l143 3410                         l119 344E  
                       l128 3450                         l160 3048                         l321 21F0  
                       l153 2A64                         l322 2200                         l163 3430  
                       l315 2334                         l331 2A9C                         l148 2E46  
                       l172 295E                         l244 2462                         l181 32E4  
                       l333 2B3E                         l166 2536                         l190 3272  
                       l254 267E                         l238 0C16                         l351 1C14  
                       l175 2982                         l247 1E9A                         l352 1C86  
                       l184 32BE                         l328 311C                         l336 19D2  
                       l169 2576                         l193 34BC                         l178 33EC  
                       l259 349C                         l187 3298                         l196 3176  
                       l391 16EA                         l383 14F4                         l641 2EF6  
                       l628 2D94                         l397 330A                         l662 2844  
                       l656 2FA0                         l667 288A                         l925 04D4  
                       l694 2786                         l942 05EE                         l934 07A4  
                       l926 04C2                         l951 06BE                         l927 0488  
                       l952 06AC                         l981 123E                         l990 1284  
                       l967 3210                         l992 12FC                         l984 1202  
                       l993 12EA                         l979 13DE                         _RC0 007C10  
                       _RC1 007C11                         _RC2 007C12                         _RC3 007C13  
                       _PID 00CA                         _ISR 0008       __end_ofi2_setDutyPWM0 33A4  
     __end_ofi2_setDutyPWM2 337E       __end_ofi2_setDutyPWM4 3358       __end_ofi2_setDutyPWM6 3332  
            testeLampadas@i 0023  i2UARTSendString@max_length 0004                         _pos 00DE  
              ___awmod@sign 0020                         wreg 000FE8                ___flmul@aexp 0065  
              ___flmul@bexp 006A                ___flmul@sign 0064                ___flmul@temp 006F  
              ___flmul@prod 006B                        ?_ISR 0001                ___fltol@exp1 008A  
                      l1011 0CDE                        l1020 0F4C                        l1021 0F3A  
                      l1015 1042                        l1018 0ED4                        l1028 1004  
                      l1052 1EF2                        l1055 204E                        l1066 1FE6  
                      l1059 1F8A                        l1076 30C0                        l3300 2D84  
                      l3302 2D8C                        l3310 2E5A                        l3320 2E8E  
                      l3312 2E62                        l5000 1612                        l3402 2712  
                      l4210 0C46                        l4202 0C18                        l3330 2ECA  
                      l3322 2E96                        l3314 2E66                        l3306 2E48  
                      l5010 161E                        l5002 1616                        l3420 2776  
                      l3412 273A                        l3404 271C                        l4220 0C82  
                      l4212 0C56                        l4204 0C26                        l3332 2ED0  
                      l3324 2E9E                        l3316 2E74                        l3308 2E4C  
                      l5020 1674                        l5012 163E                        l5004 1618  
                      l3414 2746                        l3406 2726                        l4302 0F5C  
                      l4310 0FA4                        l4230 0CB8                        l4222 0C88  
                      l4214 0C66                        l4206 0C34                        l3270 2CF0  
                      l3262 2CD2                        l3326 2EAC                        l3334 2ED6  
                      l3318 2E7C                        l5030 1692                        l5022 1680  
                      l5014 1652                        l5006 161A                        l3440 2BE6  
                      l3432 2B70                        l3416 2756                        l4320 1018  
                      l4312 0FBE                        l4304 0F68                        l4232 0CC8  
                      l4224 0C96                        l4216 0C6C                        l4208 0C36  
                      l3280 2D24                        l3272 2CFE                        l3264 2CD6  
                      l3336 2EE6                        l3328 2EC2                        l3600 33F6  
                      l4400 0312                        l3360 27B6                        l5040 16CE  
                      l5024 168C                        l5016 165C                        l5008 161C  
                      l5032 1698                        l3442 2BEC                        l3426 2B40  
                      l3418 2766                        l4322 1026                        l4314 0FD2  
                      l4306 0F76                        l4250 0D4A                        l4242 0D12  
                      l4234 0CCE                        l4226 0C98                        l4218 0C7C  
                      l3290 2D5E                        l3282 2D2C                        l3274 2D06  
                      l3266 2CE4                        l3338 2EEE                        l3450 2E2E  
                      l3602 33FA                        l4410 034C                        l4402 0322  
                      l3370 2824                        l3362 27C6                        l3610 07AA  
                      l5042 16D0                        l5034 16C8                        l5026 168E  
                      l5018 1668                        l2652 3450                        l3436 2BB0  
                      l3428 2B52                        l3380 2680                        l4324 1028  
                      l4316 0FEC                        l4308 0FA0                        l4260 0D94  
                      l4252 0D62                        l4244 0D1E                        l4236 0CEE  
                      l4228 0CA8                        l4340 1F18                        l4332 1E9E  
                      l3292 2D66                        l3284 2D34                        l3276 2D0A  
                      l3268 2CEC                        l3452 2E32                        l3444 2D96  
                      l3604 33CA                        l4500 0516                        l4420 037A  
                      l4412 0352                        l4404 0332                        l3372 2832  
                      l3364 27F4                        l2660 3428                        l3460 2984  
                      l2900 304A                        l3700 09D0                        l3620 07D6  
                      l3612 07C0                        l5036 16CA                        l5028 1690  
                      l3438 2BE2                        l3390 26D8                        l3382 2698  
                      l4318 1008                        l4326 102E                        l4270 0DEA  
                      l4262 0DA4                        l4254 0D6E                        l4246 0D28  
                      l4238 0CFE                        l4350 1F72                        l4334 1EAE  
                      l3294 2D68                        l3286 2D42                        l3278 2D12  
                      l3454 2E38                        l3446 2E1A                        l3606 33DE  
                      l4510 0550                        l4502 0524                        l4430 03AE  
                      l4422 037C                        l4414 0364                        l4406 0334  
                      l3374 2882                        l3366 2804                        l3358 2788  
                      l2654 3412                        l2646 32E6                        l2670 32DC  
                      l3470 2A56                        l3462 2A38                        l2902 304E  
                      l3710 0A26                        l3702 09E8                        l3630 0830  
                      l3622 07E4                        l5038 16CC                        l3392 26E8  
                      l2664 311E                        l4328 1032                        l4280 0E8E  
                      l4272 0E06                        l4264 0DB0                        l4256 0D7A  
                      l4248 0D3E                        l4360 1FD6                        l4352 1F74  
                      l4344 1F2C                        l4336 1EBC                        l3296 2D6E  
                      l3288 2D48                        l3456 2E3E                        l3448 2E26  
                      l4520 05BC                        l4512 0552                        l4504 0532  
                      l4440 03EA                        l4424 038C                        l4432 03B6  
                      l4416 0366                        l4408 033C                        l3376 2888  
                      l3368 2812                        l2656 341A                        l2648 3302  
                      l2672 32E0                        l2680 3274                        l2920 3104  
                      l2912 30C4                        l4600 1062                        l3472 2A5C  
                      l3464 2A44                        l2904 3056                        l3720 0A64  
                      l3712 0A42                        l3704 09F6                        l3640 085C  
                      l3632 0846                        l3608 07A6                        l3394 26EC  
                      l3386 26AC                        l4290 0EE4                        l4282 0E9C  
                      l4274 0E12                        l4266 0DC0                        l4258 0D88  
                      l4370 202E                        l4362 1FF4                        l4354 1F80  
                      l4346 1F34                        l4338 1F02                        l3298 2D74  
                      l3570 343A                        l4530 0614                        l4522 05BE  
                      l4514 055C                        l4506 053E                        l4450 03FE  
                      l4442 03EE                        l4434 03C6                        l4426 039C  
                      l4418 036C                        l2658 3420                        l2674 329A  
                      l2682 3290                        l2690 326E                        l2914 30C8  
                      l4602 1072                        l4610 109C                        l3466 2A4A  
                      l2906 3080                        l3490 3212                        l3730 0ABA  
                      l3722 0A7C                        l3714 0A5A                        l3650 08A6  
                      l3642 0868                        l3634 0852                        l3626 080E  
                      l3618 07CA                        l3396 26FA                        l3388 26D6  
                      l4292 0EF2                        l4284 0EBA                        l4276 0E2E  
                      l4268 0DDA                        l4372 203C                        l4364 1FF6  
                      l4356 1FBC                        l4348 1F40                        l4380 2FAA  
                      l3580 3444                        l3572 343C                        l3564 3432  
                      l4540 0642                        l4524 05CE                        l4508 0542  
                      l4516 0562                        l4460 0412                        l4452 0402  
                      l4444 03F2                        l4436 03D8                        l4428 03AC  
                      l2668 32C0                        l2676 32B6                        l2684 3294  
                      l2916 30DA                        l4700 130C                        l4620 10C8  
                      l4612 10AC                        l4604 1082                        l3468 2A50  
                      l2908 309C                        l3492 3238                        l3740 0AF8  
                      l3732 0AD6                        l3724 0A8A                        l3708 0A20  
                      l3660 08D8                        l3652 08C2                        l3644 0876  
                      l3628 0814                        l2870 3482                        l4294 0EF6  
                      l4286 0EC4                        l4278 0E58                        l4374 203E  
                      l4366 1FFA                        l4358 1FC8                        l4382 2FB0  
                      l3582 3446                        l3574 343E                        l3566 3436  
                      l4542 0650                        l4534 0628                        l4550 066E  
                      l4518 0588                        l4526 05DE                        l4462 0416  
                      l4454 0406                        l4446 03F6                        l4438 03E6  
                      l4470 0426                        l2678 32BA                        l2686 324E  
                      l2918 30F2                        l4710 136E                        l4702 1318  
                      l4622 10D8                        l4630 1102                        l4614 10B2  
                      l4606 1092                        l3830 25A4                        l3750 0B4E  
                      l3742 0B10                        l3734 0AEE                        l3670 0922  
                      l3662 08E4                        l3654 08CE                        l4296 0F04  
                      l4288 0ED2                        l4368 201E                        l4384 2FB8  
                      l3592 34A8                        l3584 3448                        l3576 3440  
                      l3568 3438                        l4544 0658                        l4536 0632  
                      l4528 0604                        l4552 067C                        l4480 0496  
                      l4472 042A                        l4464 041A                        l4456 040A  
                      l4448 03FA                        l4392 02E4                        l2688 326A  
                      l4720 13CC                        l4712 1384                        l4704 1326  
                      l4640 1144                        l4632 1112                        l4624 10E8  
                      l4616 10B8                        l4608 1094                        l3840 262A  
                      l3832 25BA                        l3824 2582                        l3760 0B8C  
                      l3752 0B6A                        l3744 0B1E                        l3728 0AB4  
                      l3680 0954                        l3672 093E                        l3664 08F2  
                      l3648 08A0                        l4298 0F32                        l4386 3004  
                      l4378 2FA2                        l3594 34AC                        l3586 344A  
                      l3578 3442                        l3850 3498                        l4562 06CE  
                      l4570 0724                        l4554 0680                        l4546 065C  
                      l4538 0640                        l4490 04C0                        l4482 04A2  
                      l4474 0454                        l4466 041E                        l4458 040E  
                      l4394 02F2                        l4810 31DC                        l2890 295C  
                      l4802 2A66                        l4722 13D2                        l4714 139E  
                      l4706 1350                        l4634 1128                        l4626 10F8  
                      l4618 10C6                        l3842 2640                        l3834 25D0  
                      l3826 258A                        l3818 2578                        l3498 3244  
                      l3770 0BE2                        l3762 0BA4                        l3754 0B82  
                      l3690 099E                        l3682 0960                        l3674 094A  
                      l2868 347E                        l4740 2F74                        l4732 2EF8  
                      l4388 3038                        l4900 1B9C                        l3588 344C  
                      l4580 0776                        l4572 0734                        l4564 06DA  
                      l4556 068E                        l4548 066C                        l4492 04E2  
                      l4484 04A6                        l4476 0470                        l4468 0422  
                      l4396 0300                        l2892 296C                        l4804 2A7A  
                      l4724 13D4                        l4716 13BA                        l4708 1354  
                      l4660 11C6                        l4652 117C                        l4636 1138  
                      l4644 1158                        l4628 10FA                        l4820 1CE4  
                      l3844 2646                        l3836 25FE                        l3828 2590  
                      l3780 233E                        l3772 0BFE                        l3764 0BB2  
                      l3748 0B48                        l3692 09BA                        l3684 096E  
                      l3668 091C                        l4742 2F98                        l4734 2F26  
                      l4750 2532                        l4910 1C5A                        l4902 1BB2  
                      l3598 33EE                        l4590 0794                        l4582 077C  
                      l4574 0744                        l4566 06E8                        l4558 06A4  
                      l4494 04F2                        l4486 04B4                        l4478 0480  
                      l4398 0302                        l2894 2978                        l2886 288C  
                      l4806 2AA4                        l4718 13BE                        l4670 120C  
                      l4662 11CE                        l4654 1196                        l4646 1168  
                      l4638 1140                        l4830 1DB2                        l4822 1CFA  
                      l4814 1C88                        l3846 2662                        l3838 2614  
                      l3782 23FE                        l3774 2336                        l3694 09C6  
                      l4744 2F9E                        l4736 2F36                        l4752 2534  
                      l4912 1C70                        l4904 1BE4                        l3848 3494  
                      l4584 077E                        l4576 0764                        l4568 0722  
                      l4488 04B6                        l4808 31CA                        l2896 297A  
                      l2888 295A                        l4680 1264                        l4672 122A  
                      l4664 11DE                        l4656 11A6                        l4648 1168  
                      l4840 1E80                        l4832 1E0E                        l4824 1D56  
                      l4816 1C9E                        l3768 0BDC                        l3688 0998  
                      l4920 13FA                        l4738 2F64                        l4754 2544  
                      l4906 1BFE                        l4586 0784                        l4578 0768  
                      l4498 0506                        l4770 22B0                        l4762 2202  
                      l4690 12A2                        l4682 126A                        l4674 122C  
                      l4666 11F2                        l4658 11B6                        l4594 1044  
                      l4850 1784                        l4842 16F2                        l4834 1E3E  
                      l4826 1D86                        l4818 1CCE                        l3786 2428  
                      l4930 140C                        l4922 13FC                        l4914 13E0  
                      l4756 2558                        l4748 2464                        l4908 1C2A  
                      l4588 0792                        l4772 22E4                        l4692 12A6  
                      l4684 1274                        l4676 123C                        l4668 1200  
                      l4596 1052                        l4860 1892                        l4852 1794  
                      l4844 170A                        l4836 1E54                        l4828 1D9C  
                      l3788 2442                        l4940 141C                        l4932 1410  
                      l4924 1400                        l4916 13F4                        l4758 255A  
                      l4774 2314                        l4694 12B4                        l4686 1282  
                      l4678 124E                        l4598 1060                        l4790 215A  
                      l4870 19C6                        l4862 18EA                        l4854 1804  
                      l4846 171A                        l4838 1E6A                        l4950 142C  
                      l4942 141E                        l4934 1412                        l4926 1404  
                      l4918 13F6                        l4880 1A5C                        l4872 19D4  
                      l4776 2318                        l4768 220A                        l4696 12E2  
                      l4688 1294                        l4792 2176                        l4784 207A  
                      l4864 1942                        l4856 182A                        l4848 1750  
                      l4960 1498                        l4952 1430                        l4944 1420  
                      l4936 1416                        l4928 1408                        l4890 1AEE  
                      l4882 1A76                        l4874 19E4                        l4794 21A8  
                      l4786 20D2                        l4778 2050                        l4866 1976  
                      l4858 185E                        l4970 151A                        l4962 14A0  
                      l4954 143C                        l4946 1424                        l4938 141A  
                      l4892 1B20                        l4884 1A8C                        l4876 1A1A  
                      l4796 21DC                        l4788 2154                        l4868 19AA  
                      l4980 1558                        l4972 1522                        l4964 14C6  
                      l4956 1446                        l4948 1428                        l4894 1B3A  
                      l4886 1ABE                        l4878 1A2A                        l4990 15B0  
                      l4982 157E                        l4974 1526                        l4966 14CA  
                      l4958 1472                        l4896 1B50                        l4888 1AD8  
                      l4992 15B4                        l4984 1582                        l4976 154C  
                      l4968 14F0                        l4898 1B82                        l4994 15DA  
                      l4986 1586                        l4978 1554                        l4996 15E8  
                      l4988 15AC                        l4998 160E                        STR_1 3FFB  
                      STR_2 3EEC                        STR_3 3FEB                        STR_4 3FEB  
                      STR_5 3ECC                        STR_7 3FEB                        STR_9 3FEB  
                      u2220 345E                        u2221 345A                        u2234 3136  
                      u3210 2CE4                        u2235 3130                        u3211 2CE0  
                      u2244 315C                        u3220 2CFE                        u3300 2EAC  
                      u2245 3156                        u3221 2CFA                        u3301 2EA8  
                      u3230 2D24                        u3310 2EC2                        u3231 2D20  
                      u3311 2EBE                        u3240 2D42                        u3320 2EE6  
                      u3400 2882                        u5000 10E8                        u3241 2D3E  
                      u3321 2EE2                        u3401 287E                        u5001 10E4  
                      u3410 2698                        u3250 2D5E                        u5010 1128  
                      u3411 2694                        u3251 2D5A                        u5011 1124  
                      u3500 2B9C                        u3420 26CC                        u4300 0C96  
                      u3260 2D84                        u2540 296C                        u5100 12B4  
                      u5020 1168                        u4301 0C92                        u3261 2D80  
                      u2541 2968                        u5101 12B0                        u5021 1164  
                      u3510 2BAC                        u3430 26FA                        u4310 0CA8  
                      u3270 2E5A                        u5110 12E2                        u5030 11DE  
                      u2550 3080                        u3511 2BA8                        u3431 26F6  
                      u4311 0CA4                        u3271 2E56                        u5111 12DE  
                      u5031 11DA                        u2551 307C                        u3520 2BDE  
                      u5200 2F98                        u3440 270E                        u4400 0F48  
                      u4320 0CB8                        u3280 2E74                        u3360 27B6  
                      u5120 12F8                        u5040 1200                        u2560 309C  
                      u5201 2F94                        u3441 270A                        u3425 26C2  
                      u4401 0F44                        u4321 0CB4                        u3281 2E70  
                      u3361 27B2                        u5121 12F4                        u5041 11FC  
                      u2561 3098                        u3530 2C0A                        u3450 2736  
                      u4410 0F5C                        u4330 0CEE                        u5210 2544  
                      u3290 2E8E                        u3370 27F4                        u2570 30DA  
                      u5130 130C                        u5050 122A                        u3531 2C06  
                      u3507 2B92                        u3451 2732                        u4411 0F58  
                      u4331 0CEA                        u5211 2540                        u3291 2E8A  
                      u3371 27F0                        u2571 30D6                        u5131 1308  
                      u5051 1226                        u3460 2756                        u4420 0F76  
                      u4340 0CFE                        u4500 1FB8                        u5300 1ABE  
                      u3380 2812                        u5220 22B0                        u2580 3104  
                      u5140 1326                        u5060 124E                        u3700 0994  
                      u3461 2752                        u4421 0F72                        u4341 0CFA  
                      u4501 1FB4                        u3541 2E20                        u5301 1ABA  
                      u3381 280E                        u5221 22AC                        u2581 3100  
                      u5141 1322                        u5061 124A                        u3701 0990  
                      u3470 2766                        u4430 0FBE                        u4350 0E78  
                      u4270 0C34                        u4510 1FD6                        u5310 1B20  
                      u3390 2832                        u5230 2334                        u5150 136E  
                      u5070 1264                        u3710 09BA                        u3527 2BD4  
                      u3471 2762                        u4431 0FBA                        u4271 0C30  
                      u4511 1FD2                        u5311 1B1C                        u3391 282E  
                      u5231 2330                        u5151 136A                        u5071 1260  
                      u3551 2A3E                        u3711 09B6                        u4440 0FEC  
                      u4360 0ED2                        u4280 0C46                        u4520 1FE6  
                      u5320 1B82                        u4600 037A                        u5160 139E  
                      u5080 1282                        u5240 20D2                        u3800 236C  
                      u3720 0A1C                        u3640 080A                        u5400 157E  
                      u4441 0FE8                        u4361 0ECE                        u4281 0C42  
                      u4521 1FE2                        u5321 1B7E                        u4601 0376  
                      u5161 139A                        u5081 127E                        u5241 20CE  
                      u3801 2366                        u3721 0A18                        u3641 0806  
                      u5401 157A                        u3490 2B6C                        u4450 1026  
                      u4370 0EF2                        u4290 0C56                        u4530 1FF4  
                      u5330 1BE4                        u4610 038C                        u5170 13CC  
                      u5090 12A2                        u5250 2176                        u3570 3238  
                      u3730 0A42                        u3650 0830                        u5410 15AC  
                      u3491 2B68                        u4451 1022                        u4371 0EEE  
                      u4355 0E6E                        u4291 0C52                        u4531 1FF0  
                      u5331 1BE0                        u4611 0388                        u5171 13C8  
                      u5091 129E                        u5251 2172                        u3571 3234  
                      u3731 0A3E                        u3651 082C                        u5411 15A8  
                      u5180 2F26                        u4380 0F04                        u4540 202E  
                      u4460 1EAE                        u4700 04D4                        u4620 039C  
                      u5260 21A8                        u3900 2662                        u3820 239C  
                      u3740 0AB0                        u3660 089C                        u5420 15DA  
                      u5340 1472                        u5181 2F22                        u4381 0F00  
                      u4541 202A                        u4461 1EAA                        u4701 04D0  
                      u4621 0398                        u5261 21A4                        u3901 265E  
                      u3821 2396                        u3741 0AAC                        u3661 0898  
                      u5421 15D6                        u5341 146E                        u5190 2F64  
                      u4390 0F32                        u4550 203C                        u4470 1EBC  
                      u4710 04E2                        u4630 03D8                        u5270 2A7A  
                      u3750 0AD6                        u3670 08C2                        u5430 160E  
                      u5350 1498                        u5191 2F60                        u4391 0F2E  
                      u4551 2038                        u4471 1EB8                        u4711 04DE  
                      u4631 03D4                        u5271 2A76                        u3815 236E  
                      u3751 0AD2                        u3671 08BE                        u5431 160A  
                      u5351 1494                        u4480 1F18                        u5280 1A1A  
                      u4800 0640                        u4720 04F2                        u4640 03E6  
                      u4560 0300                        u3840 23CC                        u3760 0B44  
                      u3680 0918                        u5440 163E                        u5360 14C6  
                      u4481 1F14                        u5281 1A16                        u4801 063C  
                      u4721 04EE                        u4641 03E2                        u4561 02FC  
                      u3841 23C6                        u3761 0B40                        u3681 0914  
                      u5441 163A                        u5361 14C2                        u4490 1F6E  
                      u5290 1A5C                        u4810 0650                        u4730 0524  
                      u4650 0454                        u4570 0312                        u3770 0B6A  
                      u3690 093E                        u5370 14F0                        u4491 1F6A  
                      u5291 1A58                        u4811 064C                        u4731 0520  
                      u4651 0450                        u4571 030E                        u3835 239E  
                      u3771 0B66                        u5507 09EE                        u3691 093A  
                      u5371 14EC                        u4900 0734                        u4820 066C  
                      u4740 0532                        u4660 046C                        u4580 0322  
                      u3860 23FC                        u3780 0BD8                        u5380 151A  
                      u4901 0730                        u4821 0668                        u4741 052E  
                      u4661 0466                        u4581 031E                        u3861 23F6  
                      u3781 0BD4                        u5517 0A82                        u5381 1516  
                      u4910 0744                        u4830 067C                        u4750 0550  
                      u4670 046E                        u4590 0364                        u3790 0BFE  
                      u5390 154C                        u4911 0740                        u4831 0678  
                      u4751 054C                        u4591 0360                        u3855 23CE  
                      u3791 0BFA                        u5527 0B16                        u5391 1548  
                      u4920 0764                        u4840 068E                        u4760 0588  
                      u4680 0496                        u3880 2424                        u4921 0760  
                      u4841 068A                        u4761 0584                        u4681 0492  
                      u3881 2420                        u5537 0BAA                        u5457 13E8  
                      u4930 0776                        u4850 06A4                        u4770 05CE  
                      u4690 04B4                        u3890 2462                        u4931 0772  
                      u4851 06A0                        u4771 05CA                        u4691 04B0  
                      u3891 245E                        u5547 2432                        u3875 23FE  
                      u5467 07DC                        u4940 0792                        u4860 06BA  
                      u4780 0604                        u4941 078E                        u4861 06B6  
                      u4781 0600                        u5557 266E                        u5477 086E  
                      u4870 06CE                        u4790 0614                        u4950 1060  
                      u4871 06CA                        u4791 0610                        u4951 105C  
                      u5567 1E8C                        u5487 08EA                        u4880 06E8  
                      u4960 1072                        u4881 06E4                        u4961 106E  
                      u5497 0966                        u4890 0722                        u4970 1082  
                      u4891 071E                        u4971 107E                        u4980 10C6  
                      u4981 10C2                        u4990 10D8                        u4991 10D4  
                      _TRMT 007D61              i2_UARTReadChar 34B0                        _main 13E0  
                      _erro 00DA                        fsr0h 000FEA                        indf0 000FEF  
                      fsr2h 000FDA                        fsr0l 000FE9                        fsr1l 000FE1  
                      fsr2l 000FD9                        btemp 004D               testeMotores@i 00A8  
                      prodh 000FF4                        prodl 000FF3              i2_UARTSendChar 3488  
                      start 02E0             ??_testeLampadas 0021             ___fldiv@new_exp 009A  
              ___param_bank 000000            _valorConvUARTbit 2984                       ??_ISR 000B  
             ?_readAD_ANbit 0013               ___fltol@sign1 0089             i2UARTSendChar@c 0001  
           __end_of___fladd 07A6                       ?_main 0001             __end_of___fldiv 13E0  
           __end_of___awdiv 2D96                       STR_11 3FEB                       STR_21 3FEB  
                     STR_13 3FEB                       STR_30 3FE0                       STR_22 3FC8  
                     STR_31 3EDA                       STR_23 3EDA                       STR_15 3FEB  
                     STR_32 3F8A                       STR_24 3FCE                       STR_40 3F18  
                     STR_33 3EDA                       STR_25 3EDA                       STR_17 3FEB  
                     STR_41 3FA1                       STR_34 3FF7                       STR_26 3FD4  
                     STR_42 3F95                       STR_50 3F89                       STR_51 3EDA  
                     STR_27 3EDA                       STR_19 3FEB                       STR_35 3FFC  
                     STR_43 3F65                       STR_36 3EDA                       STR_28 3FDA  
                     STR_52 3FB7                       STR_44 3F25                       STR_60 3EA5  
           __end_of___awmod 2EF8                       STR_29 3EDA                       STR_37 3F8A  
                     STR_61 3FEB                       STR_45 3F71                       STR_53 3F4C  
                     STR_38 3EDA                       STR_62 3FE6                       STR_46 3F32  
                     STR_54 3F0A                       STR_71 3FF4                       STR_63 3FFA  
                     STR_55 3FF4                       STR_47 3F7D                       STR_39 3F59  
                     STR_56 3FF0                       STR_48 3F3F                       STR_65 3FEB  
                     STR_81 3EA5                       STR_73 3FAC                       STR_49 3FC1  
                     STR_57 3EDC                       STR_82 3FE6                       STR_58 3FAC  
                     STR_75 3FF0                       STR_83 3FEB                       STR_67 3F4C  
                     STR_59 3EFB                       STR_84 3EB9                       STR_69 3F0A  
                     STR_77 3EDC                       STR_79 3EFB             __end_of___flmul 1044  
           __end_of___flsub 3212             __end_of___fltol 2788                       _T0CON 000FD5  
           ___awdiv@divisor 0015                       _PDC0H 000F78                       _PDC1H 000F76  
                     _PDC0L 000F79                       _PDC2H 000F74                       _DTCON 000F6D  
                     _PDC1L 000F77                       _PDC3H 000F72                       _PDC2L 000F75  
                     _PDC3L 000F73                       i2l122 34A6                       i2l131 346E  
                     i2l140 2CD0                       i2l125 34B6                       i2l134 3492  
                     i2l128 3460                       i2l181 33A2                       i2l190 3330  
                     i2l184 337C                       i2l265 34BA                       i2l362 0054  
                     i2l187 3356                       i2l374 02BC                       i2l397 33C8  
           ___awdiv@counter 0017                       _RCREG 000FAE                       _TMR0L 000FD6  
                     _SPBRG 000FAF                       _PORTB 000F81                       _PORTC 000F82  
                     _PORTD 000F83                       _PORTE 000F84                       _TRISA 000F92  
                     _TRISB 000F93                       _TRISC 000F94                       _TRISD 000F95  
                     _TRISE 000F96                       _TXREG 000FAD               getAD_AN@porta 008B  
                     _lados 30C2                       _erroi 00B6      __end_ofi2_UARTReadChar 34B8  
                     _posin 00E2                       tablat 000FF5             __end_of_testeAD 1E9C  
           __end_of_posicao 2202            __end_ofi2___wmul 33CA      __end_ofi2_UARTSendChar 3494  
                     ttemp5 004E                       ttemp6 0051                       ttemp7 0055  
                     status 000FD8                       wtemp8 004E            testeADbit@string 00AA  
           __initialization 3178                __end_of_main 16F2              ??_readAD_ANbit 0015  
                    ??_main 0136              _readAD_AN$1588 0075               __activetblptr 000002  
              ?_setDutyPWM0 0019                ?_setDutyPWM2 0019                ?_setDutyPWM4 0019  
              ?_setDutyPWM6 0019          valorConvUART@F3468 0041               lados@porcVelo 008B  
                    _ADCON3 000F9A                      ?_lados 008B       i2setDutyPWM0@porcVelo 0007  
           i2_UARTWriteTest 3460                      _ADRESH 000FC4                      _ADRESL 000FC3  
          ___awdiv@dividend 0013              getAD_AN@ANread 008D             ?i2_UARTReadChar 0001  
                    _ANSEL0 000FB8                      _ANSEL1 000FB9                      i2l4000 00DA  
                    i2l4010 0132                      i2l4002 00EE                      i2l4020 0184  
                    i2l4012 013E                      i2l4004 0100                      i2l4030 01D4  
                    i2l4022 0196                      i2l4014 0152                      i2l4006 010C  
                    i2l4040 022C                      i2l4032 01E8                      i2l4024 01A2  
                    i2l4016 0164                      i2l4008 0120                      i2l4050 0270  
                    i2l4042 0238                      i2l4034 01FA                      i2l4026 01B6  
                    i2l4018 0170                      i2l4060 0284                      i2l4052 027C  
                    i2l4044 024C                      i2l4036 0206                      i2l4028 01C8  
                    i2l4070 02BA                      i2l4054 027E                      i2l4046 0258  
                    i2l4062 0298                      i2l4038 021A                      i2l3424 3460  
                    i2l4056 0280                      i2l4048 0264                      i2l4064 029A  
                    i2l4066 02A8                      i2l4058 0282                      i2l4068 02AC  
                    i2l3560 33C0                      i2l3554 348A                      i2l3556 348E  
                    i2l3590 349E                      i2l3558 33A4                      i2l3852 34B8  
                    i2l3932 2C0C                      i2l3926 34B0                      i2l3942 2C7A  
                    i2l3934 2C1C                      i2l3950 337E                      i2l3928 34B4  
                    i2l3944 2CAA                      i2l3952 339A                      i2l3960 3378  
                    i2l3946 2CAE                      i2l3938 2C3A                      i2l3954 339E  
                    i2l3962 3332                      i2l3970 3328                      i2l3948 2CB2  
                    i2l3956 3358                      i2l3964 334E                      i2l3972 332C  
                    i2l3980 0046                      i2l3958 3374                      i2l3966 3352  
                    i2l3990 008A                      i2l3982 005A                      i2l3968 330C  
                    i2l3992 009C                      i2l3984 0060                      i2l3976 002A  
                    i2l3994 00A8                      i2l3986 0072                      i2l3978 0038  
                    i2l3996 00BC                      i2l3988 0076                      i2l3998 00CE  
                    _PTCON0 000F7F                      _PTCON1 000F7E                      _TMR0IF 007F92  
                    _TMR0ON 007EAF             ?i2_UARTSendChar 0001                      _PTPERH 000F7A  
                    _PTPERL 000F7B            __end_of_getAD_AN 2578          valorConvUART@valor 0091  
          __end_of___xxtofl 2050       i2setDutyPWM2@porcVelo 0007            __end_of_configAD 3412  
          __end_of_configDA 2336           i2UARTReadChar@ler 0001                      ___flge 2788  
                    ___fleq 2EF8                   ??___fladd 0079                      ___wmul 32E6  
     i2setDutyPWM4@porcVelo 0007                   ??___fldiv 0091                   ??___awdiv 0017  
                 ??___awmod 001F                   ??___flmul 0060                   ??___flsub 003B  
                 ??___fltol 0085      valorConvUARTbit@dezena 0030       _valorConvUARTbit$1587 0034  
                    _setPID 16F2      valorConvUARTbit@milhar 002C                      _millis 00E6  
                    clear_0 319E                      clear_1 31AA                      clear_2 31B6  
          ___awdiv@quotient 0019             ___awmod@divisor 001D                      isa$std 000001  
                    _sensor 0114             ___awmod@counter 001F                      _strcmp 304A  
    valorConvUARTbit@string 0027       i2setDutyPWM6@porcVelo 0007                __mediumconst 3EA4  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
                 ??_testeAD 00A8                   ??_posicao 00A6                  ___flge@ff1 0013  
                ___flge@ff2 0017                ___xxtofl@arg 002F                ___xxtofl@exp 002E  
              ___xxtofl@val 0025                  ___fleq@ff1 0013                  ___fleq@ff2 0017  
          i2_UARTSendString 2C0C          _valorConvUART$1586 009E                  __accesstop 0060  
   __end_of__initialization 31BC               ___rparam_used 000001                  ___fltol@f1 0081  
         i2setDutyPWM0@velo 0009           i2setDutyPWM2@velo 0009           i2setDutyPWM4@velo 0009  
         i2setDutyPWM6@velo 0009              __pcstackCOMRAM 0001       __end_of_PrintSensores 1C88  
              __pidataBANK0 3470               __end_of_lados 311E       __end_of_UARTWriteTest 3460  
     __end_of_valorConvUART 2E48     __end_ofi2_UARTWriteTest 3470                   ?i2___wmul 0001  
  UARTSendString@max_length 00A2    __end_of_valorConvUARTbit 2A66                     ??_lados 003B  
      __end_of_readAD_ANbit 3432                  __pbssBANK0 00B2                  __pbssBANK1 0100  
                _bitExtract 311E                 setComando@c 0001                     ?___flge 0013  
                   ?___fleq 0013                     ?___wmul 0013                     ?_setPID 0001  
                   ?_strcmp 0013                  ??i2___wmul 0005                   ?_getAD_AN 008B  
                 ?___xxtofl 0025                  _configBits 34BC         valorConvUART@dezena 009A  
                   _OVDCOND 000F6B                     _OVDCONS 000F6A                     _PID_int 00EE  
                   _PWMCON0 000F6F                     _PWMCON1 000F6E               ?_UARTReadChar 0001  
                 ?_configAD 0001                   ?_configDA 0001         setDutyPWM0@porcVelo 0019  
       valorConvUART@string 0093               ?_UARTSendChar 0001                   _ADCHSbits 000F99  
                _ligaTimer0 34B8         setDutyPWM2@porcVelo 0019    PrintSensores@millisAtual 00AC  
                   __Hparam 0000                     __Lparam 0000       __end_of_testeLampadas 2464  
         __end_of_configPWM 33EE           i2UARTSendString@i 0008               ??_getAD_ANbit 0023  
                   ___fladd 02E4                     ___fldiv 1044                  _initTimer0 3494  
                   ___awdiv 2CD2                     ___awmod 2E48                     ___flmul 0C18  
       setDutyPWM4@porcVelo 0019                     ___flsub 31CA                     ___fltol 2680  
            _UARTSendString 2B40           __end_of_readAD_AN 304A                     __pcinit 3178  
                   __ramtop 0300     valorConvUARTbit@centena 002E                     __ptext0 13E0  
                   __ptext1 07A6                     __ptext2 2336                     __ptext3 3212  
                   __ptext4 304A                     __ptext5 2578                     __ptext6 2984  
                   __ptext7 1C88                     __ptext8 16F2                     __ptext9 2050  
                   _comando 00FE            ?i2_UARTWriteTest 0001         setDutyPWM6@porcVelo 0019  
             _millisPassado 00B2                  ??_getAD_AN 003B                     _leitura 0100  
                ??___xxtofl 0029            ??i2_UARTReadChar 0001            ___awmod@dividend 001B  
                   _vdig_AN 00F2                     _testeAD 1C88              ??_UARTReadChar 0013  
                   _posicao 2050            ??i2_UARTSendChar 0001     valorConvUARTbit@unidade 0032  
                ??_configAD 0013                  ??_configDA 0033                  _setComando 349E  
      end_of_initialization 31BC              ??_UARTSendChar 0013           __end_of_myStrncmp 324E  
             __Lmediumconst 3EA4         i2___wmul@multiplier 0001                 ?_bitExtract 0013  
          bitExtract@numero 0013                  _moverMotor 2A66                   _RCSTAbits 000FAB  
    __end_of_UARTSendString 2C0C                     postdec1 000FE5                     postdec2 000FDD  
               testeADbit@i 00AC                     postinc0 000FEE                     postinc2 000FDE  
                _testeADbit 2578               ?_testeMotores 0001                     strcmp@l 0013  
                   strcmp@r 0015    __end_ofi2_UARTSendString 2CD2                   _PORTBbits 000F81  
       __end_of_getAD_ANbit 2984                 ___fladd@grs 0080                 ?_configBits 0001  
             i2_setDutyPWM0 337E               i2_setDutyPWM2 3358               i2_setDutyPWM4 3332  
             i2_setDutyPWM6 330C               ___xxtofl@sign 002D                   _TRISCbits 000F94  
               ___fldiv@grs 009C                 ___fldiv@rem 0095                 ___flmul@grs 0066  
             ??_configUSART 0013                 ?_ligaTimer0 0001                   _TXSTAbits 000FAC  
           UARTReadChar@ler 0013             ?_UARTSendString 00A0             testeADbit@F3520 00F0  
               ?_initTimer0 0013              ??_testeMotores 003B              __end_of___flge 288C  
            __end_of___fleq 2FA2              __end_of___wmul 330C                _readAD_ANbit 3412  
            __end_of_setPID 19D4      initTimer0@tempoInicial 0013            i2___wmul@product 0005  
            ?i2_setDutyPWM0 0007              ?i2_setDutyPWM2 0007              ?i2_setDutyPWM4 0007  
            ?i2_setDutyPWM6 0007              __end_of_strcmp 30C2         start_initialization 3178  
               __end_of_ISR 02E0                 ?_setComando 0001           ?_valorConvUARTbit 0025  
        ??_valorConvUARTbit 0027       valorConvUARTbit@F3476 003C             setDutyPWM0@velo 001B  
           setDutyPWM2@velo 001B               myStrncmp@str1 0018               myStrncmp@str2 001A  
           setDutyPWM4@velo 001B             setDutyPWM6@velo 001B                 ?_moverMotor 008D  
                  ??___flge 001B                    ??___fleq 001B         __end_of_configUSART 3450  
      __end_of_UARTReadChar 34B0                    ??___wmul 0017                 _getAD_ANbit 288C  
     valorConvUARTbit@valor 0025         i2UARTSendString@str 0002                 ?_testeADbit 0001  
               __pdataBANK0 00F4                    ??_setPID 003C        __end_of_UARTSendChar 3488  
                  ??_strcmp 0017                   ___fladd@a 0075                   ___fladd@b 0071  
                 ___fldiv@a 008D                   ___fldiv@b 0089                   ___flmul@a 0037  
                 ___flmul@b 0033                 __pbssCOMRAM 003C                   ___flsub@a 0085  
                 ___flsub@b 0081               __pcstackBANK0 0060               __pcstackBANK1 0128  
             UARTSendChar@c 0013                   __pintcode 0008               __pmediumconst 3EA4  
                  ?___fladd 0071                    ?___fldiv 0089                    ?___awdiv 0013  
                  ?___awmod 001B                    ?___flmul 0033                    ?___flsub 0081  
                  ?___fltol 0081                   _configPWM 33CA             ??i2_setDutyPWM0 0009  
           ??i2_setDutyPWM2 0009             ??i2_setDutyPWM4 0009             ??i2_setDutyPWM6 0009  
             ??_setDutyPWM0 001B               ??_setDutyPWM2 001B               ??_setDutyPWM4 001B  
             ??_setDutyPWM6 001B                _recebidoChar 004C                   _readAD_AN 2FA2  
                  ?_testeAD 0001                    ?_posicao 00A2        __end_of_testeMotores 0C18  
            ___wmul@product 0017                ??_bitExtract 0019                 _configUSART 3432  
                  _PIE1bits 000F9D             UARTSendString@i 00A6                   _myStrncmp 3212  
      valorConvUART@centena 0098                    i2u400_40 2CA6                    i2u400_47 2C9C  
                  i2u401_40 2CD0                    i2u401_41 2CCC                    i2u410_40 0164  
                  i2u402_40 0038                    i2u410_41 0160                    i2u402_41 0034  
                  i2u411_40 0196                    i2u403_40 0046                    i2u411_41 0192  
                  i2u403_41 0042                    i2u412_40 01C8                    i2u404_40 0054  
                  i2u412_41 01C4                    i2u404_41 0050                    i2u413_40 01FA  
                  i2u405_40 0072                    i2u413_41 01F6                    i2u405_41 006E  
                  i2u414_40 022C                    i2u406_40 009C                    i2u414_41 0228  
                  i2u406_41 0098                    i2u415_40 02A8                    i2u407_40 00CE  
                  i2u415_41 02A4                    i2u407_41 00CA                    i2u408_40 0100  
                  i2u408_41 00FC                    i2u409_40 0132                    i2u409_41 012E  
                  _PIR1bits 000F9E                    i2u348_40 346E                    i2u348_41 346A  
                  i2u397_40 2C36                    i2u397_41 2C32                    i2u398_40 2C66  
                  i2u398_47 2C5C                    i2u399_40 2C76                    i2u399_41 2C72  
             moverMotor@PID 008D               _PrintSensores 19D4                  ?_configPWM 0001  
      valorConvUART@unidade 009C                   configDA@i 0035                  _ADCON0bits 000FC2  
                posicao@pos 012C                  _ADCON1bits 000FC1                  _ADCON2bits 000FC0  
         ?i2_UARTSendString 0002               _UARTWriteTest 3450           ___wmul@multiplier 0013  
                  i2___wmul 33A4               _valorConvUART 2D96                   lados@lado 003B  
                ?_readAD_AN 0071                ??_configBits 0013          ??i2_UARTSendString 0006  
        __end_of_bitExtract 3178         __end_of_setDutyPWM0 32E6         __end_of_setDutyPWM2 32C0  
       __end_of_setDutyPWM4 329A         __end_of_setDutyPWM6 3274                   copy_data0 318C  
              ??_ligaTimer0 0001            ??_UARTSendString 00A4                  ?_myStrncmp 0018  
                  __Hrparam 0000                    __Lrparam 0000          __end_of_configBits 34BE  
            ?_PrintSensores 0001                ??_initTimer0 0015       i2___wmul@multiplicand 0003  
               _setPID$1590 00AC                 _setPID$1591 00B0                 _setPID$1589 00A8  
            ?_UARTWriteTest 0001              ?_valorConvUART 0091                    _getAD_AN 2464  
        __end_of_ligaTimer0 34BC                    ___xxtofl 1E9C                    __ptext10 1044  
                  __ptext11 2A66                    __ptext20 3412                    __ptext12 30C2  
                  __ptext21 2788                    __ptext13 324E                    __ptext30 19D4  
                  __ptext22 31CA                    __ptext14 3274                    __ptext31 2D96  
                  __ptext23 02E4                    __ptext15 329A                    __ptext40 2EF8  
                  __ptext32 2E48                    __ptext24 3494                    __ptext16 32C0  
                  __ptext41 2B40                    __ptext33 2CD2                    __ptext25 3432  
                  __ptext17 32E6                    __ptext50 2C0C                    __ptext42 347C  
                  __ptext34 2464                    __ptext26 33CA                    __ptext18 2202  
                  __ptext51 3488                    __ptext43 3450                    __ptext35 2FA2  
                  __ptext27 34BC                    __ptext19 288C                    __ptext52 3460  
                  __ptext36 1E9C                    __ptext28 33EE                    __ptext53 34B0  
                  __ptext45 330C                    __ptext37 0C18                    __ptext29 34A8  
                  __ptext54 349E                    __ptext46 3332                    __ptext38 311E  
                  __ptext55 34B8                    __ptext47 3358                    __ptext39 2680  
                  __ptext48 337E                    __ptext49 33A4                ??_setComando 0003  
                  _configAD 33EE                    _configDA 2202                _UARTReadChar 34A8  
        __end_of_initTimer0 349E                _UARTSendChar 347C                 bitExtract@k 0015  
                  _vanal_AN 00EA           getAD_ANbit@ANread 0023                ??_moverMotor 003C  
                  _porcVelo 00FC                    isa$xinst 000000               _testeLampadas 2336  
              ?_getAD_ANbit 0021                    _setpoint 00F8                    int$flags 004D  
              ??_testeADbit 00A8                 ??_configPWM 0013          __end_of_setComando 34A8  
               _setDutyPWM0 32C0                 _setDutyPWM2 329A                 _setDutyPWM4 3274  
               _setDutyPWM6 324E                 ??_readAD_AN 003B                  _INTCONbits 000FF2  
        __end_of_moverMotor 2B40           UARTSendString@str 00A0                    intlevel2 0000  
        __end_of_testeADbit 2680           bitExtract@posicao 0017                 ??_myStrncmp 001C  
         ??i2_UARTWriteTest 0001             ??_PrintSensores 00A8              ?_testeLampadas 0001  
                  posicao@i 0134             ??_UARTWriteTest 0013                _testeMotores 07A6  
           ??_valorConvUART 003B            getAD_ANbit@porta 0021               ___fladd@signs 007D  
              ___fladd@aexp 007E                ___fladd@bexp 007F                ?_configUSART 0001  
